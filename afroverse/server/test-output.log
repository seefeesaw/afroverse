
> afroverse-server@1.0.0 test
> jest

(node:52293) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
(Use `node --trace-warnings ...` to show where the warning was created)
FAIL tests/unit/config/s3.test.js
  S3 Config
    S3 Client Initialization
      ✕ should initialize S3 client when credentials are provided (5 ms)
      ✕ should not initialize S3 client when credentials are missing
      ✕ should use default region when not specified
    uploadFileToS3
      ✕ should upload file to S3 successfully
      ✕ should use custom bucket and options (1 ms)
      ✓ should return placeholder URL when S3 not configured
      ✕ should handle upload errors
    deleteFileFromS3
      ✕ should delete file from S3 successfully (1 ms)
      ✓ should not delete when S3 not configured
      ✕ should handle delete errors gracefully
    getSignedUrl
      ✕ should get signed URL successfully
      ✕ should use custom expiration
      ✓ should return placeholder URL when S3 not configured

  ● S3 Config › S3 Client Initialization › should initialize S3 client when credentials are provided

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"accessKeyId": "test-key", "region": "us-west-2", "secretAccessKey": "test-secret"}

    Number of calls: 0

      44 |       const freshS3Config = require('../../../src/config/s3');
      45 |
    > 46 |       expect(AWS.S3).toHaveBeenCalledWith({
         |                      ^
      47 |         accessKeyId: 'test-key',
      48 |         secretAccessKey: 'test-secret',
      49 |         region: 'us-west-2'

      at Object.toHaveBeenCalledWith (tests/unit/config/s3.test.js:46:22)

  ● S3 Config › S3 Client Initialization › should not initialize S3 client when credentials are missing

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "AWS credentials not configured - S3 uploads disabled"

    Number of calls: 0

      60 |
      61 |       expect(freshS3Config.isS3Configured).toBe(false);
    > 62 |       expect(logger.warn).toHaveBeenCalledWith('AWS credentials not configured - S3 uploads disabled');
         |                           ^
      63 |     });
      64 |
      65 |     it('should use default region when not specified', () => {

      at Object.toHaveBeenCalledWith (tests/unit/config/s3.test.js:62:27)

  ● S3 Config › S3 Client Initialization › should use default region when not specified

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"accessKeyId": "test-key", "region": "us-east-1", "secretAccessKey": "test-secret"}

    Number of calls: 0

      71 |       require('../../../src/config/s3');
      72 |
    > 73 |       expect(AWS.S3).toHaveBeenCalledWith({
         |                      ^
      74 |         accessKeyId: 'test-key',
      75 |         secretAccessKey: 'test-secret',
      76 |         region: 'us-east-1'

      at Object.toHaveBeenCalledWith (tests/unit/config/s3.test.js:73:22)

  ● S3 Config › uploadFileToS3 › should upload file to S3 successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/tmp/test.jpg"

    Number of calls: 0

      92 |       const url = await s3Config.uploadFileToS3(filePath, s3Key);
      93 |
    > 94 |       expect(fs.readFileSync).toHaveBeenCalledWith(filePath);
         |                               ^
      95 |       expect(mockS3Client.upload).toHaveBeenCalledWith(
      96 |         expect.objectContaining({
      97 |           Bucket: 'afroverse-uploads',

      at Object.toHaveBeenCalledWith (tests/unit/config/s3.test.js:94:31)

  ● S3 Config › uploadFileToS3 › should use custom bucket and options

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"ACL": "private", "Bucket": "custom-bucket", "ContentType": "image/jpeg"}

    Number of calls: 0

      116 |       await s3Config.uploadFileToS3(filePath, s3Key, options);
      117 |
    > 118 |       expect(mockS3Client.upload).toHaveBeenCalledWith(
          |                                   ^
      119 |         expect.objectContaining({
      120 |           Bucket: 'custom-bucket',
      121 |           ContentType: 'image/jpeg',

      at Object.toHaveBeenCalledWith (tests/unit/config/s3.test.js:118:35)

  ● S3 Config › uploadFileToS3 › should handle upload errors

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: "https://placeholder.s3.amazonaws.com/test.jpg"

      142 |       });
      143 |
    > 144 |       await expect(
          |             ^
      145 |         s3Config.uploadFileToS3('/tmp/test.jpg', 'test.jpg')
      146 |       ).rejects.toThrow('Upload failed');
      147 |       expect(logger.error).toHaveBeenCalledWith('S3 upload error:', error);

      at expect (node_modules/expect/build/index.js:113:15)
      at Object.expect (tests/unit/config/s3.test.js:144:13)

  ● S3 Config › deleteFileFromS3 › should delete file from S3 successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"Bucket": "afroverse-uploads", "Key": "uploads/test.jpg"}

    Number of calls: 0

      160 |       await s3Config.deleteFileFromS3(s3Key);
      161 |
    > 162 |       expect(mockS3Client.deleteObject).toHaveBeenCalledWith({
          |                                         ^
      163 |         Bucket: 'afroverse-uploads',
      164 |         Key: s3Key
      165 |       });

      at Object.toHaveBeenCalledWith (tests/unit/config/s3.test.js:162:41)

  ● S3 Config › deleteFileFromS3 › should handle delete errors gracefully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "S3 delete error:", [Error: Delete failed]

    Number of calls: 0

      183 |
      184 |       await expect(s3Config.deleteFileFromS3('test.jpg')).resolves.not.toThrow();
    > 185 |       expect(logger.error).toHaveBeenCalledWith('S3 delete error:', error);
          |                            ^
      186 |     });
      187 |   });
      188 |

      at Object.toHaveBeenCalledWith (tests/unit/config/s3.test.js:185:28)

  ● S3 Config › getSignedUrl › should get signed URL successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "getObject", ObjectContaining {"Bucket": "afroverse-uploads", "Expires": 3600, "Key": "uploads/test.jpg"}

    Number of calls: 0

      197 |       const url = await s3Config.getSignedUrl(s3Key);
      198 |
    > 199 |       expect(mockS3Client.getSignedUrl).toHaveBeenCalledWith(
          |                                         ^
      200 |         'getObject',
      201 |         expect.objectContaining({
      202 |           Bucket: 'afroverse-uploads',

      at Object.toHaveBeenCalledWith (tests/unit/config/s3.test.js:199:41)

  ● S3 Config › getSignedUrl › should use custom expiration

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "getObject", ObjectContaining {"Expires": {}}

    Number of calls: 0

      211 |       await s3Config.getSignedUrl('test.jpg', { expires: {} });
      212 |
    > 213 |       expect(mockS3Client.getSignedUrl).toHaveBeenCalledWith(
          |                                         ^
      214 |         'getObject',
      215 |         expect.objectContaining({
      216 |           Expires: {}

      at Object.toHaveBeenCalledWith (tests/unit/config/s3.test.js:213:41)

FAIL tests/unit/controllers/authController.test.js
  Auth Controller
    startAuth
      ✕ should send OTP for valid phone number (2 ms)
      ✕ should reject invalid phone format
      ✕ should continue even if WhatsApp fails (1 ms)
    verifyAuth
      ✕ should authenticate user with valid OTP
      ✕ should reject expired OTP
      ✕ should reject after max attempts
      ✕ should increment attempts on wrong OTP
    generateTokens
      ✕ should generate access and refresh tokens

  ● Auth Controller › startAuth › should send OTP for valid phone number

    TypeError: Cannot set properties of undefined (setting 'setEx')

      36 |     };
      37 |
    > 38 |     redisClient.setEx = jest.fn().mockResolvedValue('OK');
         |                      ^
      39 |     redisClient.get = jest.fn();
      40 |     redisClient.del = jest.fn().mockResolvedValue(1);
      41 |   });

      at Object.<anonymous> (tests/unit/controllers/authController.test.js:38:22)

  ● Auth Controller › startAuth › should reject invalid phone format

    TypeError: Cannot set properties of undefined (setting 'setEx')

      36 |     };
      37 |
    > 38 |     redisClient.setEx = jest.fn().mockResolvedValue('OK');
         |                      ^
      39 |     redisClient.get = jest.fn();
      40 |     redisClient.del = jest.fn().mockResolvedValue(1);
      41 |   });

      at Object.<anonymous> (tests/unit/controllers/authController.test.js:38:22)

  ● Auth Controller › startAuth › should continue even if WhatsApp fails

    TypeError: Cannot set properties of undefined (setting 'setEx')

      36 |     };
      37 |
    > 38 |     redisClient.setEx = jest.fn().mockResolvedValue('OK');
         |                      ^
      39 |     redisClient.get = jest.fn();
      40 |     redisClient.del = jest.fn().mockResolvedValue(1);
      41 |   });

      at Object.<anonymous> (tests/unit/controllers/authController.test.js:38:22)

  ● Auth Controller › verifyAuth › should authenticate user with valid OTP

    TypeError: Cannot set properties of undefined (setting 'setEx')

      36 |     };
      37 |
    > 38 |     redisClient.setEx = jest.fn().mockResolvedValue('OK');
         |                      ^
      39 |     redisClient.get = jest.fn();
      40 |     redisClient.del = jest.fn().mockResolvedValue(1);
      41 |   });

      at Object.<anonymous> (tests/unit/controllers/authController.test.js:38:22)

  ● Auth Controller › verifyAuth › should reject expired OTP

    TypeError: Cannot set properties of undefined (setting 'setEx')

      36 |     };
      37 |
    > 38 |     redisClient.setEx = jest.fn().mockResolvedValue('OK');
         |                      ^
      39 |     redisClient.get = jest.fn();
      40 |     redisClient.del = jest.fn().mockResolvedValue(1);
      41 |   });

      at Object.<anonymous> (tests/unit/controllers/authController.test.js:38:22)

  ● Auth Controller › verifyAuth › should reject after max attempts

    TypeError: Cannot set properties of undefined (setting 'setEx')

      36 |     };
      37 |
    > 38 |     redisClient.setEx = jest.fn().mockResolvedValue('OK');
         |                      ^
      39 |     redisClient.get = jest.fn();
      40 |     redisClient.del = jest.fn().mockResolvedValue(1);
      41 |   });

      at Object.<anonymous> (tests/unit/controllers/authController.test.js:38:22)

  ● Auth Controller › verifyAuth › should increment attempts on wrong OTP

    TypeError: Cannot set properties of undefined (setting 'setEx')

      36 |     };
      37 |
    > 38 |     redisClient.setEx = jest.fn().mockResolvedValue('OK');
         |                      ^
      39 |     redisClient.get = jest.fn();
      40 |     redisClient.del = jest.fn().mockResolvedValue(1);
      41 |   });

      at Object.<anonymous> (tests/unit/controllers/authController.test.js:38:22)

  ● Auth Controller › generateTokens › should generate access and refresh tokens

    TypeError: Cannot set properties of undefined (setting 'setEx')

      36 |     };
      37 |
    > 38 |     redisClient.setEx = jest.fn().mockResolvedValue('OK');
         |                      ^
      39 |     redisClient.get = jest.fn();
      40 |     redisClient.del = jest.fn().mockResolvedValue(1);
      41 |   });

      at Object.<anonymous> (tests/unit/controllers/authController.test.js:38:22)

FAIL tests/unit/services/walletService.test.js
  Wallet Service
    getOrCreateWallet
      ✓ should get or create a wallet for user (6 ms)
      ✓ should handle errors when getting wallet (9 ms)
      ✕ should return null for invalid userId (3 ms)
    getWallet
      ✕ should return wallet by userId
      ✕ should create wallet if not exists (1 ms)
    earnCoins
      ✕ should successfully earn coins (1 ms)
      ✓ should throw error for negative amount (1 ms)
      ✓ should throw error for zero amount (1 ms)
      ✓ should enforce daily earning limit (1 ms)
      ✕ should log earning event
    spendCoins
      ✕ should successfully spend coins
      ✕ should throw error for insufficient balance (16 ms)
      ✓ should throw error for negative amount (2 ms)
      ✕ should log spending event (1 ms)
      ✓ should handle database errors (1 ms)
    getTransactionHistory
      ✕ should return transaction history
      ✕ should apply pagination
      ✕ should filter by transaction type (1 ms)
      ✕ should handle empty history
    getBalance
      ✕ should return current balance (2 ms)
      ✕ should return 0 for new wallet (1 ms)
    canAfford
      ✕ should return true if user can afford
      ✕ should return false if user cannot afford
      ✕ should handle errors gracefully (1 ms)
    getEarningOpportunities
      ✕ should return list of earning opportunities
      ✕ should include daily login opportunity (17 ms)
      ✕ should include transformation opportunity (1 ms)
    getSpendingOptions
      ✕ should return list of spending options (1 ms)
      ✕ should include boost options
    getCoinPacks
      ✕ should return available coin packs (6 ms)
      ✕ should sort packs by price
    getActionCost
      ✕ should return cost for known action (1 ms)
      ✕ should return 0 for unknown action
      ✕ should return correct cost for save streak
    refundCoins
      ✕ should refund coins to user
      ✕ should create refund transaction
      ✕ should handle refund errors (1 ms)
    getWalletStats
      ✕ should return wallet statistics
      ✕ should calculate net earnings

  ● Wallet Service › getOrCreateWallet › should return null for invalid userId

    expect(received).toBeNull()

    Received: {"_id": "wallet123", "addCoins": [Function mockConstructor], "balance": 100, "canEarnToday": [Function mockConstructor], "createdAt": 2025-10-30T09:08:07.275Z, "dailyEarned": 50, "hasEnough": [Function mockConstructor], "lastEarnedAt": 2025-10-30T09:08:07.275Z, "save": [Function mockConstructor], "spendCoins": [Function mockConstructor], "toObject": [Function mockConstructor], "totalEarned": 200, "totalSpent": 100, "updatedAt": 2025-10-30T09:08:07.275Z, "userId": "user123"}

      94 |     it('should return null for invalid userId', async () => {
      95 |       const result = await walletService.getOrCreateWallet(null);
    > 96 |       expect(result).toBeNull();
         |                      ^
      97 |     });
      98 |   });
      99 |

      at Object.toBeNull (tests/unit/services/walletService.test.js:96:22)

  ● Wallet Service › getWallet › should return wallet by userId

    TypeError: walletService.getWallet is not a function

      100 |   describe('getWallet', () => {
      101 |     it('should return wallet by userId', async () => {
    > 102 |       const result = await walletService.getWallet('user123');
          |                                          ^
      103 |
      104 |       expect(Wallet.getOrCreateWallet).toHaveBeenCalledWith('user123');
      105 |       expect(result).toEqual(mockWallet);

      at Object.getWallet (tests/unit/services/walletService.test.js:102:42)

  ● Wallet Service › getWallet › should create wallet if not exists

    TypeError: walletService.getWallet is not a function

      109 |       Wallet.getOrCreateWallet.mockResolvedValueOnce(mockWallet);
      110 |
    > 111 |       const result = await walletService.getWallet('newuser');
          |                                          ^
      112 |
      113 |       expect(result).toEqual(mockWallet);
      114 |     });

      at Object.getWallet (tests/unit/services/walletService.test.js:111:42)

  ● Wallet Service › earnCoins › should successfully earn coins

    Invalid earning reason: 50

      122 |       const amount = customAmount || COIN_RATES[reason];
      123 |       if (!amount) {
    > 124 |         throw new Error(`Invalid earning reason: ${reason}`);
          |               ^
      125 |       }
      126 |       
      127 |       // Check daily limit

      at Object.earnCoins (src/services/walletService.js:124:15)
      at Object.<anonymous> (tests/unit/services/walletService.test.js:119:22)

  ● Wallet Service › earnCoins › should log earning event

    Invalid earning reason: 50

      122 |       const amount = customAmount || COIN_RATES[reason];
      123 |       if (!amount) {
    > 124 |         throw new Error(`Invalid earning reason: ${reason}`);
          |               ^
      125 |       }
      126 |       
      127 |       // Check daily limit

      at Object.earnCoins (src/services/walletService.js:124:15)
      at Object.<anonymous> (tests/unit/services/walletService.test.js:147:7)

  ● Wallet Service › spendCoins › should successfully spend coins

    Invalid spending reason: 25

      179 |       const amount = customAmount || COIN_COSTS[reason];
      180 |       if (!amount) {
    > 181 |         throw new Error(`Invalid spending reason: ${reason}`);
          |               ^
      182 |       }
      183 |       
      184 |       // Check if user has enough coins

      at Object.spendCoins (src/services/walletService.js:181:15)
      at Object.<anonymous> (tests/unit/services/walletService.test.js:155:22)

  ● Wallet Service › spendCoins › should throw error for insufficient balance

    expect(received).rejects.toThrow(expected)

    Expected substring: "Insufficient balance"
    Received message:   "Invalid spending reason: 200"

          179 |       const amount = customAmount || COIN_COSTS[reason];
          180 |       if (!amount) {
        > 181 |         throw new Error(`Invalid spending reason: ${reason}`);
              |               ^
          182 |       }
          183 |       
          184 |       // Check if user has enough coins

      at Object.spendCoins (src/services/walletService.js:181:15)
      at Object.<anonymous> (tests/unit/services/walletService.test.js:167:7)
      at Object.toThrow (node_modules/expect/build/index.js:218:22)
      at Object.toThrow (tests/unit/services/walletService.test.js:168:18)

  ● Wallet Service › spendCoins › should log spending event

    Invalid spending reason: 25

      179 |       const amount = customAmount || COIN_COSTS[reason];
      180 |       if (!amount) {
    > 181 |         throw new Error(`Invalid spending reason: ${reason}`);
          |               ^
      182 |       }
      183 |       
      184 |       // Check if user has enough coins

      at Object.spendCoins (src/services/walletService.js:181:15)
      at Object.<anonymous> (tests/unit/services/walletService.test.js:177:7)

  ● Wallet Service › getTransactionHistory › should return transaction history

    TypeError: WalletTransaction.find(...).sort(...).skip is not a function

      300 |       const transactions = await WalletTransaction.find(query)
      301 |         .sort({ createdAt: -1 })
    > 302 |         .skip((page - 1) * limit)
          |          ^
      303 |         .limit(limit);
      304 |       
      305 |       const total = await WalletTransaction.countDocuments(query);

      at Object.skip [as getTransactionHistory] (src/services/walletService.js:302:10)
      at Object.getTransactionHistory (tests/unit/services/walletService.test.js:193:42)

  ● Wallet Service › getTransactionHistory › should apply pagination

    TypeError: WalletTransaction.find(...).sort(...).skip is not a function

      300 |       const transactions = await WalletTransaction.find(query)
      301 |         .sort({ createdAt: -1 })
    > 302 |         .skip((page - 1) * limit)
          |          ^
      303 |         .limit(limit);
      304 |       
      305 |       const total = await WalletTransaction.countDocuments(query);

      at Object.skip [as getTransactionHistory] (src/services/walletService.js:302:10)
      at Object.getTransactionHistory (tests/unit/services/walletService.test.js:202:27)

  ● Wallet Service › getTransactionHistory › should filter by transaction type

    TypeError: WalletTransaction.find(...).sort(...).skip is not a function

      300 |       const transactions = await WalletTransaction.find(query)
      301 |         .sort({ createdAt: -1 })
    > 302 |         .skip((page - 1) * limit)
          |          ^
      303 |         .limit(limit);
      304 |       
      305 |       const total = await WalletTransaction.countDocuments(query);

      at Object.skip [as getTransactionHistory] (src/services/walletService.js:302:10)
      at Object.getTransactionHistory (tests/unit/services/walletService.test.js:208:27)

  ● Wallet Service › getTransactionHistory › should handle empty history

    TypeError: WalletTransaction.find(...).sort(...).skip is not a function

      300 |       const transactions = await WalletTransaction.find(query)
      301 |         .sort({ createdAt: -1 })
    > 302 |         .skip((page - 1) * limit)
          |          ^
      303 |         .limit(limit);
      304 |       
      305 |       const total = await WalletTransaction.countDocuments(query);

      at Object.skip [as getTransactionHistory] (src/services/walletService.js:302:10)
      at Object.getTransactionHistory (tests/unit/services/walletService.test.js:224:42)

  ● Wallet Service › getBalance › should return current balance

    TypeError: walletService.getBalance is not a function

      231 |   describe('getBalance', () => {
      232 |     it('should return current balance', async () => {
    > 233 |       const result = await walletService.getBalance('user123');
          |                                          ^
      234 |
      235 |       expect(result).toBe(100);
      236 |       expect(Wallet.getOrCreateWallet).toHaveBeenCalledWith('user123');

      at Object.getBalance (tests/unit/services/walletService.test.js:233:42)

  ● Wallet Service › getBalance › should return 0 for new wallet

    TypeError: walletService.getBalance is not a function

      240 |       mockWallet.balance = 0;
      241 |
    > 242 |       const result = await walletService.getBalance('user123');
          |                                          ^
      243 |
      244 |       expect(result).toBe(0);
      245 |     });

      at Object.getBalance (tests/unit/services/walletService.test.js:242:42)

  ● Wallet Service › canAfford › should return true if user can afford

    TypeError: walletService.canAfford is not a function

      250 |       mockWallet.hasEnough.mockReturnValueOnce(true);
      251 |
    > 252 |       const result = await walletService.canAfford('user123', 50);
          |                                          ^
      253 |
      254 |       expect(result).toBe(true);
      255 |       expect(mockWallet.hasEnough).toHaveBeenCalledWith(50);

      at Object.canAfford (tests/unit/services/walletService.test.js:252:42)

  ● Wallet Service › canAfford › should return false if user cannot afford

    TypeError: walletService.canAfford is not a function

      259 |       mockWallet.hasEnough.mockReturnValueOnce(false);
      260 |
    > 261 |       const result = await walletService.canAfford('user123', 200);
          |                                          ^
      262 |
      263 |       expect(result).toBe(false);
      264 |     });

      at Object.canAfford (tests/unit/services/walletService.test.js:261:42)

  ● Wallet Service › canAfford › should handle errors gracefully

    TypeError: walletService.canAfford is not a function

      267 |       Wallet.getOrCreateWallet.mockRejectedValueOnce(new Error('Error'));
      268 |
    > 269 |       const result = await walletService.canAfford('user123', 50);
          |                                          ^
      270 |
      271 |       expect(result).toBe(false);
      272 |       expect(logger.error).toHaveBeenCalled();

      at Object.canAfford (tests/unit/services/walletService.test.js:269:42)

  ● Wallet Service › getEarningOpportunities › should return list of earning opportunities

    User not found

      329 |       const user = await User.findById(userId);
      330 |       if (!user) {
    > 331 |         throw new Error('User not found');
          |               ^
      332 |       }
      333 |       
      334 |       const opportunities = [];

      at Object.getEarningOpportunities (src/services/walletService.js:331:15)
      at Object.<anonymous> (tests/unit/services/walletService.test.js:278:22)

  ● Wallet Service › getEarningOpportunities › should include daily login opportunity

    User not found

      329 |       const user = await User.findById(userId);
      330 |       if (!user) {
    > 331 |         throw new Error('User not found');
          |               ^
      332 |       }
      333 |       
      334 |       const opportunities = [];

      at Object.getEarningOpportunities (src/services/walletService.js:331:15)
      at Object.<anonymous> (tests/unit/services/walletService.test.js:290:22)

  ● Wallet Service › getEarningOpportunities › should include transformation opportunity

    User not found

      329 |       const user = await User.findById(userId);
      330 |       if (!user) {
    > 331 |         throw new Error('User not found');
          |               ^
      332 |       }
      333 |       
      334 |       const opportunities = [];

      at Object.getEarningOpportunities (src/services/walletService.js:331:15)
      at Object.<anonymous> (tests/unit/services/walletService.test.js:297:22)

  ● Wallet Service › getSpendingOptions › should return list of spending options

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Array
    Received constructor: Object

      306 |       const result = await walletService.getSpendingOptions();
      307 |
    > 308 |       expect(result).toBeInstanceOf(Array);
          |                      ^
      309 |       expect(result.length).toBeGreaterThan(0);
      310 |       result.forEach(option => {
      311 |         expect(option).toHaveProperty('action');

      at Object.toBeInstanceOf (tests/unit/services/walletService.test.js:308:22)

  ● Wallet Service › getSpendingOptions › should include boost options

    TypeError: result.find is not a function

      318 |       const result = await walletService.getSpendingOptions();
      319 |
    > 320 |       const boost = result.find(opt => opt.action === 'boost_video');
          |                            ^
      321 |       expect(boost).toBeDefined();
      322 |       expect(boost.cost).toBeGreaterThan(0);
      323 |     });

      at Object.find (tests/unit/services/walletService.test.js:320:28)

  ● Wallet Service › getCoinPacks › should return available coin packs

    expect(received).toHaveProperty(path)

    Expected path: "id"
    Received path: []

    Received value: {"bonus": null, "coins": 100, "price": 149, "priceFormatted": "$1.49", "type": "small"}

      331 |       expect(result.length).toBeGreaterThan(0);
      332 |       result.forEach(pack => {
    > 333 |         expect(pack).toHaveProperty('id');
          |                      ^
      334 |         expect(pack).toHaveProperty('coins');
      335 |         expect(pack).toHaveProperty('price');
      336 |       });

      at toHaveProperty (tests/unit/services/walletService.test.js:333:22)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/unit/services/walletService.test.js:332:14)

  ● Wallet Service › getCoinPacks › should sort packs by price

    expect(received).toBeGreaterThanOrEqual(expected)

    Matcher error: received value must be a number or bigint

    Received has value: undefined

      341 |
      342 |       for (let i = 1; i < result.length; i++) {
    > 343 |         expect(result[i].price.amount).toBeGreaterThanOrEqual(result[i - 1].price.amount);
          |                                        ^
      344 |       }
      345 |     });
      346 |   });

      at Object.toBeGreaterThanOrEqual (tests/unit/services/walletService.test.js:343:40)

  ● Wallet Service › getActionCost › should return cost for known action

    TypeError: walletService.getActionCost is not a function

      348 |   describe('getActionCost', () => {
      349 |     it('should return cost for known action', async () => {
    > 350 |       const cost = await walletService.getActionCost('boost_video');
          |                                        ^
      351 |
      352 |       expect(cost).toBeGreaterThan(0);
      353 |       expect(typeof cost).toBe('number');

      at Object.getActionCost (tests/unit/services/walletService.test.js:350:40)

  ● Wallet Service › getActionCost › should return 0 for unknown action

    TypeError: walletService.getActionCost is not a function

      355 |
      356 |     it('should return 0 for unknown action', async () => {
    > 357 |       const cost = await walletService.getActionCost('unknown_action');
          |                                        ^
      358 |
      359 |       expect(cost).toBe(0);
      360 |     });

      at Object.getActionCost (tests/unit/services/walletService.test.js:357:40)

  ● Wallet Service › getActionCost › should return correct cost for save streak

    TypeError: walletService.getActionCost is not a function

      361 |
      362 |     it('should return correct cost for save streak', async () => {
    > 363 |       const cost = await walletService.getActionCost('save_streak');
          |                                        ^
      364 |
      365 |       expect(cost).toBeGreaterThan(0);
      366 |     });

      at Object.getActionCost (tests/unit/services/walletService.test.js:363:40)

  ● Wallet Service › refundCoins › should refund coins to user

    TypeError: walletService.refundCoins is not a function

      369 |   describe('refundCoins', () => {
      370 |     it('should refund coins to user', async () => {
    > 371 |       const result = await walletService.refundCoins('user123', 50, 'refund_failed_boost');
          |                                          ^
      372 |
      373 |       expect(mockWallet.addCoins).toHaveBeenCalledWith(50);
      374 |       expect(WalletTransaction).toHaveBeenCalled();

      at Object.refundCoins (tests/unit/services/walletService.test.js:371:42)

  ● Wallet Service › refundCoins › should create refund transaction

    TypeError: walletService.refundCoins is not a function

      377 |
      378 |     it('should create refund transaction', async () => {
    > 379 |       await walletService.refundCoins('user123', 50, 'refund');
          |                           ^
      380 |
      381 |       expect(WalletTransaction).toHaveBeenCalledWith(
      382 |         expect.objectContaining({

      at Object.refundCoins (tests/unit/services/walletService.test.js:379:27)

  ● Wallet Service › refundCoins › should handle refund errors

    TypeError: walletService.refundCoins is not a function

      391 |       mockWallet.addCoins.mockRejectedValueOnce(new Error('Refund failed'));
      392 |
    > 393 |       await expect(walletService.refundCoins('user123', 50, 'refund'))
          |                                  ^
      394 |         .rejects.toThrow();
      395 |       expect(logger.error).toHaveBeenCalled();
      396 |     });

      at Object.refundCoins (tests/unit/services/walletService.test.js:393:34)

  ● Wallet Service › getWalletStats › should return wallet statistics

    TypeError: walletService.getWalletStats is not a function

      399 |   describe('getWalletStats', () => {
      400 |     it('should return wallet statistics', async () => {
    > 401 |       const result = await walletService.getWalletStats('user123');
          |                                          ^
      402 |
      403 |       expect(result).toHaveProperty('balance');
      404 |       expect(result).toHaveProperty('totalEarned');

      at Object.getWalletStats (tests/unit/services/walletService.test.js:401:42)

  ● Wallet Service › getWalletStats › should calculate net earnings

    TypeError: walletService.getWalletStats is not a function

      408 |
      409 |     it('should calculate net earnings', async () => {
    > 410 |       const result = await walletService.getWalletStats('user123');
          |                                          ^
      411 |
      412 |       expect(result.netEarnings).toBe(mockWallet.totalEarned - mockWallet.totalSpent);
      413 |     });

      at Object.getWalletStats (tests/unit/services/walletService.test.js:410:42)

FAIL tests/unit/queues/leaderboardQueue.test.js
  Leaderboard Queue
    Queue initialization
      ✕ should create leaderboard queue (6 ms)
    Job processors
      ✕ should register weekly reset processor
      ✓ should process weekly reset job
      ✓ should handle weekly reset errors

  ● Leaderboard Queue › Queue initialization › should create leaderboard queue

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "leaderboard queue", ObjectContaining {"redis": ObjectContaining {"host": Any<String>}}

    Number of calls: 0

      29 |   describe('Queue initialization', () => {
      30 |     it('should create leaderboard queue', () => {
    > 31 |       expect(Bull).toHaveBeenCalledWith('leaderboard queue', expect.objectContaining({
         |                    ^
      32 |         redis: expect.objectContaining({
      33 |           host: expect.any(String)
      34 |         })

      at Object.toHaveBeenCalledWith (tests/unit/queues/leaderboardQueue.test.js:31:20)

  ● Leaderboard Queue › Job processors › should register weekly reset processor

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "weekly-reset", Any<Function>

    Number of calls: 0

      39 |   describe('Job processors', () => {
      40 |     it('should register weekly reset processor', () => {
    > 41 |       expect(mockQueue.process).toHaveBeenCalledWith(
         |                                 ^
      42 |         'weekly-reset',
      43 |         expect.any(Function)
      44 |       );

      at Object.toHaveBeenCalledWith (tests/unit/queues/leaderboardQueue.test.js:41:33)

FAIL tests/unit/services/leaderboardService.test.js
  Leaderboard Service
    awardUserPoints
      ✕ should award points to user successfully (10 ms)
      ✕ should reject missing parameters (2 ms)
      ✕ should update country leaderboards when user has country (1 ms)
    awardTribePoints
      ✕ should award points to tribe successfully (2 ms)
    getLeaderboard
      ✕ should get user leaderboard (4 ms)
      ✕ should get tribe leaderboard (1 ms)
    getUserRank
      ✕ should get user rank (2 ms)

  ● Leaderboard Service › awardUserPoints › should award points to user successfully

    TypeError: LeaderboardService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     leaderboardService = new LeaderboardService();
         |                          ^
      25 |
      26 |     redisClient.zincrby = jest.fn().mockResolvedValue(100);
      27 |     redisClient.zscore = jest.fn().mockResolvedValue('150');

      at Object.<anonymous> (tests/unit/services/leaderboardService.test.js:24:26)

  ● Leaderboard Service › awardUserPoints › should reject missing parameters

    TypeError: LeaderboardService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     leaderboardService = new LeaderboardService();
         |                          ^
      25 |
      26 |     redisClient.zincrby = jest.fn().mockResolvedValue(100);
      27 |     redisClient.zscore = jest.fn().mockResolvedValue('150');

      at Object.<anonymous> (tests/unit/services/leaderboardService.test.js:24:26)

  ● Leaderboard Service › awardUserPoints › should update country leaderboards when user has country

    TypeError: LeaderboardService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     leaderboardService = new LeaderboardService();
         |                          ^
      25 |
      26 |     redisClient.zincrby = jest.fn().mockResolvedValue(100);
      27 |     redisClient.zscore = jest.fn().mockResolvedValue('150');

      at Object.<anonymous> (tests/unit/services/leaderboardService.test.js:24:26)

  ● Leaderboard Service › awardTribePoints › should award points to tribe successfully

    TypeError: LeaderboardService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     leaderboardService = new LeaderboardService();
         |                          ^
      25 |
      26 |     redisClient.zincrby = jest.fn().mockResolvedValue(100);
      27 |     redisClient.zscore = jest.fn().mockResolvedValue('150');

      at Object.<anonymous> (tests/unit/services/leaderboardService.test.js:24:26)

  ● Leaderboard Service › getLeaderboard › should get user leaderboard

    TypeError: LeaderboardService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     leaderboardService = new LeaderboardService();
         |                          ^
      25 |
      26 |     redisClient.zincrby = jest.fn().mockResolvedValue(100);
      27 |     redisClient.zscore = jest.fn().mockResolvedValue('150');

      at Object.<anonymous> (tests/unit/services/leaderboardService.test.js:24:26)

  ● Leaderboard Service › getLeaderboard › should get tribe leaderboard

    TypeError: LeaderboardService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     leaderboardService = new LeaderboardService();
         |                          ^
      25 |
      26 |     redisClient.zincrby = jest.fn().mockResolvedValue(100);
      27 |     redisClient.zscore = jest.fn().mockResolvedValue('150');

      at Object.<anonymous> (tests/unit/services/leaderboardService.test.js:24:26)

  ● Leaderboard Service › getUserRank › should get user rank

    TypeError: LeaderboardService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     leaderboardService = new LeaderboardService();
         |                          ^
      25 |
      26 |     redisClient.zincrby = jest.fn().mockResolvedValue(100);
      27 |     redisClient.zscore = jest.fn().mockResolvedValue('150');

      at Object.<anonymous> (tests/unit/services/leaderboardService.test.js:24:26)

(node:52289) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
(Use `node --trace-warnings ...` to show where the warning was created)
FAIL tests/unit/queues/transformQueue.test.js
  Transform Queue
    Queue initialization
      ✕ should create transform queue with correct configuration (8 ms)
    Job processor
      ✕ should register transform-image processor
      ✕ should process transformation job successfully (459 ms)
      ✕ should handle AI generation failure
      ✕ should handle missing transformation

  ● Transform Queue › Queue initialization › should create transform queue with correct configuration

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "transform", ObjectContaining {"defaultJobOptions": ObjectContaining {"attempts": 3, "backoff": ObjectContaining {"type": "exponential"}}, "redis": ObjectContaining {"host": Any<String>}}

    Number of calls: 0

      32 |   describe('Queue initialization', () => {
      33 |     it('should create transform queue with correct configuration', () => {
    > 34 |       expect(Queue).toHaveBeenCalledWith('transform', expect.objectContaining({
         |                     ^
      35 |         redis: expect.objectContaining({
      36 |           host: expect.any(String)
      37 |         }),

      at Object.toHaveBeenCalledWith (tests/unit/queues/transformQueue.test.js:34:21)

  ● Transform Queue › Job processor › should register transform-image processor

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "transform-image", Any<Function>

    Number of calls: 0

      48 |   describe('Job processor', () => {
      49 |     it('should register transform-image processor', () => {
    > 50 |       expect(mockQueue.process).toHaveBeenCalledWith(
         |                                 ^
      51 |         'transform-image',
      52 |         expect.any(Function)
      53 |       );

      at Object.toHaveBeenCalledWith (tests/unit/queues/transformQueue.test.js:50:33)

  ● Transform Queue › Job processor › should process transformation job successfully

    TypeError: Cannot read properties of undefined (reading '1')

      61 |       const processor = mockQueue.process.mock.calls.find(
      62 |         call => call[0] === 'transform-image'
    > 63 |       )[1];
         |        ^
      64 |
      65 |       const mockJob = {
      66 |         data: {

      at Object.<anonymous> (tests/unit/queues/transformQueue.test.js:63:8)

  ● Transform Queue › Job processor › should handle AI generation failure

    TypeError: Cannot read properties of undefined (reading '1')

      111 |       const processor = mockQueue.process.mock.calls.find(
      112 |         call => call[0] === 'transform-image'
    > 113 |       )[1];
          |        ^
      114 |
      115 |       const mockJob = {
      116 |         data: {

      at Object.<anonymous> (tests/unit/queues/transformQueue.test.js:113:8)

  ● Transform Queue › Job processor › should handle missing transformation

    TypeError: Cannot read properties of undefined (reading '1')

      137 |       const processor = mockQueue.process.mock.calls.find(
      138 |         call => call[0] === 'transform-image'
    > 139 |       )[1];
          |        ^
      140 |
      141 |       const mockJob = {
      142 |         data: {

      at Object.<anonymous> (tests/unit/queues/transformQueue.test.js:139:8)

FAIL tests/unit/services/fraudDetectionService.test.js
  Fraud Detection Service
    detectVoteFraud
      ✕ should detect vote fraud patterns (6 ms)
      ✕ should not detect fraud for normal voting (1 ms)
    detectMultiAccount
      ✕ should detect multi-account usage (1 ms)
    fraudTypes
      ✕ should have all required fraud types

  ● Fraud Detection Service › detectVoteFraud › should detect vote fraud patterns

    TypeError: FraudDetectionService is not a constructor

      21 |   beforeEach(() => {
      22 |     jest.clearAllMocks();
    > 23 |     fraudService = new FraudDetectionService();
         |                    ^
      24 |   });
      25 |
      26 |   describe('detectVoteFraud', () => {

      at Object.<anonymous> (tests/unit/services/fraudDetectionService.test.js:23:20)

  ● Fraud Detection Service › detectVoteFraud › should not detect fraud for normal voting

    TypeError: FraudDetectionService is not a constructor

      21 |   beforeEach(() => {
      22 |     jest.clearAllMocks();
    > 23 |     fraudService = new FraudDetectionService();
         |                    ^
      24 |   });
      25 |
      26 |   describe('detectVoteFraud', () => {

      at Object.<anonymous> (tests/unit/services/fraudDetectionService.test.js:23:20)

  ● Fraud Detection Service › detectMultiAccount › should detect multi-account usage

    TypeError: FraudDetectionService is not a constructor

      21 |   beforeEach(() => {
      22 |     jest.clearAllMocks();
    > 23 |     fraudService = new FraudDetectionService();
         |                    ^
      24 |   });
      25 |
      26 |   describe('detectVoteFraud', () => {

      at Object.<anonymous> (tests/unit/services/fraudDetectionService.test.js:23:20)

  ● Fraud Detection Service › fraudTypes › should have all required fraud types

    TypeError: FraudDetectionService is not a constructor

      21 |   beforeEach(() => {
      22 |     jest.clearAllMocks();
    > 23 |     fraudService = new FraudDetectionService();
         |                    ^
      24 |   });
      25 |
      26 |   describe('detectVoteFraud', () => {

      at Object.<anonymous> (tests/unit/services/fraudDetectionService.test.js:23:20)

FAIL tests/unit/queues/paymentQueue.test.js
  Payment Queue
    Queue initialization
      ✕ should create payment queue with correct configuration (5 ms)
    Job processors
      ✕ should register subscription expiry checker processor (1 ms)
      ✕ should register renewal reminder sender processor
      ✕ should process subscription expiry checker job
      ✕ should handle errors in subscription expiry checker
    Recurring jobs
      ✓ should schedule recurring subscription expiry check
      ✓ should have correct cron schedule for expiry checker

  ● Payment Queue › Queue initialization › should create payment queue with correct configuration

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "payment queue", ObjectContaining {"redis": ObjectContaining {"host": Any<String>, "port": Any<Number>}}

    Number of calls: 0

      30 |   describe('Queue initialization', () => {
      31 |     it('should create payment queue with correct configuration', () => {
    > 32 |       expect(Bull).toHaveBeenCalledWith('payment queue', expect.objectContaining({
         |                    ^
      33 |         redis: expect.objectContaining({
      34 |           host: expect.any(String),
      35 |           port: expect.any(Number)

      at Object.toHaveBeenCalledWith (tests/unit/queues/paymentQueue.test.js:32:20)

  ● Payment Queue › Job processors › should register subscription expiry checker processor

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "subscription-expiry-checker", Any<Function>

    Number of calls: 0

      41 |   describe('Job processors', () => {
      42 |     it('should register subscription expiry checker processor', () => {
    > 43 |       expect(mockQueue.process).toHaveBeenCalledWith(
         |                                 ^
      44 |         'subscription-expiry-checker',
      45 |         expect.any(Function)
      46 |       );

      at Object.toHaveBeenCalledWith (tests/unit/queues/paymentQueue.test.js:43:33)

  ● Payment Queue › Job processors › should register renewal reminder sender processor

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "send-renewal-reminder", Any<Function>

    Number of calls: 0

      48 |
      49 |     it('should register renewal reminder sender processor', () => {
    > 50 |       expect(mockQueue.process).toHaveBeenCalledWith(
         |                                 ^
      51 |         'send-renewal-reminder',
      52 |         expect.any(Function)
      53 |       );

      at Object.toHaveBeenCalledWith (tests/unit/queues/paymentQueue.test.js:50:33)

  ● Payment Queue › Job processors › should process subscription expiry checker job

    TypeError: Cannot read properties of undefined (reading '1')

      57 |       const processor = mockQueue.process.mock.calls.find(
      58 |         call => call[0] === 'subscription-expiry-checker'
    > 59 |       )[1];
         |        ^
      60 |
      61 |       subscriptionService.checkExpiredSubscriptions = jest.fn().mockResolvedValue({
      62 |         checked: 10,

      at Object.<anonymous> (tests/unit/queues/paymentQueue.test.js:59:8)

  ● Payment Queue › Job processors › should handle errors in subscription expiry checker

    TypeError: Cannot read properties of undefined (reading '1')

      78 |       const processor = mockQueue.process.mock.calls.find(
      79 |         call => call[0] === 'subscription-expiry-checker'
    > 80 |       )[1];
         |        ^
      81 |
      82 |       subscriptionService.checkExpiredSubscriptions = jest.fn().mockRejectedValue(
      83 |         new Error('Service error')

      at Object.<anonymous> (tests/unit/queues/paymentQueue.test.js:80:8)

FAIL tests/unit/sockets/socketService.test.js
  Socket Service
    initialize
      ✓ should initialize socket service (12 ms)
      ✓ should configure CORS correctly (5 ms)
    setupMiddleware
      ✓ should authenticate socket with valid token (4 ms)
      ✓ should reject socket without token (3 ms)
      ✓ should reject invalid token (1 ms)
      ✓ should reject inactive user (1 ms)
    emitLeaderboardUpdate
      ✕ should emit leaderboard update to room (2 ms)
    emitTransformationUpdate
      ✕ should emit transformation update to room (3 ms)

  ● Socket Service › emitLeaderboardUpdate › should emit leaderboard update to room

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "leaderboard:users:weekly"
    Received: "lb:users:weekly"

    Number of calls: 1

      187 |       });
      188 |
    > 189 |       expect(mockIO.to).toHaveBeenCalledWith('leaderboard:users:weekly');
          |                         ^
      190 |       expect(mockIO.emit).toHaveBeenCalledWith('leaderboard-update', expect.any(Object));
      191 |     });
      192 |   });

      at Object.toHaveBeenCalledWith (tests/unit/sockets/socketService.test.js:189:25)

  ● Socket Service › emitTransformationUpdate › should emit transformation update to room

    TypeError: socketService.emitTransformationUpdate is not a function

      197 |       mockIO.to.mockReturnThis();
      198 |
    > 199 |       socketService.emitTransformationUpdate('transform123', {
          |                     ^
      200 |         status: 'completed',
      201 |         progress: 100
      202 |       });

      at Object.emitTransformationUpdate (tests/unit/sockets/socketService.test.js:199:21)

FAIL tests/unit/services/notificationService.test.js
  Notification Service
    registerDispatcher
      ✕ should register a dispatcher for a channel
    setRulesEngine
      ✕ should set the rules engine
    sendNotification
      ✕ should send notification successfully
      ✕ should not send when user cannot receive notification (1 ms)
      ✕ should not send when template not found
      ✕ should not send when template validation fails
      ✕ should handle dispatcher not available
      ✕ should block notification when rules engine rejects
      ✕ should handle dispatch errors
    sendBulkNotification
      ✕ should send notifications to multiple users
      ✕ should handle individual failures (1 ms)

  ● Notification Service › registerDispatcher › should register a dispatcher for a channel

    TypeError: NotificationService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     notificationService = new NotificationService();
         |                           ^
      25 |
      26 |     mockUserSettings = {
      27 |       match: 'settings123',

      at Object.<anonymous> (tests/unit/services/notificationService.test.js:24:27)

  ● Notification Service › setRulesEngine › should set the rules engine

    TypeError: NotificationService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     notificationService = new NotificationService();
         |                           ^
      25 |
      26 |     mockUserSettings = {
      27 |       match: 'settings123',

      at Object.<anonymous> (tests/unit/services/notificationService.test.js:24:27)

  ● Notification Service › sendNotification › should send notification successfully

    TypeError: NotificationService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     notificationService = new NotificationService();
         |                           ^
      25 |
      26 |     mockUserSettings = {
      27 |       match: 'settings123',

      at Object.<anonymous> (tests/unit/services/notificationService.test.js:24:27)

  ● Notification Service › sendNotification › should not send when user cannot receive notification

    TypeError: NotificationService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     notificationService = new NotificationService();
         |                           ^
      25 |
      26 |     mockUserSettings = {
      27 |       match: 'settings123',

      at Object.<anonymous> (tests/unit/services/notificationService.test.js:24:27)

  ● Notification Service › sendNotification › should not send when template not found

    TypeError: NotificationService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     notificationService = new NotificationService();
         |                           ^
      25 |
      26 |     mockUserSettings = {
      27 |       match: 'settings123',

      at Object.<anonymous> (tests/unit/services/notificationService.test.js:24:27)

  ● Notification Service › sendNotification › should not send when template validation fails

    TypeError: NotificationService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     notificationService = new NotificationService();
         |                           ^
      25 |
      26 |     mockUserSettings = {
      27 |       match: 'settings123',

      at Object.<anonymous> (tests/unit/services/notificationService.test.js:24:27)

  ● Notification Service › sendNotification › should handle dispatcher not available

    TypeError: NotificationService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     notificationService = new NotificationService();
         |                           ^
      25 |
      26 |     mockUserSettings = {
      27 |       match: 'settings123',

      at Object.<anonymous> (tests/unit/services/notificationService.test.js:24:27)

  ● Notification Service › sendNotification › should block notification when rules engine rejects

    TypeError: NotificationService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     notificationService = new NotificationService();
         |                           ^
      25 |
      26 |     mockUserSettings = {
      27 |       match: 'settings123',

      at Object.<anonymous> (tests/unit/services/notificationService.test.js:24:27)

  ● Notification Service › sendNotification › should handle dispatch errors

    TypeError: NotificationService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     notificationService = new NotificationService();
         |                           ^
      25 |
      26 |     mockUserSettings = {
      27 |       match: 'settings123',

      at Object.<anonymous> (tests/unit/services/notificationService.test.js:24:27)

  ● Notification Service › sendBulkNotification › should send notifications to multiple users

    TypeError: NotificationService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     notificationService = new NotificationService();
         |                           ^
      25 |
      26 |     mockUserSettings = {
      27 |       match: 'settings123',

      at Object.<anonymous> (tests/unit/services/notificationService.test.js:24:27)

  ● Notification Service › sendBulkNotification › should handle individual failures

    TypeError: NotificationService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     notificationService = new NotificationService();
         |                           ^
      25 |
      26 |     mockUserSettings = {
      27 |       match: 'settings123',

      at Object.<anonymous> (tests/unit/services/notificationService.test.js:24:27)

FAIL tests/unit/services/subscriptionService.test.js
  Subscription Service
    checkExpiredSubscriptions
      ✕ should process expired subscriptions (1 ms)
      ✕ should handle errors gracefully
      ✕ should return empty results when no expired subscriptions (1 ms)
    sendRenewalReminders
      ✕ should send renewal reminders
      ✕ should not send duplicate reminders
      ✕ should handle errors when sending reminders
    sendRenewalReminder
      ✕ should send reminder for specific subscription
      ✕ should throw error if user not found
    getRenewalReminderMessage
      ✕ should return correct message for 7 days
      ✕ should return correct message for 3 days
      ✕ should return correct message for 1 day

  ● Subscription Service › checkExpiredSubscriptions › should process expired subscriptions

    TypeError: SubscriptionService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     subscriptionService = new SubscriptionService();
         |                           ^
      25 |
      26 |     mockSubscription = {
      27 |       _id: 'sub123',

      at Object.<anonymous> (tests/unit/services/subscriptionService.test.js:24:27)

  ● Subscription Service › checkExpiredSubscriptions › should handle errors gracefully

    TypeError: SubscriptionService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     subscriptionService = new SubscriptionService();
         |                           ^
      25 |
      26 |     mockSubscription = {
      27 |       _id: 'sub123',

      at Object.<anonymous> (tests/unit/services/subscriptionService.test.js:24:27)

  ● Subscription Service › checkExpiredSubscriptions › should return empty results when no expired subscriptions

    TypeError: SubscriptionService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     subscriptionService = new SubscriptionService();
         |                           ^
      25 |
      26 |     mockSubscription = {
      27 |       _id: 'sub123',

      at Object.<anonymous> (tests/unit/services/subscriptionService.test.js:24:27)

  ● Subscription Service › sendRenewalReminders › should send renewal reminders

    TypeError: SubscriptionService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     subscriptionService = new SubscriptionService();
         |                           ^
      25 |
      26 |     mockSubscription = {
      27 |       _id: 'sub123',

      at Object.<anonymous> (tests/unit/services/subscriptionService.test.js:24:27)

  ● Subscription Service › sendRenewalReminders › should not send duplicate reminders

    TypeError: SubscriptionService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     subscriptionService = new SubscriptionService();
         |                           ^
      25 |
      26 |     mockSubscription = {
      27 |       _id: 'sub123',

      at Object.<anonymous> (tests/unit/services/subscriptionService.test.js:24:27)

  ● Subscription Service › sendRenewalReminders › should handle errors when sending reminders

    TypeError: SubscriptionService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     subscriptionService = new SubscriptionService();
         |                           ^
      25 |
      26 |     mockSubscription = {
      27 |       _id: 'sub123',

      at Object.<anonymous> (tests/unit/services/subscriptionService.test.js:24:27)

  ● Subscription Service › sendRenewalReminder › should send reminder for specific subscription

    TypeError: SubscriptionService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     subscriptionService = new SubscriptionService();
         |                           ^
      25 |
      26 |     mockSubscription = {
      27 |       _id: 'sub123',

      at Object.<anonymous> (tests/unit/services/subscriptionService.test.js:24:27)

  ● Subscription Service › sendRenewalReminder › should throw error if user not found

    TypeError: SubscriptionService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     subscriptionService = new SubscriptionService();
         |                           ^
      25 |
      26 |     mockSubscription = {
      27 |       _id: 'sub123',

      at Object.<anonymous> (tests/unit/services/subscriptionService.test.js:24:27)

  ● Subscription Service › getRenewalReminderMessage › should return correct message for 7 days

    TypeError: SubscriptionService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     subscriptionService = new SubscriptionService();
         |                           ^
      25 |
      26 |     mockSubscription = {
      27 |       _id: 'sub123',

      at Object.<anonymous> (tests/unit/services/subscriptionService.test.js:24:27)

  ● Subscription Service › getRenewalReminderMessage › should return correct message for 3 days

    TypeError: SubscriptionService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     subscriptionService = new SubscriptionService();
         |                           ^
      25 |
      26 |     mockSubscription = {
      27 |       _id: 'sub123',

      at Object.<anonymous> (tests/unit/services/subscriptionService.test.js:24:27)

  ● Subscription Service › getRenewalReminderMessage › should return correct message for 1 day

    TypeError: SubscriptionService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     subscriptionService = new SubscriptionService();
         |                           ^
      25 |
      26 |     mockSubscription = {
      27 |       _id: 'sub123',

      at Object.<anonymous> (tests/unit/services/subscriptionService.test.js:24:27)

[32minfo[39m: Processing scheduled notifications {"service":"afroverse-api","timestamp":"2025-10-30 11:08:08"}
FAIL tests/unit/services/trustScoreService.test.js
  Trust Score Service
    ✕ should be defined (20 ms)
    createTrustScore
      ✕ should create trust score for user (4 ms)
    getTrustScoreByUser
      ✕ should get trust score by user (2 ms)
    checkUserPermissions
      ✕ should check user permissions (1 ms)

  ● Trust Score Service › should be defined

    TypeError: TrustScoreService is not a constructor

      16 |   beforeEach(() => {
      17 |     jest.clearAllMocks();
    > 18 |     trustScoreService = new TrustScoreService();
         |                         ^
      19 |   });
      20 |
      21 |   it('should be defined', () => {

      at Object.<anonymous> (tests/unit/services/trustScoreService.test.js:18:25)

  ● Trust Score Service › createTrustScore › should create trust score for user

    TypeError: TrustScoreService is not a constructor

      16 |   beforeEach(() => {
      17 |     jest.clearAllMocks();
    > 18 |     trustScoreService = new TrustScoreService();
         |                         ^
      19 |   });
      20 |
      21 |   it('should be defined', () => {

      at Object.<anonymous> (tests/unit/services/trustScoreService.test.js:18:25)

  ● Trust Score Service › getTrustScoreByUser › should get trust score by user

    TypeError: TrustScoreService is not a constructor

      16 |   beforeEach(() => {
      17 |     jest.clearAllMocks();
    > 18 |     trustScoreService = new TrustScoreService();
         |                         ^
      19 |   });
      20 |
      21 |   it('should be defined', () => {

      at Object.<anonymous> (tests/unit/services/trustScoreService.test.js:18:25)

  ● Trust Score Service › checkUserPermissions › should check user permissions

    TypeError: TrustScoreService is not a constructor

      16 |   beforeEach(() => {
      17 |     jest.clearAllMocks();
    > 18 |     trustScoreService = new TrustScoreService();
         |                         ^
      19 |   });
      20 |
      21 |   it('should be defined', () => {

      at Object.<anonymous> (tests/unit/services/trustScoreService.test.js:18:25)

FAIL tests/unit/models/Subscription.test.js
  Subscription Model
    Schema Validation
      ✓ should require userId field (4 ms)
      ✓ should require plan field (4 ms)
      ✓ should validate plan enum (4 ms)
      ✕ should create subscription with required fields (6 ms)

  ● Subscription Model › Schema Validation › should create subscription with required fields

    ValidationError: Subscription validation failed: price.amount: Path `price.amount` is required., providerRef: Path `providerRef` is required., expiresAt: Path `expiresAt` is required., startedAt: Path `startedAt` is required., product: Path `product` is required., provider: Path `provider` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

FAIL tests/unit/queues/queueManager.test.js
  Queue Manager
    getQueue
      ✓ should return queue by name with Queue suffix (2 ms)
      ✓ should return queue by full name
      ✓ should return null for non-existent queue (1 ms)
      ✓ should return all available queues
    initializeQueues
      ✕ should initialize all queues (1 ms)
      ✓ should resolve successfully (1 ms)
    queues object
      ✓ should have all expected queues (1 ms)

  ● Queue Manager › initializeQueues › should initialize all queues

    expect(received).toBeDefined()

    Received: undefined

      51 |     it('should initialize all queues', async () => {
      52 |       const result = await queueManager.initializeQueues();
    > 53 |       expect(result).toBeDefined();
         |                      ^
      54 |     });
      55 |
      56 |     it('should resolve successfully', async () => {

      at Object.toBeDefined (tests/unit/queues/queueManager.test.js:53:22)

FAIL tests/unit/models/User.test.js
  User Model
    Schema Validation
      ✓ should require phone field (14 ms)
      ✓ should require username field (4 ms)
      ✓ should create user with required fields (7 ms)
      ✓ should enforce unique phone constraint (19 ms)
      ✓ should enforce unique username constraint (37 ms)
    Default Values
      ✓ should set default subscription status (6 ms)
      ✓ should set default entitlements (26 ms)
      ✓ should set default limits (12 ms)
      ✕ should set default progression values (10 ms)
    Indexes
      ✓ should have indexes on phone and username (3 ms)
    Instance Methods
      ✓ should implement canTransform method if defined (7 ms)
    Virtual Fields
      ✓ should handle virtual fields if defined (5 ms)

  ● User Model › Default Values › should set default progression values

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

      109 |
      110 |       expect(user.progression.level).toBe(1);
    > 111 |       expect(user.progression.vibranium).toBe(0);
          |                                          ^
      112 |     });
      113 |   });
      114 |

      at Object.toBe (tests/unit/models/User.test.js:111:42)

FAIL tests/unit/models/Comment.test.js
  Comment Model
    Schema Validation
      ✕ should require videoId field (4 ms)
      ✕ should require userId field (15 ms)
      ✕ should create comment with required fields (9 ms)

  ● Comment Model › Schema Validation › should require videoId field

    ValidationError: Video validation failed: region: Path `region` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Comment Model › Schema Validation › should require userId field

    ValidationError: Video validation failed: region: Path `region` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Comment Model › Schema Validation › should create comment with required fields

    ValidationError: Video validation failed: region: Path `region` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

FAIL tests/unit/controllers/walletController.test.js
  Wallet Controller
    Module exports
      ✓ should be defined
      ✓ should be an object
      ✓ should have getWallet function
      ✓ should have earnCoins function
      ✓ should have spendCoins function (1 ms)
      ✓ should have purchaseCoins function
      ✓ should have getTransactionHistory function
      ✓ should have getEarningOpportunities function (1 ms)
      ✓ should have getSpendingOptions function
      ✓ should have getCoinPacks function
      ✓ should have checkAction function
      ✓ should have saveStreak function
      ✓ should have battleBoost function
      ✓ should have priorityTransformation function
      ✓ should have retryTransformation function
      ✓ should have tribeSupport function
    getWallet
      ✓ should return wallet info successfully
      ✓ should handle service errors (1 ms)
    earnCoins
      ✓ should earn coins successfully
      ✓ should return 400 if reason is missing
      ✓ should handle service errors (1 ms)
    spendCoins
      ✓ should spend coins successfully
      ✓ should return 400 if reason is missing
      ✓ should handle insufficient balance error
    purchaseCoins
      ✓ should purchase coins successfully
      ✓ should return 400 if packType is missing (1 ms)
      ✓ should return 400 if paymentId is missing
      ✓ should handle payment processing errors
    getTransactionHistory
      ✕ should return transaction history (2 ms)
      ✓ should handle errors
    getEarningOpportunities
      ✓ should return earning opportunities
    getSpendingOptions
      ✓ should return spending options
    getCoinPacks
      ✓ should return available coin packs
    checkAction
      ✕ should check if user can afford action
      ✓ should return 400 if action is missing
    saveStreak
      ✕ should save streak using coins
      ✓ should handle insufficient funds (1 ms)
    battleBoost
      ✕ should boost battle using coins (1 ms)
    priorityTransformation
      ✕ should prioritize transformation using coins (1 ms)
    retryTransformation
      ✕ should retry failed transformation using coins
    tribeSupport
      ✕ should support tribe using coins (1 ms)
      ✕ should handle errors

  ● Wallet Controller › getTransactionHistory › should return transaction history

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      "user123",
      Object {
    -   "limit": "20",
    -   "skip": "0",
    +   "endDate": undefined,
    +   "limit": 20,
    +   "page": 1,
    +   "reason": undefined,
    +   "startDate": undefined,
    +   "type": undefined,
      },

    Number of calls: 1

      283 |       await walletController.getTransactionHistory(req, res);
      284 |
    > 285 |       expect(walletService.getTransactionHistory).toHaveBeenCalledWith('user123', {
          |                                                   ^
      286 |         limit: '20',
      287 |         skip: '0'
      288 |       });

      at Object.toHaveBeenCalledWith (tests/unit/controllers/walletController.test.js:285:51)

  ● Wallet Controller › checkAction › should check if user can afford action

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "user123", "boost_video"

    Number of calls: 0

      371 |       await walletController.checkAction(req, res);
      372 |
    > 373 |       expect(walletService.checkAction).toHaveBeenCalledWith('user123', 'boost_video');
          |                                         ^
      374 |       expect(res.json).toHaveBeenCalledWith({
      375 |         success: true,
      376 |         ...mockResult

      at Object.toHaveBeenCalledWith (tests/unit/controllers/walletController.test.js:373:41)

  ● Wallet Controller › saveStreak › should save streak using coins

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "user123"

    Number of calls: 0

      399 |       await walletController.saveStreak(req, res);
      400 |
    > 401 |       expect(walletService.saveStreak).toHaveBeenCalledWith('user123');
          |                                        ^
      402 |       expect(res.json).toHaveBeenCalledWith({
      403 |         success: true,
      404 |         ...mockResult

      at Object.toHaveBeenCalledWith (tests/unit/controllers/walletController.test.js:401:40)

  ● Wallet Controller › battleBoost › should boost battle using coins

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "user123", "battle123"

    Number of calls: 0

      429 |       await walletController.battleBoost(req, res);
      430 |
    > 431 |       expect(walletService.battleBoost).toHaveBeenCalledWith('user123', 'battle123');
          |                                         ^
      432 |       expect(res.json).toHaveBeenCalledWith({
      433 |         success: true,
      434 |         ...mockResult

      at Object.toHaveBeenCalledWith (tests/unit/controllers/walletController.test.js:431:41)

  ● Wallet Controller › priorityTransformation › should prioritize transformation using coins

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "user123", "transform123"

    Number of calls: 0

      451 |       await walletController.priorityTransformation(req, res);
      452 |
    > 453 |       expect(walletService.priorityTransformation).toHaveBeenCalledWith('user123', 'transform123');
          |                                                    ^
      454 |       expect(res.json).toHaveBeenCalledWith({
      455 |         success: true,
      456 |         ...mockResult

      at Object.toHaveBeenCalledWith (tests/unit/controllers/walletController.test.js:453:52)

  ● Wallet Controller › retryTransformation › should retry failed transformation using coins

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "user123", "transform123"

    Number of calls: 0

      473 |       await walletController.retryTransformation(req, res);
      474 |
    > 475 |       expect(walletService.retryTransformation).toHaveBeenCalledWith('user123', 'transform123');
          |                                                 ^
      476 |       expect(res.json).toHaveBeenCalledWith({
      477 |         success: true,
      478 |         ...mockResult

      at Object.toHaveBeenCalledWith (tests/unit/controllers/walletController.test.js:475:49)

  ● Wallet Controller › tribeSupport › should support tribe using coins

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "user123"

    Number of calls: 0

      493 |       await walletController.tribeSupport(req, res);
      494 |
    > 495 |       expect(walletService.tribeSupport).toHaveBeenCalledWith('user123');
          |                                          ^
      496 |       expect(res.json).toHaveBeenCalledWith({
      497 |         success: true,
      498 |         ...mockResult

      at Object.toHaveBeenCalledWith (tests/unit/controllers/walletController.test.js:495:42)

  ● Wallet Controller › tribeSupport › should handle errors

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      505 |       await walletController.tribeSupport(req, res);
      506 |
    > 507 |       expect(logger.error).toHaveBeenCalled();
          |                            ^
      508 |       expect(res.status).toHaveBeenCalledWith(400);
      509 |     });
      510 |   });

      at Object.toHaveBeenCalled (tests/unit/controllers/walletController.test.js:507:28)

FAIL tests/unit/models/Vote.test.js
  Vote Model
    Schema Validation
      ✕ should require battleId field (6 ms)
      ✕ should require userId field (4 ms)
      ✕ should validate winner enum (6 ms)
      ✕ should create vote with valid winner (3 ms)

  ● Vote Model › Schema Validation › should require battleId field

    ValidationError: Battle validation failed: meta.challengeTarget: Path `meta.challengeTarget` is required., meta.challengeMethod: Path `meta.challengeMethod` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Vote Model › Schema Validation › should require userId field

    ValidationError: Battle validation failed: meta.challengeTarget: Path `meta.challengeTarget` is required., meta.challengeMethod: Path `meta.challengeMethod` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Vote Model › Schema Validation › should validate winner enum

    ValidationError: Battle validation failed: meta.challengeTarget: Path `meta.challengeTarget` is required., meta.challengeMethod: Path `meta.challengeMethod` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Vote Model › Schema Validation › should create vote with valid winner

    ValidationError: Battle validation failed: meta.challengeTarget: Path `meta.challengeTarget` is required., meta.challengeMethod: Path `meta.challengeMethod` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

FAIL tests/unit/middleware/auth.test.js
  Auth Middleware
    authenticateToken
      ✓ should authenticate valid token (1 ms)
      ✓ should reject request without token
      ✕ should reject invalid token format (1 ms)
      ✓ should reject invalid token type (1 ms)
      ✓ should handle JsonWebTokenError
      ✓ should handle TokenExpiredError
      ✓ should handle other errors (1 ms)
    optionalAuth
      ✓ should set userId when valid token provided
      ✓ should continue without authentication when no token (1 ms)
      ✓ should continue without authentication on invalid token
      ✓ should not set userId for non-access tokens

  ● Auth Middleware › authenticateToken › should reject invalid token format

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 401

    Number of calls: 0

      59 |       await authenticateToken(req, res, next);
      60 |
    > 61 |       expect(res.status).toHaveBeenCalledWith(401);
         |                          ^
      62 |       expect(res.json).toHaveBeenCalledWith({
      63 |         success: false,
      64 |         message: 'Access token required'

      at Object.toHaveBeenCalledWith (tests/unit/middleware/auth.test.js:61:26)

FAIL tests/unit/models/Battle.test.js
  Battle Model
    Schema Validation
      ✕ should require shortCode field (6 ms)
      ✕ should require share field (6 ms)
      ✕ should require challenger field (12 ms)
      ✕ should validate status enum values (9 ms)
      ✕ should create battle with required fields (12 ms)
    Default Values
      ✕ should set default status to pending (26 ms)
      ✕ should set default timeline.created (10 ms)
    Unique Constraints
      ✕ should enforce unique shortCode (2 ms)

  ● Battle Model › Schema Validation › should require shortCode field

    ValidationError: Transformation validation failed: jobId: Path `jobId` is required., shareCode: Path `shareCode` is required., ai.processingTime: Path `ai.processingTime` is required., ai.prompt: Path `ai.prompt` is required., result.height: Path `result.height` is required., result.width: Path `result.width` is required., result.style: Path `result.style` is required., result.thumbnailUrl: Path `result.thumbnailUrl` is required., result.url: Path `result.url` is required., original.size: Path `original.size` is required., original.filename: Path `original.filename` is required., original.height: Path `original.height` is required., original.width: Path `original.width` is required., original.url: Path `original.url` is required., userId: Path `userId` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Battle Model › Schema Validation › should require share field

    ValidationError: Transformation validation failed: jobId: Path `jobId` is required., shareCode: Path `shareCode` is required., ai.processingTime: Path `ai.processingTime` is required., ai.prompt: Path `ai.prompt` is required., result.height: Path `result.height` is required., result.width: Path `result.width` is required., result.style: Path `result.style` is required., result.thumbnailUrl: Path `result.thumbnailUrl` is required., result.url: Path `result.url` is required., original.size: Path `original.size` is required., original.filename: Path `original.filename` is required., original.height: Path `original.height` is required., original.width: Path `original.width` is required., original.url: Path `original.url` is required., userId: Path `userId` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Battle Model › Schema Validation › should require challenger field

    ValidationError: Transformation validation failed: jobId: Path `jobId` is required., shareCode: Path `shareCode` is required., ai.processingTime: Path `ai.processingTime` is required., ai.prompt: Path `ai.prompt` is required., result.height: Path `result.height` is required., result.width: Path `result.width` is required., result.style: Path `result.style` is required., result.thumbnailUrl: Path `result.thumbnailUrl` is required., result.url: Path `result.url` is required., original.size: Path `original.size` is required., original.filename: Path `original.filename` is required., original.height: Path `original.height` is required., original.width: Path `original.width` is required., original.url: Path `original.url` is required., userId: Path `userId` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Battle Model › Schema Validation › should validate status enum values

    ValidationError: Transformation validation failed: jobId: Path `jobId` is required., shareCode: Path `shareCode` is required., ai.processingTime: Path `ai.processingTime` is required., ai.prompt: Path `ai.prompt` is required., result.height: Path `result.height` is required., result.width: Path `result.width` is required., result.style: Path `result.style` is required., result.thumbnailUrl: Path `result.thumbnailUrl` is required., result.url: Path `result.url` is required., original.size: Path `original.size` is required., original.filename: Path `original.filename` is required., original.height: Path `original.height` is required., original.width: Path `original.width` is required., original.url: Path `original.url` is required., userId: Path `userId` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Battle Model › Schema Validation › should create battle with required fields

    ValidationError: Transformation validation failed: jobId: Path `jobId` is required., shareCode: Path `shareCode` is required., ai.processingTime: Path `ai.processingTime` is required., ai.prompt: Path `ai.prompt` is required., result.height: Path `result.height` is required., result.width: Path `result.width` is required., result.style: Path `result.style` is required., result.thumbnailUrl: Path `result.thumbnailUrl` is required., result.url: Path `result.url` is required., original.size: Path `original.size` is required., original.filename: Path `original.filename` is required., original.height: Path `original.height` is required., original.width: Path `original.width` is required., original.url: Path `original.url` is required., userId: Path `userId` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Battle Model › Default Values › should set default status to pending

    ValidationError: Transformation validation failed: jobId: Path `jobId` is required., shareCode: Path `shareCode` is required., ai.processingTime: Path `ai.processingTime` is required., ai.prompt: Path `ai.prompt` is required., result.height: Path `result.height` is required., result.width: Path `result.width` is required., result.style: Path `result.style` is required., result.thumbnailUrl: Path `result.thumbnailUrl` is required., result.url: Path `result.url` is required., original.size: Path `original.size` is required., original.filename: Path `original.filename` is required., original.height: Path `original.height` is required., original.width: Path `original.width` is required., original.url: Path `original.url` is required., userId: Path `userId` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Battle Model › Default Values › should set default timeline.created

    ValidationError: Transformation validation failed: jobId: Path `jobId` is required., shareCode: Path `shareCode` is required., ai.processingTime: Path `ai.processingTime` is required., ai.prompt: Path `ai.prompt` is required., result.height: Path `result.height` is required., result.width: Path `result.width` is required., result.style: Path `result.style` is required., result.thumbnailUrl: Path `result.thumbnailUrl` is required., result.url: Path `result.url` is required., original.size: Path `original.size` is required., original.filename: Path `original.filename` is required., original.height: Path `original.height` is required., original.width: Path `original.width` is required., original.url: Path `original.url` is required., userId: Path `userId` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Battle Model › Unique Constraints › should enforce unique shortCode

    ValidationError: Transformation validation failed: jobId: Path `jobId` is required., shareCode: Path `shareCode` is required., ai.processingTime: Path `ai.processingTime` is required., ai.prompt: Path `ai.prompt` is required., result.height: Path `result.height` is required., result.width: Path `result.width` is required., result.style: Path `result.style` is required., result.thumbnailUrl: Path `result.thumbnailUrl` is required., result.url: Path `result.url` is required., original.size: Path `original.size` is required., original.filename: Path `original.filename` is required., original.height: Path `original.height` is required., original.width: Path `original.width` is required., original.url: Path `original.url` is required., userId: Path `userId` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

FAIL tests/unit/models/Video.test.js
  Video Model
    Schema Validation
      ✓ should require ownerId field (11 ms)
      ✓ should require type field (8 ms)
      ✓ should validate type enum values (3 ms)
      ✕ should accept valid type enum values (4 ms)
      ✓ should require style field (3 ms)
      ✓ should require tribe field (3 ms)
      ✓ should require cdn fields (3 ms)
      ✕ should create video with all required fields (4 ms)
    Default Values
      ✕ should set default stats values (3 ms)

  ● Video Model › Schema Validation › should accept valid type enum values

    ValidationError: Video validation failed: region: Path `region` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Video Model › Schema Validation › should create video with all required fields

    ValidationError: Video validation failed: region: Path `region` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Video Model › Default Values › should set default stats values

    ValidationError: Video validation failed: region: Path `region` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

FAIL tests/unit/models/Notification.test.js
  Notification Model
    Schema Validation
      ✓ should require userId field (4 ms)
      ✓ should require type field (4 ms)
      ✕ should create notification with required fields (2 ms)
    Default Values
      ✕ should set default status to pending (2 ms)

  ● Notification Model › Schema Validation › should create notification with required fields

    ValidationError: Notification validation failed: channel: Path `channel` is required., type: `test_notification` is not a valid enum value for path `type`.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Notification Model › Default Values › should set default status to pending

    ValidationError: Notification validation failed: channel: Path `channel` is required., type: `test_notification` is not a valid enum value for path `type`.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

FAIL tests/unit/middleware/adminRBAC.test.js
  Admin RBAC Middleware
    requireRole
      ✕ should allow access for authorized role (1 ms)
      ✕ should reject unauthorized role (1 ms)
      ✕ should reject when no admin in request (1 ms)
    requirePermission
      ✕ should allow access when user has permission
      ✕ should reject when user lacks permission

  ● Admin RBAC Middleware › requireRole › should allow access for authorized role

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      36 |       middleware(req, res, next);
      37 |
    > 38 |       expect(next).toHaveBeenCalled();
         |                    ^
      39 |       expect(res.status).not.toHaveBeenCalled();
      40 |     });
      41 |

      at Object.toHaveBeenCalled (tests/unit/middleware/adminRBAC.test.js:38:20)

  ● Admin RBAC Middleware › requireRole › should reject unauthorized role

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 403
    Received: 500

    Number of calls: 1

      45 |       middleware(req, res, next);
      46 |
    > 47 |       expect(res.status).toHaveBeenCalledWith(403);
         |                          ^
      48 |       expect(next).not.toHaveBeenCalled();
      49 |     });
      50 |

      at Object.toHaveBeenCalledWith (tests/unit/middleware/adminRBAC.test.js:47:26)

  ● Admin RBAC Middleware › requireRole › should reject when no admin in request

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 401
    Received: 500

    Number of calls: 1

      54 |       middleware(req, res, next);
      55 |
    > 56 |       expect(res.status).toHaveBeenCalledWith(401);
         |                          ^
      57 |     });
      58 |   });
      59 |

      at Object.toHaveBeenCalledWith (tests/unit/middleware/adminRBAC.test.js:56:26)

  ● Admin RBAC Middleware › requirePermission › should allow access when user has permission

    TypeError: requirePermission is not a function

      61 |     it('should allow access when user has permission', () => {
      62 |       req.admin.hasPermission = jest.fn().mockReturnValue(true);
    > 63 |       const middleware = requirePermission('users', 'read');
         |                          ^
      64 |       middleware(req, res, next);
      65 |
      66 |       expect(next).toHaveBeenCalled();

      at Object.requirePermission (tests/unit/middleware/adminRBAC.test.js:63:26)

  ● Admin RBAC Middleware › requirePermission › should reject when user lacks permission

    TypeError: requirePermission is not a function

      70 |     it('should reject when user lacks permission', () => {
      71 |       req.admin.hasPermission = jest.fn().mockReturnValue(false);
    > 72 |       const middleware = requirePermission('users', 'write');
         |                          ^
      73 |       middleware(req, res, next);
      74 |
      75 |       expect(res.status).toHaveBeenCalledWith(403);

      at Object.requirePermission (tests/unit/middleware/adminRBAC.test.js:72:26)

FAIL tests/unit/utils/shortCodeGenerator.test.js
  Short Code Generator
    generateShortCode
      ✓ should generate a 6-character code (1 ms)
      ✓ should generate alphanumeric codes (1 ms)
      ✓ should generate different codes on each call
    generateUniqueShortCode
      ✓ should generate code without checkExists function
      ✓ should generate unique code when checkExists returns false
      ✓ should retry when code exists (1 ms)
      ✕ should throw error after max attempts (1 ms)

  ● Short Code Generator › generateUniqueShortCode › should throw error after max attempts

    expect(received).resolves.toBeUndefined()

    Received promise rejected instead of resolved
    Rejected to value: [Error: Unable to generate unique short code after maximum attempts]

      59 |       // This will loop 100 times then return undefined
      60 |       // The function should handle this gracefully
    > 61 |       await expect(generateUniqueShortCode(checkExists)).resolves.toBeUndefined();
         |             ^
      62 |       expect(checkExists).toHaveBeenCalledTimes(100);
      63 |     });
      64 |   });

      at expect (node_modules/expect/build/index.js:113:15)
      at Object.expect (tests/unit/utils/shortCodeGenerator.test.js:61:13)

FAIL tests/unit/models/Transformation.test.js
  Transformation Model
    Schema Validation
      ✓ should require ownerId field (10 ms)
      ✓ should require style field (5 ms)
      ✕ should create transformation with required fields (4 ms)
    Default Values
      ✕ should set default status (4 ms)

  ● Transformation Model › Schema Validation › should create transformation with required fields

    ValidationError: Transformation validation failed: jobId: Path `jobId` is required., shareCode: Path `shareCode` is required., ai.processingTime: Path `ai.processingTime` is required., ai.prompt: Path `ai.prompt` is required., result.height: Path `result.height` is required., result.width: Path `result.width` is required., result.style: Path `result.style` is required., result.thumbnailUrl: Path `result.thumbnailUrl` is required., result.url: Path `result.url` is required., original.size: Path `original.size` is required., original.filename: Path `original.filename` is required., original.height: Path `original.height` is required., original.width: Path `original.width` is required., original.url: Path `original.url` is required., userId: Path `userId` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Transformation Model › Default Values › should set default status

    ValidationError: Transformation validation failed: jobId: Path `jobId` is required., shareCode: Path `shareCode` is required., ai.processingTime: Path `ai.processingTime` is required., ai.prompt: Path `ai.prompt` is required., result.height: Path `result.height` is required., result.width: Path `result.width` is required., result.style: Path `result.style` is required., result.thumbnailUrl: Path `result.thumbnailUrl` is required., result.url: Path `result.url` is required., original.size: Path `original.size` is required., original.filename: Path `original.filename` is required., original.height: Path `original.height` is required., original.width: Path `original.width` is required., original.url: Path `original.url` is required., userId: Path `userId` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

FAIL tests/unit/models/Tribe.test.js
  Tribe Model
    Schema Validation
      ✓ should require name field (5 ms)
      ✓ should require code field (3 ms)
      ✕ should create tribe with required fields (3 ms)
      ✕ should enforce unique code constraint (2 ms)

  ● Tribe Model › Schema Validation › should create tribe with required fields

    ValidationError: Tribe validation failed: emblem.color: Path `emblem.color` is required., emblem.icon: Path `emblem.icon` is required., motto: Path `motto` is required., displayName: Path `displayName` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Tribe Model › Schema Validation › should enforce unique code constraint

    ValidationError: Tribe validation failed: emblem.color: Path `emblem.color` is required., emblem.icon: Path `emblem.icon` is required., motto: Path `motto` is required., displayName: Path `displayName` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

(node:52289) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
[33mwarn[39m: Stripe not configured - payments will be disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Face detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: NSFW detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Loaded 16 banned words {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Added moderation rule for type: image_upload {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Added moderation rule for type: text_content {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Added moderation rule for type: username {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Added moderation rule for type: tribe_name {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Added moderation rule for type: user_behavior {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Default moderation rules initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[33mwarn[39m: Stripe not configured - payments will be disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[33mwarn[39m: Stripe not configured - payments will be disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Face detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: NSFW detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Loaded 16 banned words {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Added moderation rule for type: image_upload {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Added moderation rule for type: text_content {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Added moderation rule for type: username {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Added moderation rule for type: tribe_name {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Added moderation rule for type: user_behavior {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Default moderation rules initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Face detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: NSFW detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Loaded 16 banned words {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Added moderation rule for type: image_upload {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Added moderation rule for type: text_content {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Added moderation rule for type: username {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Added moderation rule for type: tribe_name {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Added moderation rule for type: user_behavior {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Default moderation rules initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[33mwarn[39m: FullBodyVideoGenerationService is running in stub mode {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[33mwarn[39m: Stripe not configured - payments will be disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Face detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: NSFW detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Loaded 16 banned words {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Added moderation rule for type: image_upload {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Added moderation rule for type: text_content {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Added moderation rule for type: username {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Added moderation rule for type: tribe_name {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Added moderation rule for type: user_behavior {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Default moderation rules initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[33mwarn[39m: Stripe not configured - payments will be disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Text moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
(node:52288) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
(Use `node --trace-warnings ...` to show where the warning was created)
[33mwarn[39m: FullBodyVideoGenerationService is running in stub mode {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[33mwarn[39m: FullBodyVideoGenerationService is running in stub mode {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Face detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: NSFW detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Loaded 16 banned words {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Added moderation rule for type: image_upload {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Added moderation rule for type: text_content {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Added moderation rule for type: username {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Added moderation rule for type: tribe_name {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Added moderation rule for type: user_behavior {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Default moderation rules initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[33mwarn[39m: Stripe not configured - payments will be disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Text moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Face detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: NSFW detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Loaded 16 banned words {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
(node:52294) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
(Use `node --trace-warnings ...` to show where the warning was created)
[32minfo[39m: Added moderation rule for type: image_upload {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Added moderation rule for type: text_content {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Added moderation rule for type: username {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Added moderation rule for type: tribe_name {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Added moderation rule for type: user_behavior {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Default moderation rules initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Text moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
(node:52292) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
(Use `node --trace-warnings ...` to show where the warning was created)
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[33mwarn[39m: FullBodyVideoGenerationService is running in stub mode {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[33mwarn[39m: FullBodyVideoGenerationService is running in stub mode {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Text moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[32minfo[39m: Text moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
(node:52293) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
(node:52290) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
(Use `node --trace-warnings ...` to show where the warning was created)
[33mwarn[39m: FullBodyVideoGenerationService is running in stub mode {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
(node:52294) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52294) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52294) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserCosmetic", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52292) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52292) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52292) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserCosmetic", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52288) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52288) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserCosmetic", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
[32minfo[39m: Text moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:10"}
(node:52288) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52291) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
(Use `node --trace-warnings ...` to show where the warning was created)
(node:52293) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52293) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52293) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserCosmetic", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52290) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52290) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52290) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserCosmetic", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52291) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52291) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52291) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserCosmetic", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
PASS tests/integration/routes/fraudDetection.routes.test.js
  fraudDetection.routes
    ✓ should have routes defined (355 ms)

PASS tests/integration/routes/chat.routes.test.js
  chat.routes
    ✓ should have routes defined (417 ms)

PASS tests/integration/routes/leaderboard.routes.test.js
  leaderboard.routes
    ✓ should have routes defined (442 ms)

PASS tests/integration/routes/progression.routes.test.js
  progression.routes
    ✓ should have routes defined (239 ms)

PASS tests/integration/routes/moderation.routes.test.js
  moderation.routes
    ✓ should have routes defined (230 ms)

PASS tests/integration/routes/notification.routes.test.js
  notification.routes
    ✓ should have routes defined (226 ms)

PASS tests/unit/services/videoProcessingService.test.js
  videoProcessingService
    Module exports
      ✓ should be defined (62 ms)
      ✓ should be an object (14 ms)
      ✓ should have createVideoFromTransformation method (21 ms)
      ✓ should have createVideoFromSelfie method (11 ms)
      ✓ should have processVideoJob method (14 ms)
      ✓ should have validateUserEligibility method (7 ms)
      ✓ should have uploadVideo method (5 ms)
      ✓ should have uploadThumbnail method (7 ms)
      ✓ should have generateOGImage method (8 ms)
      ✓ should have updateUserVideoStats method (8 ms)
      ✓ should have getUserWallet method (16 ms)
      ✓ should have getVideoStatus method (11 ms)
      ✓ should have getUserVideoHistory method (8 ms)
      ✓ should have deleteVideo method (10 ms)
      ✓ should have incrementEngagement method (11 ms)
      ✓ should have incrementShareCount method (26 ms)
      ✓ should have updateVideoAnalytics method (15 ms)
      ✓ should have cleanupOldTempFiles method (13 ms)
      ✓ should have generateVideoReports method (12 ms)
      ✓ should have cleanupFailedJobs method (7 ms)
    createVideoFromTransformation
      ✓ should be defined (8 ms)
      ✓ should be a function (7 ms)
      ✓ should handle successful execution (9 ms)
      ✓ should handle errors gracefully (17 ms)
      ✓ should validate input parameters (9 ms)
    createVideoFromSelfie
      ✓ should be defined (6 ms)
      ✓ should be a function (5 ms)
      ✓ should handle successful execution (6 ms)
      ✓ should handle errors gracefully (6 ms)
      ✓ should validate input parameters (6 ms)
    processVideoJob
      ✓ should be defined (5 ms)
      ✓ should be a function (6 ms)
      ✓ should handle successful execution (9 ms)
      ✓ should handle errors gracefully (10 ms)
      ✓ should validate input parameters (9 ms)
    validateUserEligibility
      ✓ should be defined (13 ms)
      ✓ should be a function (23 ms)
      ✓ should handle successful execution (64 ms)
      ✓ should handle errors gracefully (7 ms)
      ✓ should validate input parameters (7 ms)
    uploadVideo
      ✓ should be defined (27 ms)
      ✓ should be a function (8 ms)
      ✓ should handle successful execution (15 ms)
      ✓ should handle errors gracefully (7 ms)
      ✓ should validate input parameters (18 ms)
    uploadThumbnail
      ✓ should be defined (7 ms)
      ✓ should be a function (28 ms)
      ✓ should handle successful execution (17 ms)
      ✓ should handle errors gracefully (53 ms)
      ✓ should validate input parameters (12 ms)
    generateOGImage
      ✓ should be defined (13 ms)
      ✓ should be a function (8 ms)
      ✓ should handle successful execution (9 ms)
      ✓ should handle errors gracefully (9 ms)
      ✓ should validate input parameters (10 ms)
    updateUserVideoStats
      ✓ should be defined (6 ms)
      ✓ should be a function (42 ms)
      ✓ should handle successful execution (13 ms)
      ✓ should handle errors gracefully (23 ms)
      ✓ should validate input parameters (6 ms)
    getUserWallet
      ✓ should be defined (5 ms)
      ✓ should be a function (6 ms)
      ✓ should handle successful execution (6 ms)
      ✓ should handle errors gracefully (6 ms)
      ✓ should validate input parameters (8 ms)
    getVideoStatus
      ✓ should be defined (51 ms)
      ✓ should be a function (27 ms)
      ✓ should handle successful execution (17 ms)
      ✓ should handle errors gracefully (15 ms)
      ✓ should validate input parameters (11 ms)
    getUserVideoHistory
      ✓ should be defined (9 ms)
      ✓ should be a function (12 ms)
      ✓ should handle successful execution (12 ms)
      ✓ should handle errors gracefully (20 ms)
      ✓ should validate input parameters (31 ms)
    deleteVideo
      ✓ should be defined (24 ms)
      ✓ should be a function (11 ms)
      ✓ should handle successful execution (12 ms)
      ✓ should handle errors gracefully (15 ms)
      ✓ should validate input parameters (5 ms)
    incrementEngagement
      ✓ should be defined (7 ms)
      ✓ should be a function (6 ms)
      ✓ should handle successful execution (9 ms)
      ✓ should handle errors gracefully (7 ms)
      ✓ should validate input parameters (7 ms)
    incrementShareCount
      ✓ should be defined (7 ms)
      ✓ should be a function (27 ms)
      ✓ should handle successful execution (18 ms)
      ✓ should handle errors gracefully (17 ms)
      ✓ should validate input parameters (28 ms)
    updateVideoAnalytics
      ✓ should be defined (25 ms)
      ✓ should be a function (14 ms)
      ✓ should handle successful execution (26 ms)
      ✓ should handle errors gracefully (6 ms)
      ✓ should validate input parameters (67 ms)
    cleanupOldTempFiles
      ✓ should be defined (107 ms)
      ✓ should be a function (59 ms)
      ✓ should handle successful execution (24 ms)
      ✓ should handle errors gracefully (12 ms)
      ✓ should validate input parameters (10 ms)
    generateVideoReports
      ✓ should be defined (12 ms)
      ✓ should be a function (8 ms)
      ✓ should handle successful execution (10 ms)
      ✓ should handle errors gracefully (8 ms)
      ✓ should validate input parameters (7 ms)
    cleanupFailedJobs
      ✓ should be defined (8 ms)
      ✓ should be a function (8 ms)
      ✓ should handle successful execution (7 ms)
      ✓ should handle errors gracefully (17 ms)
      ✓ should validate input parameters (8 ms)

(node:52290) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
[33mwarn[39m: Stripe not configured - payments will be disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:11"}
[32minfo[39m: Face detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:11"}
[32minfo[39m: NSFW detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:11"}
[32minfo[39m: Loaded 16 banned words {"service":"afroverse-api","timestamp":"2025-10-30 11:08:11"}
[32minfo[39m: Added moderation rule for type: image_upload {"service":"afroverse-api","timestamp":"2025-10-30 11:08:11"}
[32minfo[39m: Added moderation rule for type: text_content {"service":"afroverse-api","timestamp":"2025-10-30 11:08:11"}
[32minfo[39m: Added moderation rule for type: username {"service":"afroverse-api","timestamp":"2025-10-30 11:08:11"}
[32minfo[39m: Added moderation rule for type: tribe_name {"service":"afroverse-api","timestamp":"2025-10-30 11:08:11"}
[32minfo[39m: Added moderation rule for type: user_behavior {"service":"afroverse-api","timestamp":"2025-10-30 11:08:11"}
[32minfo[39m: Default moderation rules initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:11"}
[32minfo[39m: Moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:11"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:11"}
[33mwarn[39m: FullBodyVideoGenerationService is running in stub mode {"service":"afroverse-api","timestamp":"2025-10-30 11:08:11"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:11"}
[32minfo[39m: Text moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:11"}
(node:52288) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
(node:52290) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52290) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52293) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52293) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52294) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52294) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52288) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52288) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52288) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserCosmetic", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
PASS tests/integration/routes/achievement.routes.test.js
  achievement.routes
    ✓ should have routes defined (191 ms)

PASS tests/unit/services/streakService.test.js
  streakService
    Module exports
      ✓ should be defined (29 ms)
      ✓ should be an object (5 ms)
      ✓ should have markQualifyingAction method (5 ms)
      ✓ should have checkMilestoneBadges method (5 ms)
      ✓ should have useFreeze method (5 ms)
      ✓ should have grantFreeze method (5 ms)
      ✓ should have getStreakStatus method (4 ms)
      ✓ should have needsQualificationToday method (31 ms)
      ✓ should have getQualifyingActionsStatus method (13 ms)
      ✓ should have handleVoteIncrement method (3 ms)
      ✓ should have handleTransformCreation method (5 ms)
      ✓ should have handleBattleAction method (43 ms)
      ✓ should have handleDailyLogin method (20 ms)
    markQualifyingAction
      ✓ should be defined (6 ms)
      ✓ should be a function (5 ms)
      ✓ should handle successful execution (12 ms)
      ✓ should handle errors gracefully (5 ms)
      ✓ should validate input parameters (6 ms)
    checkMilestoneBadges
      ✓ should be defined (4 ms)
      ✓ should be a function (9 ms)
      ✓ should handle successful execution (8 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (3 ms)
    useFreeze
      ✓ should be defined (4 ms)
      ✓ should be a function (4 ms)
      ✓ should handle successful execution (4 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (4 ms)
    grantFreeze
      ✓ should be defined (4 ms)
      ✓ should be a function (4 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (12 ms)
      ✓ should validate input parameters (4 ms)
    getStreakStatus
      ✓ should be defined (5 ms)
      ✓ should be a function (6 ms)
      ✓ should handle successful execution (4 ms)
      ✓ should handle errors gracefully (5 ms)
      ✓ should validate input parameters (5 ms)
    needsQualificationToday
      ✓ should be defined (6 ms)
      ✓ should be a function (6 ms)
      ✓ should handle successful execution (6 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (6 ms)
    getQualifyingActionsStatus
      ✓ should be defined (4 ms)
      ✓ should be a function (5 ms)
      ✓ should handle successful execution (5 ms)
      ✓ should handle errors gracefully (5 ms)
      ✓ should validate input parameters (6 ms)
    handleVoteIncrement
      ✓ should be defined (4 ms)
      ✓ should be a function (4 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (5 ms)
      ✓ should validate input parameters (4 ms)
    handleTransformCreation
      ✓ should be defined (2 ms)
      ✓ should be a function (5 ms)
      ✓ should handle successful execution (5 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (4 ms)
    handleBattleAction
      ✓ should be defined (4 ms)
      ✓ should be a function (5 ms)
      ✓ should handle successful execution (12 ms)
      ✓ should handle errors gracefully (11 ms)
      ✓ should validate input parameters (6 ms)
    handleDailyLogin
      ✓ should be defined (6 ms)
      ✓ should be a function (6 ms)
      ✓ should handle successful execution (6 ms)
      ✓ should handle errors gracefully (10 ms)
      ✓ should validate input parameters (7 ms)

PASS tests/unit/services/creatorService.test.js
  creatorService
    Module exports
      ✓ should be defined (56 ms)
      ✓ should be an object (19 ms)
      ✓ should have getCreatorProfile method (30 ms)
      ✓ should have getCreatorFeed method (11 ms)
      ✓ should have followCreator method (7 ms)
      ✓ should have unfollowCreator method (9 ms)
      ✓ should have getFollowers method (8 ms)
      ✓ should have getFollowing method (43 ms)
      ✓ should have updateCreatorProfile method (6 ms)
      ✓ should have getCreatorStats method (36 ms)
      ✓ should have getTopCreators method (29 ms)
      ✓ should have updateCreatorStats method (8 ms)
      ✓ should have recalculateCreatorRank method (9 ms)
      ✓ should have getPublicSharePage method (10 ms)
    getCreatorProfile
      ✓ should be defined (4 ms)
      ✓ should be a function (4 ms)
      ✓ should handle successful execution (5 ms)
      ✓ should handle errors gracefully (13 ms)
      ✓ should validate input parameters (5 ms)
    getCreatorFeed
      ✓ should be defined (4 ms)
      ✓ should be a function (5 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (5 ms)
      ✓ should validate input parameters (4 ms)
    followCreator
      ✓ should be defined (6 ms)
      ✓ should be a function (5 ms)
      ✓ should handle successful execution (4 ms)
      ✓ should handle errors gracefully (11 ms)
      ✓ should validate input parameters (4 ms)
    unfollowCreator
      ✓ should be defined (4 ms)
      ✓ should be a function (6 ms)
      ✓ should handle successful execution (4 ms)
      ✓ should handle errors gracefully (7 ms)
      ✓ should validate input parameters (8 ms)
    getFollowers
      ✓ should be defined (7 ms)
      ✓ should be a function (7 ms)
      ✓ should handle successful execution (6 ms)
      ✓ should handle errors gracefully (6 ms)
      ✓ should validate input parameters (5 ms)
    getFollowing
      ✓ should be defined (7 ms)
      ✓ should be a function (6 ms)
      ✓ should handle successful execution (7 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (5 ms)
    updateCreatorProfile
      ✓ should be defined (4 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (5 ms)
      ✓ should handle errors gracefully (10 ms)
      ✓ should validate input parameters (5 ms)
    getCreatorStats
      ✓ should be defined (6 ms)
      ✓ should be a function (12 ms)
      ✓ should handle successful execution (12 ms)
      ✓ should handle errors gracefully (7 ms)
      ✓ should validate input parameters (6 ms)
    getTopCreators
      ✓ should be defined (8 ms)
      ✓ should be a function (9 ms)
      ✓ should handle successful execution (8 ms)
      ✓ should handle errors gracefully (9 ms)
      ✓ should validate input parameters (5 ms)
    updateCreatorStats
      ✓ should be defined (4 ms)
      ✓ should be a function (5 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (4 ms)
    recalculateCreatorRank
      ✓ should be defined (4 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (3 ms)
    getPublicSharePage
      ✓ should be defined (3 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (3 ms)

PASS tests/unit/services/commentService.test.js
  commentService
    Module exports
      ✓ should be defined (88 ms)
      ✓ should be an object (23 ms)
      ✓ should have getComments method (27 ms)
      ✓ should have getReplies method (7 ms)
      ✓ should have createComment method (10 ms)
      ✓ should have toggleLike method (9 ms)
      ✓ should have reportComment method (42 ms)
      ✓ should have deleteComment method (18 ms)
      ✓ should have pinComment method (46 ms)
      ✓ should have formatComment method (13 ms)
      ✓ should have validateRateLimit method (11 ms)
      ✓ should have checkTribeWar method (9 ms)
    getComments
      ✓ should be defined (6 ms)
      ✓ should be a function (5 ms)
      ✓ should handle successful execution (16 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (4 ms)
    getReplies
      ✓ should be defined (6 ms)
      ✓ should be a function (6 ms)
      ✓ should handle successful execution (6 ms)
      ✓ should handle errors gracefully (6 ms)
      ✓ should validate input parameters (6 ms)
    createComment
      ✓ should be defined (11 ms)
      ✓ should be a function (5 ms)
      ✓ should handle successful execution (8 ms)
      ✓ should handle errors gracefully (5 ms)
      ✓ should validate input parameters (7 ms)
    toggleLike
      ✓ should be defined (8 ms)
      ✓ should be a function (9 ms)
      ✓ should handle successful execution (8 ms)
      ✓ should handle errors gracefully (8 ms)
      ✓ should validate input parameters (6 ms)
    reportComment
      ✓ should be defined (6 ms)
      ✓ should be a function (7 ms)
      ✓ should handle successful execution (12 ms)
      ✓ should handle errors gracefully (6 ms)
      ✓ should validate input parameters (6 ms)
    deleteComment
      ✓ should be defined (5 ms)
      ✓ should be a function (9 ms)
      ✓ should handle successful execution (5 ms)
      ✓ should handle errors gracefully (7 ms)
      ✓ should validate input parameters (13 ms)
    pinComment
      ✓ should be defined (15 ms)
      ✓ should be a function (8 ms)
      ✓ should handle successful execution (8 ms)
      ✓ should handle errors gracefully (10 ms)
      ✓ should validate input parameters (11 ms)
    formatComment
      ✓ should be defined (10 ms)
      ✓ should be a function (6 ms)
      ✓ should handle successful execution (6 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (3 ms)
    validateRateLimit
      ✓ should be defined (3 ms)
      ✓ should be a function (5 ms)
      ✓ should handle successful execution (4 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (4 ms)
    checkTribeWar
      ✓ should be defined (5 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (4 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (3 ms)

PASS tests/unit/services/fullBodyVideoProcessingService.test.js
  fullBodyVideoProcessingService
    Module exports
      ✓ should be defined (130 ms)
      ✓ should be an object (24 ms)
      ✓ should have createFullBodyVideoJob method (9 ms)
      ✓ should have processFullBodyVideoJob method (17 ms)
      ✓ should have getAudioTrack method (8 ms)
      ✓ should have updateUserDailyLimits method (6 ms)
      ✓ should have getAvailableMotionPacks method (7 ms)
      ✓ should have getRecommendedMotionPacks method (9 ms)
      ✓ should have getFullBodyVideoStats method (9 ms)
    createFullBodyVideoJob
      ✓ should be defined (15 ms)
      ✓ should be a function (9 ms)
      ✓ should handle successful execution (10 ms)
      ✓ should handle errors gracefully (11 ms)
      ✓ should validate input parameters (9 ms)
    processFullBodyVideoJob
      ✓ should be defined (11 ms)
      ✓ should be a function (10 ms)
      ✓ should handle successful execution (9 ms)
      ✓ should handle errors gracefully (9 ms)
      ✓ should validate input parameters (11 ms)
    getAudioTrack
      ✓ should be defined (8 ms)
      ✓ should be a function (7 ms)
      ✓ should handle successful execution (9 ms)
      ✓ should handle errors gracefully (8 ms)
      ✓ should validate input parameters (9 ms)
    updateUserDailyLimits
      ✓ should be defined (25 ms)
      ✓ should be a function (11 ms)
      ✓ should handle successful execution (14 ms)
      ✓ should handle errors gracefully (16 ms)
      ✓ should validate input parameters (7 ms)
    getAvailableMotionPacks
      ✓ should be defined (8 ms)
      ✓ should be a function (6 ms)
      ✓ should handle successful execution (5 ms)
      ✓ should handle errors gracefully (7 ms)
      ✓ should validate input parameters (5 ms)
    getRecommendedMotionPacks
      ✓ should be defined (5 ms)
      ✓ should be a function (7 ms)
      ✓ should handle successful execution (6 ms)
      ✓ should handle errors gracefully (7 ms)
      ✓ should validate input parameters (7 ms)
    getFullBodyVideoStats
      ✓ should be defined (10 ms)
      ✓ should be a function (7 ms)
      ✓ should handle successful execution (10 ms)
      ✓ should handle errors gracefully (10 ms)
      ✓ should validate input parameters (7 ms)

PASS tests/unit/services/challengeService.test.js
  challengeService
    Module exports
      ✓ should be defined (71 ms)
      ✓ should be an object (8 ms)
      ✓ should have createTodaysDailyChallenge method (9 ms)
      ✓ should have createWeeklyChallenge method (16 ms)
      ✓ should have getUserDailyChallenge method (7 ms)
      ✓ should have getUserWeeklyChallenge method (7 ms)
      ✓ should have updateChallengeProgress method (7 ms)
      ✓ should have completeChallenge method (9 ms)
      ✓ should have updateTribeWeeklyChallenge method (7 ms)
      ✓ should have updateDailyStreak method (14 ms)
      ✓ should have updateWeeklyStreak method (10 ms)
      ✓ should have getUserChallengeStats method (7 ms)
      ✓ should have resetWeeklyChallenges method (10 ms)
      ✓ should have processWeeklyChallengeWinners method (10 ms)
    createTodaysDailyChallenge
      ✓ should be defined (10 ms)
      ✓ should be a function (9 ms)
      ✓ should handle successful execution (8 ms)
      ✓ should handle errors gracefully (8 ms)
      ✓ should validate input parameters (9 ms)
    createWeeklyChallenge
      ✓ should be defined (9 ms)
      ✓ should be a function (7 ms)
      ✓ should handle successful execution (7 ms)
      ✓ should handle errors gracefully (9 ms)
      ✓ should validate input parameters (7 ms)
    getUserDailyChallenge
      ✓ should be defined (10 ms)
      ✓ should be a function (23 ms)
      ✓ should handle successful execution (10 ms)
      ✓ should handle errors gracefully (11 ms)
      ✓ should validate input parameters (16 ms)
    getUserWeeklyChallenge
      ✓ should be defined (11 ms)
      ✓ should be a function (7 ms)
      ✓ should handle successful execution (6 ms)
      ✓ should handle errors gracefully (7 ms)
      ✓ should validate input parameters (6 ms)
    updateChallengeProgress
      ✓ should be defined (5 ms)
      ✓ should be a function (6 ms)
      ✓ should handle successful execution (6 ms)
      ✓ should handle errors gracefully (5 ms)
      ✓ should validate input parameters (6 ms)
    completeChallenge
      ✓ should be defined (7 ms)
      ✓ should be a function (11 ms)
      ✓ should handle successful execution (9 ms)
      ✓ should handle errors gracefully (8 ms)
      ✓ should validate input parameters (11 ms)
    updateTribeWeeklyChallenge
      ✓ should be defined (8 ms)
      ✓ should be a function (4 ms)
      ✓ should handle successful execution (15 ms)
      ✓ should handle errors gracefully (18 ms)
      ✓ should validate input parameters (13 ms)
    updateDailyStreak
      ✓ should be defined (6 ms)
      ✓ should be a function (6 ms)
      ✓ should handle successful execution (7 ms)
      ✓ should handle errors gracefully (5 ms)
      ✓ should validate input parameters (4 ms)
    updateWeeklyStreak
      ✓ should be defined (15 ms)
      ✓ should be a function (8 ms)
      ✓ should handle successful execution (7 ms)
      ✓ should handle errors gracefully (11 ms)
      ✓ should validate input parameters (12 ms)
    getUserChallengeStats
      ✓ should be defined (14 ms)
      ✓ should be a function (11 ms)
      ✓ should handle successful execution (8 ms)
      ✓ should handle errors gracefully (10 ms)
      ✓ should validate input parameters (5 ms)
    resetWeeklyChallenges
      ✓ should be defined (16 ms)
      ✓ should be a function (13 ms)
      ✓ should handle successful execution (19 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (10 ms)
    processWeeklyChallengeWinners
      ✓ should be defined (9 ms)
      ✓ should be a function (5 ms)
      ✓ should handle successful execution (6 ms)
      ✓ should handle errors gracefully (9 ms)
      ✓ should validate input parameters (11 ms)

PASS tests/unit/services/eventsService.test.js
  eventsService
    Module exports
      ✓ should be defined (107 ms)
      ✓ should be an object (11 ms)
      ✓ should have createClanWar method (16 ms)
      ✓ should have createPowerHour method (8 ms)
      ✓ should have initializeTribesForWar method (16 ms)
      ✓ should have updateClanWarScore method (7 ms)
      ✓ should have updateUserEventParticipation method (9 ms)
      ✓ should have getCurrentActiveEvent method (7 ms)
      ✓ should have getUpcomingEvent method (9 ms)
      ✓ should have getClanWarStandings method (7 ms)
      ✓ should have getPowerHourStatus method (15 ms)
      ✓ should have processClanWarCompletion method (7 ms)
      ✓ should have sendPowerHourNotification method (9 ms)
      ✓ should have getUserEventStats method (8 ms)
    createClanWar
      ✓ should be defined (11 ms)
      ✓ should be a function (11 ms)
      ✓ should handle successful execution (9 ms)
      ✓ should handle errors gracefully (9 ms)
      ✓ should validate input parameters (9 ms)
    createPowerHour
      ✓ should be defined (12 ms)
      ✓ should be a function (6 ms)
      ✓ should handle successful execution (7 ms)
      ✓ should handle errors gracefully (6 ms)
      ✓ should validate input parameters (9 ms)
    initializeTribesForWar
      ✓ should be defined (6 ms)
      ✓ should be a function (10 ms)
      ✓ should handle successful execution (23 ms)
      ✓ should handle errors gracefully (10 ms)
      ✓ should validate input parameters (11 ms)
    updateClanWarScore
      ✓ should be defined (16 ms)
      ✓ should be a function (11 ms)
      ✓ should handle successful execution (9 ms)
      ✓ should handle errors gracefully (8 ms)
      ✓ should validate input parameters (9 ms)
    updateUserEventParticipation
      ✓ should be defined (7 ms)
      ✓ should be a function (8 ms)
      ✓ should handle successful execution (8 ms)
      ✓ should handle errors gracefully (6 ms)
      ✓ should validate input parameters (10 ms)
    getCurrentActiveEvent
      ✓ should be defined (18 ms)
      ✓ should be a function (11 ms)
      ✓ should handle successful execution (15 ms)
      ✓ should handle errors gracefully (27 ms)
      ✓ should validate input parameters (11 ms)
    getUpcomingEvent
      ✓ should be defined (12 ms)
      ✓ should be a function (7 ms)
      ✓ should handle successful execution (7 ms)
      ✓ should handle errors gracefully (5 ms)
      ✓ should validate input parameters (5 ms)
    getClanWarStandings
      ✓ should be defined (11 ms)
      ✓ should be a function (10 ms)
      ✓ should handle successful execution (6 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (7 ms)
    getPowerHourStatus
      ✓ should be defined (8 ms)
      ✓ should be a function (6 ms)
      ✓ should handle successful execution (8 ms)
      ✓ should handle errors gracefully (10 ms)
      ✓ should validate input parameters (13 ms)
    processClanWarCompletion
      ✓ should be defined (8 ms)
      ✓ should be a function (9 ms)
      ✓ should handle successful execution (9 ms)
      ✓ should handle errors gracefully (16 ms)
      ✓ should validate input parameters (10 ms)
    sendPowerHourNotification
      ✓ should be defined (18 ms)
      ✓ should be a function (7 ms)
      ✓ should handle successful execution (9 ms)
      ✓ should handle errors gracefully (10 ms)
      ✓ should validate input parameters (5 ms)
    getUserEventStats
      ✓ should be defined (5 ms)
      ✓ should be a function (8 ms)
      ✓ should handle successful execution (12 ms)
      ✓ should handle errors gracefully (16 ms)
      ✓ should validate input parameters (52 ms)

[33mwarn[39m: Stripe not configured - payments will be disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:12"}
[32minfo[39m: Face detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:12"}
[32minfo[39m: NSFW detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:12"}
[32minfo[39m: Loaded 16 banned words {"service":"afroverse-api","timestamp":"2025-10-30 11:08:12"}
[32minfo[39m: Added moderation rule for type: image_upload {"service":"afroverse-api","timestamp":"2025-10-30 11:08:12"}
[32minfo[39m: Added moderation rule for type: text_content {"service":"afroverse-api","timestamp":"2025-10-30 11:08:12"}
[32minfo[39m: Added moderation rule for type: username {"service":"afroverse-api","timestamp":"2025-10-30 11:08:12"}
[32minfo[39m: Added moderation rule for type: tribe_name {"service":"afroverse-api","timestamp":"2025-10-30 11:08:12"}
[32minfo[39m: Added moderation rule for type: user_behavior {"service":"afroverse-api","timestamp":"2025-10-30 11:08:12"}
[32minfo[39m: Default moderation rules initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:12"}
[32minfo[39m: Moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:12"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:12"}
[33mwarn[39m: FullBodyVideoGenerationService is running in stub mode {"service":"afroverse-api","timestamp":"2025-10-30 11:08:12"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:12"}
[32minfo[39m: Text moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:12"}
(node:52292) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
PASS tests/unit/services/chatService.test.js
  chatService
    Module exports
      ✓ should be defined (26 ms)
      ✓ should be an object (6 ms)
      ✓ should have sendTribeMessage method (5 ms)
      ✓ should have sendDirectMessage method (3 ms)
      ✓ should have getTribeMessages method (3 ms)
      ✓ should have getDirectMessages method (9 ms)
      ✓ should have toggleReaction method (8 ms)
      ✓ should have markMessagesAsRead method (7 ms)
      ✓ should have muteUser method (6 ms)
      ✓ should have blockUser method (8 ms)
      ✓ should have getChatSettings method (8 ms)
      ✓ should have updateChatSettings method (3 ms)
      ✓ should have sendMentionNotifications method (2 ms)
      ✓ should have sendAnnouncementNotifications method (5 ms)
    sendTribeMessage
      ✓ should be defined (7 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (7 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (2 ms)
    sendDirectMessage
      ✓ should be defined (4 ms)
      ✓ should be a function (4 ms)
      ✓ should handle successful execution (6 ms)
      ✓ should handle errors gracefully (5 ms)
      ✓ should validate input parameters (6 ms)
    getTribeMessages
      ✓ should be defined (4 ms)
      ✓ should be a function (8 ms)
      ✓ should handle successful execution (33 ms)
      ✓ should handle errors gracefully (19 ms)
      ✓ should validate input parameters (9 ms)
    getDirectMessages
      ✓ should be defined (18 ms)
      ✓ should be a function (8 ms)
      ✓ should handle successful execution (5 ms)
      ✓ should handle errors gracefully (6 ms)
      ✓ should validate input parameters (6 ms)
    toggleReaction
      ✓ should be defined (9 ms)
      ✓ should be a function (7 ms)
      ✓ should handle successful execution (4 ms)
      ✓ should handle errors gracefully (8 ms)
      ✓ should validate input parameters (6 ms)
    markMessagesAsRead
      ✓ should be defined (5 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (4 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (4 ms)
    muteUser
      ✓ should be defined (7 ms)
      ✓ should be a function (5 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (5 ms)
    blockUser
      ✓ should be defined (2 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (6 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (3 ms)
    getChatSettings
      ✓ should be defined (4 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (4 ms)
    updateChatSettings
      ✓ should be defined (3 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (2 ms)
    sendMentionNotifications
      ✓ should be defined (7 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (18 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (18 ms)
    sendAnnouncementNotifications
      ✓ should be defined (38 ms)
      ✓ should be a function (11 ms)
      ✓ should handle successful execution (48 ms)
      ✓ should handle errors gracefully (14 ms)
      ✓ should validate input parameters (12 ms)

(node:52292) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52292) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52292) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserCosmetic", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
PASS tests/unit/services/boostService.test.js
  boostService
    Module exports
      ✓ should be defined (47 ms)
      ✓ should be an object (7 ms)
      ✓ should have boostVideo method (7 ms)
      ✓ should have boostTribe method (6 ms)
      ✓ should have getVideoBoost method (8 ms)
      ✓ should have getTribeBoost method (15 ms)
      ✓ should have getVideoMultiplier method (7 ms)
      ✓ should have updateBoostStats method (7 ms)
      ✓ should have processExpiredBoosts method (7 ms)
    boostVideo
      ✓ should be defined (7 ms)
      ✓ should be a function (6 ms)
      ✓ should handle successful execution (13 ms)
      ✓ should handle errors gracefully (6 ms)
      ✓ should validate input parameters (5 ms)
    boostTribe
      ✓ should be defined (4 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (7 ms)
      ✓ should handle errors gracefully (5 ms)
      ✓ should validate input parameters (5 ms)
    getVideoBoost
      ✓ should be defined (3 ms)
      ✓ should be a function (5 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (3 ms)
    getTribeBoost
      ✓ should be defined (8 ms)
      ✓ should be a function (9 ms)
      ✓ should handle successful execution (65 ms)
      ✓ should handle errors gracefully (64 ms)
      ✓ should validate input parameters (15 ms)
    getVideoMultiplier
      ✓ should be defined (17 ms)
      ✓ should be a function (16 ms)
      ✓ should handle successful execution (9 ms)
      ✓ should handle errors gracefully (18 ms)
      ✓ should validate input parameters (21 ms)
    updateBoostStats
      ✓ should be defined (10 ms)
      ✓ should be a function (9 ms)
      ✓ should handle successful execution (23 ms)
      ✓ should handle errors gracefully (5 ms)
      ✓ should validate input parameters (7 ms)
    processExpiredBoosts
      ✓ should be defined (6 ms)
      ✓ should be a function (6 ms)
      ✓ should handle successful execution (4 ms)
      ✓ should handle errors gracefully (6 ms)
      ✓ should validate input parameters (8 ms)

[33mwarn[39m: Stripe not configured - payments will be disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Face detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: NSFW detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Loaded 16 banned words {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Added moderation rule for type: image_upload {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Added moderation rule for type: text_content {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Added moderation rule for type: username {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Added moderation rule for type: tribe_name {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Added moderation rule for type: user_behavior {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Default moderation rules initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[33mwarn[39m: FullBodyVideoGenerationService is running in stub mode {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
PASS tests/unit/services/achievementService.test.js
  achievementService
    Module exports
      ✓ should be defined (41 ms)
      ✓ should be an object (18 ms)
      ✓ should have initializeAchievements method (20 ms)
      ✓ should have getAllAchievements method (7 ms)
      ✓ should have getUserAchievements method (5 ms)
      ✓ should have checkAchievements method (6 ms)
      ✓ should have applyReward method (17 ms)
      ✓ should have claimReward method (5 ms)
      ✓ should have getAchievementLeaderboard method (8 ms)
      ✓ should have getAchievementStats method (10 ms)
      ✓ should have resetUserAchievements method (4 ms)
    initializeAchievements
      ✓ should be defined (9 ms)
      ✓ should be a function (6 ms)
      ✓ should handle successful execution (11 ms)
      ✓ should handle errors gracefully (6 ms)
      ✓ should validate input parameters (5 ms)
    getAllAchievements
      ✓ should be defined (6 ms)
      ✓ should be a function (8 ms)
      ✓ should handle successful execution (7 ms)
      ✓ should handle errors gracefully (5 ms)
      ✓ should validate input parameters (8 ms)
    getUserAchievements
      ✓ should be defined (7 ms)
      ✓ should be a function (8 ms)
      ✓ should handle successful execution (4 ms)
      ✓ should handle errors gracefully (13 ms)
      ✓ should validate input parameters (5 ms)
    checkAchievements
      ✓ should be defined (2 ms)
      ✓ should be a function (53 ms)
      ✓ should handle successful execution (11 ms)
      ✓ should handle errors gracefully (10 ms)
      ✓ should validate input parameters (46 ms)
    applyReward
      ✓ should be defined (11 ms)
      ✓ should be a function (15 ms)
      ✓ should handle successful execution (16 ms)
      ✓ should handle errors gracefully (12 ms)
      ✓ should validate input parameters (15 ms)
    claimReward
      ✓ should be defined (32 ms)
      ✓ should be a function (9 ms)
      ✓ should handle successful execution (6 ms)
      ✓ should handle errors gracefully (26 ms)
      ✓ should validate input parameters (5 ms)
    getAchievementLeaderboard
      ✓ should be defined (6 ms)
      ✓ should be a function (6 ms)
      ✓ should handle successful execution (5 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (6 ms)
    getAchievementStats
      ✓ should be defined (5 ms)
      ✓ should be a function (7 ms)
      ✓ should handle successful execution (7 ms)
      ✓ should handle errors gracefully (8 ms)
      ✓ should validate input parameters (12 ms)
    resetUserAchievements
      ✓ should be defined (7 ms)
      ✓ should be a function (6 ms)
      ✓ should handle successful execution (4 ms)
      ✓ should handle errors gracefully (12 ms)
      ✓ should validate input parameters (9 ms)

[33mwarn[39m: Stripe not configured - payments will be disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Text moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
(node:52294) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
[32minfo[39m: Face detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: NSFW detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Loaded 16 banned words {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Added moderation rule for type: image_upload {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Added moderation rule for type: text_content {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Added moderation rule for type: username {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Added moderation rule for type: tribe_name {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Added moderation rule for type: user_behavior {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Default moderation rules initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
PASS tests/integration/routes/comment.routes.test.js
  comment.routes
    ✓ should have routes defined (194 ms)

[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[33mwarn[39m: FullBodyVideoGenerationService is running in stub mode {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Text moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
(node:52293) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
(node:52294) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52294) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52294) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserCosmetic", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
PASS tests/unit/services/tribeService.test.js
  tribeService
    Module exports
      ✓ should be defined (37 ms)
      ✓ should be an object (6 ms)
      ✓ should have awardPoints method (6 ms)
      ✓ should have checkVoteCap method (4 ms)
      ✓ should have awardBattleWin method (5 ms)
      ✓ should have awardBattleLoss method (8 ms)
      ✓ should have awardVotePoints method (5 ms)
      ✓ should have awardLoginBonus method (5 ms)
      ✓ should have awardStreakBonus method (5 ms)
      ✓ should have joinTribe method (3 ms)
      ✓ should have leaveTribe method (4 ms)
      ✓ should have switchTribe method (5 ms)
      ✓ should have getUserTribeSnapshot method (5 ms)
      ✓ should have weeklyReset method (5 ms)
      ✓ should have getLeaderboard method (4 ms)
      ✓ should have seedTribes method (6 ms)
    awardPoints
      ✓ should be defined (2 ms)
      ✓ should be a function (5 ms)
      ✓ should handle successful execution (25 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (3 ms)
    checkVoteCap
      ✓ should be defined (2 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (14 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (13 ms)
    awardBattleWin
      ✓ should be defined (21 ms)
      ✓ should be a function (11 ms)
      ✓ should handle successful execution (10 ms)
      ✓ should handle errors gracefully (17 ms)
      ✓ should validate input parameters (36 ms)
    awardBattleLoss
      ✓ should be defined (15 ms)
      ✓ should be a function (10 ms)
      ✓ should handle successful execution (21 ms)
      ✓ should handle errors gracefully (8 ms)
      ✓ should validate input parameters (39 ms)
    awardVotePoints
      ✓ should be defined (12 ms)
      ✓ should be a function (9 ms)
      ✓ should handle successful execution (26 ms)
      ✓ should handle errors gracefully (7 ms)
      ✓ should validate input parameters (7 ms)
    awardLoginBonus
      ✓ should be defined (6 ms)
      ✓ should be a function (6 ms)
      ✓ should handle successful execution (6 ms)
      ✓ should handle errors gracefully (8 ms)
      ✓ should validate input parameters (5 ms)
    awardStreakBonus
      ✓ should be defined (7 ms)
      ✓ should be a function (12 ms)
      ✓ should handle successful execution (5 ms)
      ✓ should handle errors gracefully (5 ms)
      ✓ should validate input parameters (5 ms)
    joinTribe
      ✓ should be defined (3 ms)
      ✓ should be a function (9 ms)
      ✓ should handle successful execution (9 ms)
      ✓ should handle errors gracefully (10 ms)
      ✓ should validate input parameters (34 ms)
    leaveTribe
      ✓ should be defined (6 ms)
      ✓ should be a function (7 ms)
      ✓ should handle successful execution (9 ms)
      ✓ should handle errors gracefully (9 ms)
      ✓ should validate input parameters (39 ms)
    switchTribe
      ✓ should be defined (5 ms)
      ✓ should be a function (11 ms)
      ✓ should handle successful execution (19 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (9 ms)
    getUserTribeSnapshot
      ✓ should be defined (4 ms)
      ✓ should be a function (4 ms)
      ✓ should handle successful execution (12 ms)
      ✓ should handle errors gracefully (23 ms)
      ✓ should validate input parameters (9 ms)
    weeklyReset
      ✓ should be defined (7 ms)
      ✓ should be a function (5 ms)
      ✓ should handle successful execution (14 ms)
      ✓ should handle errors gracefully (10 ms)
      ✓ should validate input parameters (4 ms)
    getLeaderboard
      ✓ should be defined (4 ms)
      ✓ should be a function (6 ms)
      ✓ should handle successful execution (24 ms)
      ✓ should handle errors gracefully (7 ms)
      ✓ should validate input parameters (3 ms)
    seedTribes
      ✓ should be defined (21 ms)
      ✓ should be a function (4 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (5 ms)

[33mwarn[39m: Stripe not configured - payments will be disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Face detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: NSFW detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Loaded 16 banned words {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Added moderation rule for type: image_upload {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Added moderation rule for type: text_content {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Added moderation rule for type: username {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Added moderation rule for type: tribe_name {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Added moderation rule for type: user_behavior {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Default moderation rules initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
(node:52293) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52293) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52293) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserCosmetic", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[33mwarn[39m: FullBodyVideoGenerationService is running in stub mode {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Text moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
(node:52288) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
[33mwarn[39m: Stripe not configured - payments will be disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Face detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: NSFW detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Loaded 16 banned words {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Added moderation rule for type: image_upload {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Added moderation rule for type: text_content {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Added moderation rule for type: username {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Added moderation rule for type: tribe_name {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Added moderation rule for type: user_behavior {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Default moderation rules initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
[32minfo[39m: Moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:13"}
PASS tests/integration/routes/payment.routes.test.js
  payment.routes
    ✓ should have routes defined (391 ms)

[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[33mwarn[39m: FullBodyVideoGenerationService is running in stub mode {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
PASS tests/integration/routes/wallet.routes.test.js
  wallet.routes
    ✓ should have routes defined (263 ms)

[32minfo[39m: Text moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
(node:52291) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
[33mwarn[39m: Stripe not configured - payments will be disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Face detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: NSFW detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Loaded 16 banned words {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Added moderation rule for type: image_upload {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Added moderation rule for type: text_content {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Added moderation rule for type: username {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Added moderation rule for type: tribe_name {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Added moderation rule for type: user_behavior {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Default moderation rules initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
(node:52288) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52288) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserCosmetic", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52288) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[33mwarn[39m: FullBodyVideoGenerationService is running in stub mode {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[33mwarn[39m: Stripe not configured - payments will be disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Text moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Face detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: NSFW detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Loaded 16 banned words {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Added moderation rule for type: image_upload {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Added moderation rule for type: text_content {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Added moderation rule for type: username {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Added moderation rule for type: tribe_name {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Added moderation rule for type: user_behavior {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Default moderation rules initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
(node:52290) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[33mwarn[39m: FullBodyVideoGenerationService is running in stub mode {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
(node:52291) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52291) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
[32minfo[39m: Text moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
(node:52291) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserCosmetic", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52292) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
PASS tests/integration/routes/auth.routes.test.js
  auth.routes
    ✓ should have routes defined (302 ms)

(node:52290) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52290) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52290) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserCosmetic", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52292) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52292) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52292) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserCosmetic", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
PASS tests/integration/routes/tribe.routes.test.js
  tribe.routes
    ✓ should have routes defined (376 ms)

PASS tests/integration/routes/creator.routes.test.js
  creator.routes
    ✓ should have routes defined (265 ms)

[33mwarn[39m: Stripe not configured - payments will be disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[33mwarn[39m: Stripe not configured - payments will be disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Face detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: NSFW detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Loaded 16 banned words {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Added moderation rule for type: image_upload {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Added moderation rule for type: text_content {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Added moderation rule for type: username {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Added moderation rule for type: tribe_name {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Added moderation rule for type: user_behavior {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Default moderation rules initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Face detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: NSFW detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Loaded 16 banned words {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Added moderation rule for type: image_upload {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Added moderation rule for type: text_content {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Added moderation rule for type: username {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Added moderation rule for type: tribe_name {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Added moderation rule for type: user_behavior {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Default moderation rules initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[33mwarn[39m: FullBodyVideoGenerationService is running in stub mode {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[33mwarn[39m: FullBodyVideoGenerationService is running in stub mode {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Text moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
(node:52293) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
PASS tests/integration/routes/video.routes.test.js
  video.routes
    ✓ should have routes defined (200 ms)

[32minfo[39m: Text moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
(node:52294) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
[33mwarn[39m: Stripe not configured - payments will be disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:14"}
[32minfo[39m: Face detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: NSFW detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Loaded 16 banned words {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Added moderation rule for type: image_upload {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Added moderation rule for type: text_content {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Added moderation rule for type: username {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Added moderation rule for type: tribe_name {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Added moderation rule for type: user_behavior {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Default moderation rules initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
(node:52294) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52294) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52294) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserCosmetic", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52293) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52293) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52293) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserCosmetic", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
[33mwarn[39m: Stripe not configured - payments will be disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Face detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: NSFW detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Loaded 16 banned words {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Added moderation rule for type: image_upload {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Added moderation rule for type: text_content {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Added moderation rule for type: username {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Added moderation rule for type: tribe_name {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Added moderation rule for type: user_behavior {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Default moderation rules initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[33mwarn[39m: FullBodyVideoGenerationService is running in stub mode {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[33mwarn[39m: FullBodyVideoGenerationService is running in stub mode {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Text moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
(node:52288) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
[33mwarn[39m: Stripe not configured - payments will be disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Face detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: NSFW detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Loaded 16 banned words {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Added moderation rule for type: image_upload {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Added moderation rule for type: text_content {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Added moderation rule for type: username {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Added moderation rule for type: tribe_name {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Added moderation rule for type: user_behavior {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Default moderation rules initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[33mwarn[39m: Stripe not configured - payments will be disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Face detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: NSFW detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Loaded 16 banned words {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Added moderation rule for type: image_upload {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Added moderation rule for type: text_content {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Added moderation rule for type: username {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Added moderation rule for type: tribe_name {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Added moderation rule for type: user_behavior {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Default moderation rules initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Text moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
(node:52289) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[33mwarn[39m: FullBodyVideoGenerationService is running in stub mode {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[33mwarn[39m: FullBodyVideoGenerationService is running in stub mode {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
PASS tests/integration/routes/feed.routes.test.js
  feed.routes
    ✓ should have routes defined (379 ms)

PASS tests/integration/routes/referral.routes.test.js
  referral.routes
    ✓ should have routes defined (388 ms)

[32minfo[39m: Text moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
(node:52291) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
(node:52288) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52288) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52288) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserCosmetic", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
[33mwarn[39m: Stripe not configured - payments will be disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Face detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: NSFW detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Loaded 16 banned words {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Added moderation rule for type: image_upload {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Added moderation rule for type: text_content {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Added moderation rule for type: username {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Added moderation rule for type: tribe_name {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Added moderation rule for type: user_behavior {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Default moderation rules initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[33mwarn[39m: FullBodyVideoGenerationService is running in stub mode {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
[32minfo[39m: Text moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
(node:52290) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
(node:52289) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52289) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52289) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserCosmetic", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52291) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52291) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52291) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserCosmetic", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
[32minfo[39m: Text moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:15"}
(node:52292) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
(node:52290) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52290) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserCosmetic", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52290) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
PASS tests/integration/routes/user.routes.test.js
  user.routes
    ✓ should have routes defined (302 ms)

(node:52292) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserCosmetic", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52292) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52292) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
PASS tests/integration/routes/transform.routes.test.js
  transform.routes
    ✓ should have routes defined (556 ms)

PASS tests/integration/routes/challenge.routes.test.js
  challenge.routes
    ✓ should have routes defined (567 ms)

[33mwarn[39m: Stripe not configured - payments will be disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[32minfo[39m: Face detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[32minfo[39m: NSFW detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[32minfo[39m: Loaded 16 banned words {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[32minfo[39m: Added moderation rule for type: image_upload {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[32minfo[39m: Added moderation rule for type: text_content {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[32minfo[39m: Added moderation rule for type: username {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[32minfo[39m: Added moderation rule for type: tribe_name {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[32minfo[39m: Added moderation rule for type: user_behavior {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[32minfo[39m: Default moderation rules initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[32minfo[39m: Moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
PASS tests/integration/routes/admin.routes.test.js
  admin.routes
    ✓ should have routes defined (532 ms)

[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[33mwarn[39m: FullBodyVideoGenerationService is running in stub mode {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[32minfo[39m: Text moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
(node:52293) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
[33mwarn[39m: Stripe not configured - payments will be disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
PASS tests/integration/routes/reward.routes.test.js
  reward.routes
    ✓ should have routes defined (431 ms)

[32minfo[39m: Face detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[32minfo[39m: NSFW detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[32minfo[39m: Loaded 16 banned words {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[32minfo[39m: Added moderation rule for type: image_upload {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[32minfo[39m: Added moderation rule for type: text_content {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[32minfo[39m: Added moderation rule for type: username {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[32minfo[39m: Added moderation rule for type: tribe_name {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[32minfo[39m: Added moderation rule for type: user_behavior {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[32minfo[39m: Default moderation rules initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[32minfo[39m: Moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[33mwarn[39m: FullBodyVideoGenerationService is running in stub mode {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[32minfo[39m: Text moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
(node:52294) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
PASS tests/unit/models/Report.test.js
  Report Model
    Schema Validation
      ✓ should be defined (6 ms)
      ✓ should have correct schema structure (1 ms)

(node:52293) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52293) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52293) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserCosmetic", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
[33mwarn[39m: Stripe not configured - payments will be disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
(node:52294) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52294) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52294) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserCosmetic", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
[32minfo[39m: Face detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[32minfo[39m: NSFW detection service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[32minfo[39m: Loaded 16 banned words {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[32minfo[39m: Added moderation rule for type: image_upload {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[32minfo[39m: Added moderation rule for type: text_content {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[32minfo[39m: Added moderation rule for type: username {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[32minfo[39m: Added moderation rule for type: tribe_name {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[32minfo[39m: Added moderation rule for type: user_behavior {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[32minfo[39m: Default moderation rules initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[32minfo[39m: Moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
PASS tests/unit/middleware/validation.test.js
  Validation Middleware
    handleValidationErrors
      ✓ should call next() when validation passes (1 ms)
      ✓ should return 400 with errors when validation fails (1 ms)
    validateAuthStart
      ✓ should be an array with validators and handler
    validateAuthVerify
      ✓ should be an array with manually and handler
    validateProfileUpdate
      ✓ should be an array with validators and handler

(node:52290) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52290) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[33mwarn[39m: FullBodyVideoGenerationService is running in stub mode {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[33mwarn[39m: AWS credentials not configured - S3 uploads disabled {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
[32minfo[39m: Text moderation service initialized {"service":"afroverse-api","timestamp":"2025-10-30 11:08:16"}
(node:52288) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
PASS tests/unit/workers/challengeWorker.test.js
  challengeWorker
    ✓ should be defined (161 ms)

PASS tests/integration/routes/event.routes.test.js
  event.routes
    ✓ should have routes defined (526 ms)

PASS tests/integration/routes/boost.routes.test.js
  boost.routes
    ✓ should have routes defined (353 ms)

(node:52288) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52288) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserCosmetic", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
PASS tests/unit/models/UserAchievement.test.js
  UserAchievement Model
    Schema Validation
      ✓ should be defined (13 ms)
      ✓ should have correct schema structure (2 ms)

(node:52288) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
PASS tests/unit/controllers/commentController.test.js
  commentController
    ✓ should be defined (166 ms)

PASS tests/integration/routes/battle.routes.test.js
  battle.routes
    ✓ should have routes defined (364 ms)

PASS tests/unit/queues/workers/transformWorker.test.js
  Transform Worker
    ✓ should be defined (1 ms)

PASS tests/unit/services/progressionService.test.js
  progressionService
    Module exports
      ✓ should be defined (38 ms)
      ✓ should be an object (8 ms)
      ✓ should have enforceDailyXpCap method (6 ms)
      ✓ should have grantXp method (40 ms)
      ✓ should have getUserProgression method (149 ms)
      ✓ should have grantMilestoneBadge method (8 ms)
      ✓ should have claimReward method (29 ms)
    enforceDailyXpCap
      ✓ should be defined (83 ms)
      ✓ should be a function (10 ms)
      ✓ should handle successful execution (8 ms)
      ✓ should handle errors gracefully (9 ms)
      ✓ should validate input parameters (9 ms)
    grantXp
      ✓ should be defined (11 ms)
      ✓ should be a function (4 ms)
      ✓ should handle successful execution (5 ms)
      ✓ should handle errors gracefully (6 ms)
      ✓ should validate input parameters (5 ms)
    getUserProgression
      ✓ should be defined (23 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (21 ms)
      ✓ should validate input parameters (96 ms)
    grantMilestoneBadge
      ✓ should be defined (188 ms)
      ✓ should be a function (69 ms)
      ✓ should handle successful execution (6 ms)
      ✓ should handle errors gracefully (10 ms)
      ✓ should validate input parameters (19 ms)
    claimReward
      ✓ should be defined (26 ms)
      ✓ should be a function (14 ms)
      ✓ should handle successful execution (12 ms)
      ✓ should handle errors gracefully (18 ms)
      ✓ should validate input parameters (8 ms)

PASS tests/unit/services/whatsAppNotificationService.test.js
  whatsAppNotificationService
    Module exports
      ✓ should be defined (3 ms)
      ✓ should be an object
      ✓ should have send method
      ✓ should have sendInteractiveMessage method
      ✓ should have sendMediaMessage method
      ✓ should have processIncomingMessage method
      ✓ should have handleTextMessage method
      ✓ should have handleButtonReply method
      ✓ should have handleMediaMessage method
    send
      ✓ should be defined (1 ms)
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    sendInteractiveMessage
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    sendMediaMessage
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters
    processIncomingMessage
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    handleTextMessage
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    handleButtonReply
      ✓ should be defined
      ✓ should be a function (1 ms)
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    handleMediaMessage
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters

PASS tests/unit/controllers/achievementController.test.js
  achievementController
    ✓ should be defined (47 ms)

PASS tests/unit/controllers/moderationController.test.js
  moderationController
    ✓ should be defined (6 ms)

[31merror[39m: Error processing scheduled notifications: Operation `notifications.find()` buffering timed out after 10000ms {"service":"afroverse-api","stack":"MongooseError: Operation `notifications.find()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (/Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:185:23)\n    at listOnTimeout (node:internal/timers:608:17)\n    at processTimers (node:internal/timers:543:7)","timestamp":"2025-10-30 11:08:18"}
[31merror[39m: Scheduled notifications job failed: Operation `notifications.find()` buffering timed out after 10000ms {"service":"afroverse-api","stack":"MongooseError: Operation `notifications.find()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (/Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:185:23)\n    at listOnTimeout (node:internal/timers:608:17)\n    at processTimers (node:internal/timers:543:7)","timestamp":"2025-10-30 11:08:18"}
[31merror[39m: Notification job process-scheduled failed: Operation `notifications.find()` buffering timed out after 10000ms {"service":"afroverse-api","stack":"MongooseError: Operation `notifications.find()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (/Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:185:23)\n    at listOnTimeout (node:internal/timers:608:17)\n    at processTimers (node:internal/timers:543:7)","timestamp":"2025-10-30 11:08:18"}
PASS tests/unit/services/aiModerationService.test.js
  aiModerationService
    Module exports
      ✓ should be defined (11 ms)
      ✓ should be an object (2 ms)
      ✓ should have moderateImage method (3 ms)
      ✓ should have moderateText method (3 ms)
      ✓ should have moderatePrompt method (2 ms)
      ✓ should have checkFaceDetection method (3 ms)
      ✓ should have checkNSFWContent method (1 ms)
      ✓ should have checkViolenceContent method (2 ms)
      ✓ should have checkHateContent method (3 ms)
      ✓ should have checkHateSpeech method (4 ms)
      ✓ should have checkHarassment method (1 ms)
      ✓ should have checkSpam method (1 ms)
      ✓ should have checkHarmfulPrompt method (2 ms)
      ✓ should have createModerationLog method (3 ms)
      ✓ should have updateTrustScore method (4 ms)
      ✓ should have getModerationLogsByUser method (4 ms)
      ✓ should have getPendingModerationLogs method (2 ms)
      ✓ should have getModerationStatistics method (1 ms)
      ✓ should have getModerationTrends method (8 ms)
      ✓ should have getModerationPerformance method (3 ms)
    moderateImage
      ✓ should be defined (2 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (2 ms)
    moderateText
      ✓ should be defined (3 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (2 ms)
    moderatePrompt
      ✓ should be defined (1 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (1 ms)
    checkFaceDetection
      ✓ should be defined (2 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (2 ms)
    checkNSFWContent
      ✓ should be defined (1 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (1 ms)
    checkViolenceContent
      ✓ should be defined (2 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (2 ms)
    checkHateContent
      ✓ should be defined (2 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (1 ms)
    checkHateSpeech
      ✓ should be defined (2 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (6 ms)
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (1 ms)
    checkHarassment
      ✓ should be defined (2 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (2 ms)
    checkSpam
      ✓ should be defined (1 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (1 ms)
    checkHarmfulPrompt
      ✓ should be defined (1 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (1 ms)
    createModerationLog
      ✓ should be defined (1 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (2 ms)
    updateTrustScore
      ✓ should be defined (1 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (5 ms)
    getModerationLogsByUser
      ✓ should be defined (5 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (6 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (1 ms)
    getPendingModerationLogs
      ✓ should be defined (2 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (4 ms)
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (4 ms)
    getModerationStatistics
      ✓ should be defined (5 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (1 ms)
    getModerationTrends
      ✓ should be defined (2 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (12 ms)
      ✓ should validate input parameters (2 ms)
    getModerationPerformance
      ✓ should be defined (1 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (2 ms)

PASS tests/unit/middleware/antiCheat.test.js
  AntiCheat Middleware
    ✓ should be defined (1 ms)
    antiCheatVote
      ✓ should allow valid vote (6 ms)
      ✓ should reject fraudulent vote (3 ms)

PASS tests/unit/services/whatsappService.test.js
  whatsappService
    Module exports
      ✓ should be defined
      ✓ should be an object

(node:52288) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52288) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
PASS tests/unit/controllers/challengeController.test.js
  challengeController
    ✓ should be defined (94 ms)

PASS tests/unit/sockets/chatSocketHandlers.test.js
  Chat Socket Handlers
    handleConnection
      ✓ should set up event handlers (4 ms)
    handleAuthenticate
      ✓ should authenticate user with valid credentials (2 ms)
      ✓ should reject invalid user

(node:52293) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52293) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
PASS tests/unit/services/feedService.test.js
  feedService
    Module exports
      ✓ should be defined (28 ms)
      ✓ should be an object (9 ms)
      ✓ should have generateFeed method (9 ms)
      ✓ should have generateForYouFeed method (6 ms)
      ✓ should have generateFollowingFeed method (5 ms)
      ✓ should have generateTribeFeed method (10 ms)
      ✓ should have generateBattlesFeed method (3 ms)
      ✓ should have rankVideos method (3 ms)
      ✓ should have calculateVideoScore method (4 ms)
      ✓ should have calculateRankingFactors method (3 ms)
      ✓ should have getCreatorQualityScore method (3 ms)
      ✓ should have applyDiversityRules method (4 ms)
      ✓ should have getFreshVideos method (6 ms)
      ✓ should have getTrendingVideos method (5 ms)
      ✓ should have getTribeVideos method (6 ms)
      ✓ should have getExplorationVideos method (4 ms)
      ✓ should have getFallbackVideos method (4 ms)
      ✓ should have trackImpression method (39 ms)
      ✓ should have updateVideoStats method (19 ms)
      ✓ should have recalculateVideoRanking method (63 ms)
      ✓ should have getFeedAnalytics method (11 ms)
    generateFeed
      ✓ should be defined (22 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (4 ms)
      ✓ should handle errors gracefully (12 ms)
      ✓ should validate input parameters (19 ms)
    generateForYouFeed
      ✓ should be defined (7 ms)
      ✓ should be a function (4 ms)
      ✓ should handle successful execution (8 ms)
      ✓ should handle errors gracefully (11 ms)
      ✓ should validate input parameters (6 ms)
    generateFollowingFeed
      ✓ should be defined (17 ms)
      ✓ should be a function (7 ms)
      ✓ should handle successful execution (6 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (4 ms)
    generateTribeFeed
      ✓ should be defined (6 ms)
      ✓ should be a function (8 ms)
      ✓ should handle successful execution (4 ms)
      ✓ should handle errors gracefully (6 ms)
      ✓ should validate input parameters (8 ms)
    generateBattlesFeed
      ✓ should be defined (8 ms)
      ✓ should be a function (4 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (2 ms)
    rankVideos
      ✓ should be defined (4 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (3 ms)
    calculateVideoScore
      ✓ should be defined (3 ms)
      ✓ should be a function (4 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (5 ms)
    calculateRankingFactors
      ✓ should be defined (3 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (5 ms)
    getCreatorQualityScore
      ✓ should be defined (248 ms)
      ✓ should be a function (30 ms)
      ✓ should handle successful execution (31 ms)
      ✓ should handle errors gracefully (11 ms)
      ✓ should validate input parameters (4 ms)
    applyDiversityRules
      ✓ should be defined (7 ms)
      ✓ should be a function (11 ms)
      ✓ should handle successful execution (26 ms)
      ✓ should handle errors gracefully (6 ms)
      ✓ should validate input parameters (24 ms)
    getFreshVideos
      ✓ should be defined (25 ms)
      ✓ should be a function (6 ms)
      ✓ should handle successful execution (14 ms)
      ✓ should handle errors gracefully (8 ms)
      ✓ should validate input parameters (3 ms)
    getTrendingVideos
      ✓ should be defined (12 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (32 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (4 ms)
    getTribeVideos
      ✓ should be defined (5 ms)
      ✓ should be a function (7 ms)
      ✓ should handle successful execution (6 ms)
      ✓ should handle errors gracefully (15 ms)
      ✓ should validate input parameters (5 ms)
    getExplorationVideos
      ✓ should be defined (7 ms)
      ✓ should be a function (5 ms)
      ✓ should handle successful execution (21 ms)
      ✓ should handle errors gracefully (6 ms)
      ✓ should validate input parameters (4 ms)
    getFallbackVideos
      ✓ should be defined (6 ms)
      ✓ should be a function (5 ms)
      ✓ should handle successful execution (6 ms)
      ✓ should handle errors gracefully (5 ms)
      ✓ should validate input parameters (13 ms)
    trackImpression
      ✓ should be defined (64 ms)
      ✓ should be a function (7 ms)
      ✓ should handle successful execution (15 ms)
      ✓ should handle errors gracefully (14 ms)
      ✓ should validate input parameters (18 ms)
    updateVideoStats
      ✓ should be defined (33 ms)
      ✓ should be a function (156 ms)
      ✓ should handle successful execution (23 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (2 ms)
    recalculateVideoRanking
      ✓ should be defined (3 ms)
      ✓ should be a function (5 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (3 ms)
    getFeedAnalytics
      ✓ should be defined (6 ms)
      ✓ should be a function (7 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (8 ms)

PASS tests/unit/config/replicate.test.js
  replicate Config
    ✓ should be defined

PASS tests/unit/controllers/eventController.test.js
  eventController
    ✓ should be defined (96 ms)

PASS tests/unit/config/database.test.js
  database Config
    ✓ should be defined (1 ms)

PASS tests/unit/models/UserEvent.test.js
  UserEvent Model
    Schema Validation
      ✓ should be defined (4 ms)
      ✓ should have correct schema structure (1 ms)

PASS tests/unit/services/adminTribeService.test.js
  adminTribeService
    Module exports
      ✓ should be defined (21 ms)
      ✓ should be an object (11 ms)
      ✓ should have getTribes method (8 ms)
      ✓ should have getTribe method (1 ms)
      ✓ should have getTribeDetails method (2 ms)
      ✓ should have getTribeStatistics method (2 ms)
      ✓ should have getTribeRank method (2 ms)
      ✓ should have getTribeRecentActivity method (2 ms)
      ✓ should have updateTribe method (2 ms)
      ✓ should have changeTribeCaptain method (2 ms)
      ✓ should have suspendTribe method (6 ms)
      ✓ should have unsuspendTribe method (4 ms)
      ✓ should have getTribeTrends method (11 ms)
      ✓ should have getTribeSummary method (2 ms)
    getTribes
      ✓ should be defined (2 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (11 ms)
      ✓ should validate input parameters (4 ms)
    getTribe
      ✓ should be defined (2 ms)
      ✓ should be a function (11 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (2 ms)
    getTribeDetails
      ✓ should be defined (9 ms)
      ✓ should be a function (11 ms)
      ✓ should handle successful execution (13 ms)
      ✓ should handle errors gracefully (25 ms)
      ✓ should validate input parameters (88 ms)
    getTribeStatistics
      ✓ should be defined (4 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (4 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (2 ms)
    getTribeRank
      ✓ should be defined (2 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (2 ms)
    getTribeRecentActivity
      ✓ should be defined (2 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (3 ms)
    updateTribe
      ✓ should be defined (1 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (2 ms)
    changeTribeCaptain
      ✓ should be defined (2 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (2 ms)
    suspendTribe
      ✓ should be defined (2 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (1 ms)
    unsuspendTribe
      ✓ should be defined (1 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (3 ms)
    getTribeTrends
      ✓ should be defined (2 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (2 ms)
    getTribeSummary
      ✓ should be defined (3 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (2 ms)

(node:52288) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52288) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
PASS tests/unit/controllers/boostController.test.js
  boostController
    ✓ should be defined (46 ms)

PASS tests/unit/controllers/leaderboardController.test.js
  leaderboardController
    ✓ should be defined (91 ms)

PASS tests/unit/config/redis.test.js
  Redis Config
    connectRedis
      ✓ should successfully connect to Redis (3 ms)
      ✓ should use default Redis URL if not provided
      ✓ should use custom Redis URL from environment (1 ms)
      ✓ should handle connection errors (9 ms)
      ✓ should handle error events
    getRedisClient
      ✓ should return Redis client after connection (1 ms)
      ✓ should throw error if client not initialized (4 ms)
    disconnectRedis
      ✓ should disconnect Redis client (1 ms)
      ✓ should handle disconnect when client is null

PASS tests/unit/services/moderationService.test.js
  moderationService
    Module exports
      ✓ should be defined (11 ms)
      ✓ should be an object (6 ms)
      ✓ should have init method (8 ms)
      ✓ should have moderateImageUpload method (1 ms)
      ✓ should have moderateTextContent method (12 ms)
      ✓ should have submitReport method (7 ms)
      ✓ should have blockUser method (4 ms)
      ✓ should have unblockUser method (4 ms)
      ✓ should have isUserBlocked method (4 ms)
      ✓ should have logModerationAction method (3 ms)
      ✓ should have getUserModerationHistory method (3 ms)
      ✓ should have getPendingReports method (2 ms)
      ✓ should have getModerationStats method (2 ms)
    init
      ✓ should be defined (1 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (2 ms)
    moderateImageUpload
      ✓ should be defined (2 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (4 ms)
    moderateTextContent
      ✓ should be defined (2 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (7 ms)
      ✓ should handle errors gracefully (68 ms)
      ✓ should validate input parameters (144 ms)
    submitReport
      ✓ should be defined (14 ms)
      ✓ should be a function (8 ms)
      ✓ should handle successful execution (9 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (2 ms)
    blockUser
      ✓ should be defined (2 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (3 ms)
    unblockUser
      ✓ should be defined (3 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (4 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (2 ms)
    isUserBlocked
      ✓ should be defined (2 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (2 ms)
    logModerationAction
      ✓ should be defined (1 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (4 ms)
    getUserModerationHistory
      ✓ should be defined (1 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (2 ms)
    getPendingReports
      ✓ should be defined (2 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (1 ms)
    getModerationStats
      ✓ should be defined (2 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (2 ms)

PASS tests/unit/models/Referral.test.js
  Referral Model
    Schema Validation
      ✓ should be defined (5 ms)
      ✓ should have correct schema structure (2 ms)

PASS tests/unit/models/Message.test.js
  Message Model
    Schema Validation
      ✓ should be defined (3 ms)
      ✓ should have correct schema structure (3 ms)

(node:52292) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52292) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
PASS tests/unit/workers/eventWorker.test.js
  eventWorker
    ✓ should be defined (123 ms)

PASS tests/unit/controllers/creatorController.test.js
  creatorController
    ✓ should be defined (31 ms)

PASS tests/unit/controllers/chatController.test.js
  chatController
    ✓ should be defined (36 ms)

PASS tests/unit/models/AuditLog.test.js
  AuditLog Model
    Schema Validation
      ✓ should be defined (7 ms)
      ✓ should have correct schema structure (3 ms)

PASS tests/unit/services/adminModerationService.test.js
  adminModerationService
    Module exports
      ✓ should be defined (17 ms)
      ✓ should be an object (7 ms)
      ✓ should have getModerationQueue method (4 ms)
      ✓ should have getModerationJob method (3 ms)
      ✓ should have assignModerationJob method (3 ms)
      ✓ should have makeModerationDecision method (1 ms)
      ✓ should have escalateModerationJob method (2 ms)
      ✓ should have openAppeal method (2 ms)
      ✓ should have resolveAppeal method (2 ms)
      ✓ should have getModerationStatistics method (2 ms)
      ✓ should have getModerationTrends method (3 ms)
      ✓ should have getModerationPerformance method (2 ms)
      ✓ should have getPendingJobsCount method (2 ms)
      ✓ should have getModerationJobSummary method (1 ms)
      ✓ should have notifyUser method (2 ms)
    getModerationQueue
      ✓ should be defined (5 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (4 ms)
    getModerationJob
      ✓ should be defined (2 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (6 ms)
      ✓ should validate input parameters (2 ms)
    assignModerationJob
      ✓ should be defined (4 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (4 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (1 ms)
    makeModerationDecision
      ✓ should be defined (1 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (6 ms)
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (2 ms)
    escalateModerationJob
      ✓ should be defined (1 ms)
      ✓ should be a function (4 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (4 ms)
    openAppeal
      ✓ should be defined (3 ms)
      ✓ should be a function (6 ms)
      ✓ should handle successful execution (6 ms)
      ✓ should handle errors gracefully (6 ms)
      ✓ should validate input parameters (8 ms)
    resolveAppeal
      ✓ should be defined (4 ms)
      ✓ should be a function (5 ms)
      ✓ should handle successful execution (6 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (3 ms)
    getModerationStatistics
      ✓ should be defined (3 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (2 ms)
    getModerationTrends
      ✓ should be defined (1 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (3 ms)
    getModerationPerformance
      ✓ should be defined (3 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (2 ms)
    getPendingJobsCount
      ✓ should be defined (2 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (6 ms)
    getModerationJobSummary
      ✓ should be defined (8 ms)
      ✓ should be a function (6 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (2 ms)
    notifyUser
      ✓ should be defined (1 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (2 ms)

PASS tests/unit/services/adminAuditService.test.js
  adminAuditService
    Module exports
      ✓ should be defined (10 ms)
      ✓ should be an object (1 ms)
      ✓ should have getAuditLogs method (2 ms)
      ✓ should have getAuditLog method (4 ms)
      ✓ should have getAuditLogsByActor method (4 ms)
      ✓ should have getAuditLogsByTarget method (7 ms)
      ✓ should have getAuditLogsByAction method (3 ms)
      ✓ should have getAuditLogsByCategory method (3 ms)
      ✓ should have getAuditLogsBySeverity method (4 ms)
      ✓ should have getAuditLogsByDateRange method (2 ms)
      ✓ should have getAuditLogsByTag method (4 ms)
      ✓ should have reverseAuditLog method (4 ms)
      ✓ should have getAuditStatistics method (2 ms)
      ✓ should have getAuditTrends method (2 ms)
      ✓ should have getAuditPerformance method (2 ms)
      ✓ should have getAuditSummary method (3 ms)
    getAuditLogs
      ✓ should be defined (2 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (1 ms)
    getAuditLog
      ✓ should be defined (1 ms)
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (1 ms)
    getAuditLogsByActor
      ✓ should be defined (2 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (2 ms)
    getAuditLogsByTarget
      ✓ should be defined (1 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (1 ms)
    getAuditLogsByAction
      ✓ should be defined (3 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (4 ms)
    getAuditLogsByCategory
      ✓ should be defined (5 ms)
      ✓ should be a function (5 ms)
      ✓ should handle successful execution (4 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (1 ms)
    getAuditLogsBySeverity
      ✓ should be defined (3 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (1 ms)
    getAuditLogsByDateRange
      ✓ should be defined (2 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (6 ms)
    getAuditLogsByTag
      ✓ should be defined (3 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (1 ms)
    reverseAuditLog
      ✓ should be defined (1 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (1 ms)
    getAuditStatistics
      ✓ should be defined (2 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (2 ms)
    getAuditTrends
      ✓ should be defined (2 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (2 ms)
    getAuditPerformance
      ✓ should be defined (1 ms)
      ✓ should be a function
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (2 ms)
    getAuditSummary
      ✓ should be defined (1 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (4 ms)

(node:52289) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserCosmetic", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
PASS tests/unit/controllers/rewardController.test.js
  rewardController
    ✓ should be defined (46 ms)

(node:52292) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52292) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
PASS tests/unit/services/adminAuthService.test.js
  adminAuthService
    Module exports
      ✓ should be defined (8 ms)
      ✓ should be an object (2 ms)
      ✓ should have login method (3 ms)
      ✓ should have loginWithMagicLink method (4 ms)
      ✓ should have verifyTwoFA method (4 ms)
      ✓ should have verifyBackupCode method (6 ms)
      ✓ should have refreshToken method (12 ms)
      ✓ should have logout method (7 ms)
      ✓ should have changePassword method (3 ms)
      ✓ should have enableTwoFA method (2 ms)
      ✓ should have disableTwoFA method (4 ms)
      ✓ should have getProfile method (2 ms)
      ✓ should have updateProfile method (2 ms)
    login
      ✓ should be defined (1 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (5 ms)
    loginWithMagicLink
      ✓ should be defined (1 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (2 ms)
    verifyTwoFA
      ✓ should be defined (1 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (2 ms)
    verifyBackupCode
      ✓ should be defined (2 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (3 ms)
    refreshToken
      ✓ should be defined (1 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (1 ms)
    logout
      ✓ should be defined (3 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (2 ms)
    changePassword
      ✓ should be defined (1 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (6 ms)
      ✓ should handle errors gracefully (6 ms)
      ✓ should validate input parameters (1 ms)
    enableTwoFA
      ✓ should be defined (6 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (4 ms)
    disableTwoFA
      ✓ should be defined (3 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (2 ms)
    getProfile
      ✓ should be defined (2 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (1 ms)
    updateProfile
      ✓ should be defined (1 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (6 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (5 ms)

PASS tests/unit/controllers/referralController.test.js
  referralController
    ✓ should be defined (139 ms)

PASS tests/unit/workers/transformWorker.test.js
  Transform Worker
    ✓ should be defined (2 ms)
    processTransformJob
      ✓ should process transformation job
    error handling
      ✓ should handle job processing errors (1 ms)

PASS tests/unit/services/adminFraudService.test.js
  adminFraudService
    Module exports
      ✓ should be defined (13 ms)
      ✓ should be an object (7 ms)
      ✓ should have getFraudDetections method (7 ms)
      ✓ should have getFraudDetection method (6 ms)
      ✓ should have reviewFraudDetection method (2 ms)
      ✓ should have confirmFraudDetection method (2 ms)
      ✓ should have markAsFalsePositive method (3 ms)
      ✓ should have getFraudStatistics method (1 ms)
      ✓ should have getFraudTrends method (3 ms)
      ✓ should have getFraudPerformance method (2 ms)
      ✓ should have getFraudSummary method (6 ms)
      ✓ should have getTrustScores method (2 ms)
      ✓ should have getTrustScoreByUser method (3 ms)
      ✓ should have updateTrustScore method (3 ms)
      ✓ should have shadowbanUser method (2 ms)
      ✓ should have liftShadowban method (3 ms)
      ✓ should have getDeviceFingerprints method (3 ms)
      ✓ should have getDeviceFingerprint method (6 ms)
      ✓ should have markDeviceAsSuspicious method (10 ms)
      ✓ should have markDeviceAsBlocked method (7 ms)
    getFraudDetections
      ✓ should be defined (3 ms)
      ✓ should be a function (4 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (1 ms)
    getFraudDetection
      ✓ should be defined (4 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (9 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (3 ms)
    reviewFraudDetection
      ✓ should be defined (1 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (4 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (4 ms)
    confirmFraudDetection
      ✓ should be defined (4 ms)
      ✓ should be a function (4 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (3 ms)
    markAsFalsePositive
      ✓ should be defined (2 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (4 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (1 ms)
    getFraudStatistics
      ✓ should be defined (3 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (4 ms)
      ✓ should handle errors gracefully (5 ms)
      ✓ should validate input parameters (3 ms)
    getFraudTrends
      ✓ should be defined (5 ms)
      ✓ should be a function (6 ms)
      ✓ should handle successful execution (9 ms)
      ✓ should handle errors gracefully (6 ms)
      ✓ should validate input parameters (11 ms)
    getFraudPerformance
      ✓ should be defined (5 ms)
      ✓ should be a function (5 ms)
      ✓ should handle successful execution (4 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (4 ms)
    getFraudSummary
      ✓ should be defined (4 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (6 ms)
    getTrustScores
      ✓ should be defined (3 ms)
      ✓ should be a function (4 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (3 ms)
    getTrustScoreByUser
      ✓ should be defined (4 ms)
      ✓ should be a function (4 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (8 ms)
    updateTrustScore
      ✓ should be defined (2 ms)
      ✓ should be a function (23 ms)
      ✓ should handle successful execution (27 ms)
      ✓ should handle errors gracefully (15 ms)
      ✓ should validate input parameters (4 ms)
    shadowbanUser
      ✓ should be defined (4 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (6 ms)
    liftShadowban
      ✓ should be defined (3 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (5 ms)
      ✓ should validate input parameters (3 ms)
    getDeviceFingerprints
      ✓ should be defined (2 ms)
      ✓ should be a function (4 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (2 ms)
    getDeviceFingerprint
      ✓ should be defined (1 ms)
      ✓ should be a function (4 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (5 ms)
    markDeviceAsSuspicious
      ✓ should be defined (2 ms)
      ✓ should be a function (7 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (14 ms)
      ✓ should validate input parameters (11 ms)
    markDeviceAsBlocked
      ✓ should be defined (10 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (1 ms)

(node:52291) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
(node:52291) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
PASS tests/unit/workers/referralWorker.test.js
  referralWorker
    ✓ should be defined (76 ms)

PASS tests/unit/models/ModerationJob.test.js
  ModerationJob Model
    Schema Validation
      ✓ should be defined (4 ms)
      ✓ should have correct schema structure

PASS tests/unit/models/CommentLike.test.js
  CommentLike Model
    Schema Validation
      ✓ should be defined (7 ms)
      ✓ should have correct schema structure (3 ms)

PASS tests/unit/controllers/battleController.test.js
  Battle Controller
    ✓ should be defined (34 ms)

PASS tests/unit/utils/constants.test.js
  Constants
    MODERATION_ACTIONS
      ✓ should have all required moderation actions (2 ms)
      ✓ should have correct action values
    MODERATION_REASONS
      ✓ should have all required moderation reasons
      ✓ should have correct reason values (1 ms)

PASS tests/unit/services/notificationRulesEngine.test.js
  notificationRulesEngine
    Module exports
      ✓ should be defined
      ✓ should be an object (1 ms)
      ✓ should have shouldSendNotification method
      ✓ should have checkConditions method
      ✓ should have isUserActive method
      ✓ should have userHasStreak method
      ✓ should have getUserStreakDays method (1 ms)
    shouldSendNotification
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    checkConditions
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    isUserActive
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    userHasStreak
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    getUserStreakDays
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters

PASS tests/unit/middleware/adminAuth.test.js
  Admin Auth Middleware
    authenticateAdmin
      ✓ should authenticate valid admin token (10 ms)
      ✓ should reject request without token (4 ms)
      ✓ should reject when admin not found (4 ms)
      ✓ should reject inactive admin (6 ms)
    requireRole
      ✓ should allow access for authorized role (8 ms)
      ✓ should reject unauthorized role (14 ms)
      ✓ should reject when no admin in request (15 ms)
    adminRateLimit
      ✓ should allow requests within limit (1 ms)
      ✓ should reject requests exceeding limit (4 ms)

PASS tests/unit/models/TrustScore.test.js
  TrustScore Model
    Schema Validation
      ✓ should be defined (4 ms)
      ✓ should have correct schema structure (1 ms)

PASS tests/unit/workers/battleWorker.test.js
  Battle Worker
    ✓ should be defined

PASS tests/unit/utils/validators.test.js
  Validators
    ✓ should export validators object (2 ms)

PASS tests/unit/services/analyticsService.test.js
  analyticsService
    Module exports
      ✓ should be defined
      ✓ should be an object

PASS tests/unit/controllers/fraudDetectionController.test.js
  fraudDetectionController
    ✓ should be defined (31 ms)

PASS tests/unit/controllers/progressionController.test.js
  progressionController
    ✓ should be defined (105 ms)

PASS tests/unit/controllers/feedController.test.js
  feedController
    ✓ should be defined (75 ms)

(node:52294) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
PASS tests/unit/config/constants.test.js
  Constants Config
    ✓ should export constants object (1 ms)
    ✓ should have all expected constant properties

PASS tests/unit/models/DeviceToken.test.js
  DeviceToken Model
    Schema Validation
      ✓ should be defined (4 ms)
      ✓ should have correct schema structure (2 ms)

PASS tests/unit/queues/feedQueue.test.js
  feedQueue
    ✓ should be defined (8 ms)

PASS tests/unit/services/cloudStorageService.test.js
  cloudStorageService
    Module exports
      ✓ should be defined (8 ms)
      ✓ should be an object (1 ms)
      ✓ should have uploadFile method
      ✓ should have uploadFromUrl method
      ✓ should have createThumbnail method
      ✓ should have deleteFile method
      ✓ should have generateSignedUrl method (1 ms)
      ✓ should have getFileMetadata method
      ✓ should have listFiles method
    uploadFile
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters (1 ms)
    uploadFromUrl
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    createThumbnail
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters
    deleteFile
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    generateSignedUrl
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    getFileMetadata
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    listFiles
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully
      ✓ should validate input parameters

PASS tests/unit/config/cloudinary.extended.test.js
  cloudinary config edge cases
    ✓ loads without CLOUDINARY_URL/keys (3 ms)
    ✓ reloads cleanly with partial env

PASS tests/unit/models/MotionPack.test.js
  MotionPack Model
    Schema Validation
      ✓ should be defined (3 ms)
      ✓ should have correct schema structure (2 ms)

PASS tests/unit/queues/battleQueue.test.js
  battleQueue
    ✓ should be defined (57 ms)

PASS tests/unit/controllers/voteController.test.js
  voteController
    ✓ should be defined (3 ms)

PASS tests/unit/config/constants.extended.test.js
  constants config edge cases
    ✓ module exports an object and is cached by Node (2 ms)

PASS tests/unit/services/deviceFingerprintService.test.js
  deviceFingerprintService
    Module exports
      ✓ should be defined (6 ms)
      ✓ should be an object (3 ms)
      ✓ should have createDeviceFingerprint method (2 ms)
      ✓ should have updateDeviceFingerprint method (3 ms)
      ✓ should have getDeviceFingerprintByFingerprint method (3 ms)
      ✓ should have getDeviceFingerprintsByUser method (3 ms)
      ✓ should have getSuspiciousDevices method (2 ms)
      ✓ should have getMultiAccountDevices method (9 ms)
      ✓ should have getBlockedDevices method (3 ms)
      ✓ should have markDeviceAsSuspicious method (2 ms)
      ✓ should have markDeviceAsBlocked method (5 ms)
      ✓ should have markDeviceAsBot method (2 ms)
      ✓ should have updateDeviceActivity method (3 ms)
      ✓ should have calculateRiskScore method (2 ms)
      ✓ should have getDeviceFingerprintStatistics method (2 ms)
      ✓ should have getDeviceFingerprintTrends method (1 ms)
      ✓ should have getDeviceFingerprintSummary method (1 ms)
    createDeviceFingerprint
      ✓ should be defined (3 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (5 ms)
      ✓ should handle errors gracefully (6 ms)
      ✓ should validate input parameters (2 ms)
    updateDeviceFingerprint
      ✓ should be defined (3 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (1 ms)
    getDeviceFingerprintByFingerprint
      ✓ should be defined (2 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (3 ms)
    getDeviceFingerprintsByUser
      ✓ should be defined (2 ms)
      ✓ should be a function
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters
    getSuspiciousDevices
      ✓ should be defined (1 ms)
      ✓ should be a function
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (1 ms)
    getMultiAccountDevices
      ✓ should be defined (2 ms)
      ✓ should be a function
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (1 ms)
    getBlockedDevices
      ✓ should be defined (1 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (6 ms)
    markDeviceAsSuspicious
      ✓ should be defined (1 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully
      ✓ should validate input parameters (1 ms)
    markDeviceAsBlocked
      ✓ should be defined (1 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (1 ms)
    markDeviceAsBot
      ✓ should be defined
      ✓ should be a function (1 ms)
      ✓ should handle successful execution
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (1 ms)
    updateDeviceActivity
      ✓ should be defined (1 ms)
      ✓ should be a function
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (2 ms)
    calculateRiskScore
      ✓ should be defined (1 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (1 ms)
    getDeviceFingerprintStatistics
      ✓ should be defined
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (4 ms)
    getDeviceFingerprintTrends
      ✓ should be defined (3 ms)
      ✓ should be a function (6 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (3 ms)
    getDeviceFingerprintSummary
      ✓ should be defined (2 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (5 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (6 ms)

PASS tests/unit/services/adminUserService.test.js
  adminUserService
    Module exports
      ✓ should be defined (17 ms)
      ✓ should be an object (9 ms)
      ✓ should have getUsers method (12 ms)
      ✓ should have getUser method (6 ms)
      ✓ should have getUserDetails method (10 ms)
      ✓ should have getUserRecentActivity method (3 ms)
      ✓ should have getUserEnforcements method (21 ms)
      ✓ should have applyEnforcement method (2 ms)
      ✓ should have removeEnforcement method (1 ms)
      ✓ should have banUser method (2 ms)
      ✓ should have unbanUser method (2 ms)
      ✓ should have getUserStatistics method (2 ms)
      ✓ should have getUserTrends method (2 ms)
      ✓ should have getUserSummary method (2 ms)
    getUsers
      ✓ should be defined (2 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (2 ms)
    getUser
      ✓ should be defined (2 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (2 ms)
    getUserDetails
      ✓ should be defined
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (5 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (4 ms)
    getUserRecentActivity
      ✓ should be defined (2 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (4 ms)
    getUserEnforcements
      ✓ should be defined (4 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (2 ms)
    applyEnforcement
      ✓ should be defined (2 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (2 ms)
    removeEnforcement
      ✓ should be defined (3 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (2 ms)
    banUser
      ✓ should be defined (2 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (4 ms)
    unbanUser
      ✓ should be defined (3 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (5 ms)
      ✓ should handle errors gracefully (11 ms)
      ✓ should validate input parameters (7 ms)
    getUserStatistics
      ✓ should be defined (4 ms)
      ✓ should be a function (5 ms)
      ✓ should handle successful execution (5 ms)
      ✓ should handle errors gracefully (5 ms)
      ✓ should validate input parameters (3 ms)
    getUserTrends
      ✓ should be defined (2 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (2 ms)
    getUserSummary
      ✓ should be defined (2 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (14 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (2 ms)

PASS tests/unit/models/ShareEvent.test.js
  ShareEvent Model
    Schema Validation
      ✓ should be defined (4 ms)
      ✓ should have correct schema structure (1 ms)

PASS tests/unit/sockets/handlers.test.js
  Socket Handlers
    ✓ should be defined (1 ms)

PASS tests/unit/services/moderationRulesEngine.test.js
  moderationRulesEngine
    ✓ initializes default rules (1 ms)
    ✓ evaluateImage detects violations
    ✓ evaluateText detects limits and categories
    ✓ evaluateUsername enforces constraints (1 ms)
    ✓ getSeverityLevel maps actions
    ✓ should be defined (1 ms)

PASS tests/unit/controllers/tribeController.test.js
  tribeController
    ✓ should be defined (107 ms)

(node:52294) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserNotificationSettings", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
PASS tests/unit/queues/workers/battleWorker.test.js
  Battle Worker
    ✓ should be defined (1 ms)

PASS tests/unit/models/UserNotificationSettings.test.js
  UserNotificationSettings Model
    Schema Validation
      ✓ should be defined (7 ms)
      ✓ should have correct schema structure (3 ms)

PASS tests/unit/models/Wallet.test.js
  Wallet Model
    Schema Validation
      ✓ should be defined (9 ms)
      ✓ should have correct schema structure (3 ms)

PASS tests/unit/models/UserChallenge.test.js
  UserChallenge Model
    Schema Validation
      ✓ should be defined (8 ms)
      ✓ should have correct schema structure (3 ms)

PASS tests/unit/config/replicate.extended.test.js
  replicate config edge cases
    ✓ loads without REPLICATE_API_TOKEN (11 ms)
    ✓ reloads cleanly with invalid token (1 ms)

PASS tests/unit/models/WalletTransaction.test.js
  WalletTransaction Model
    Schema Validation
      ✓ should be defined (6 ms)
      ✓ should have correct schema structure (2 ms)

PASS tests/unit/services/paymentService.test.js
  paymentService
    Module exports
      ✓ should be defined (14 ms)
      ✓ should be an object (6 ms)
      ✓ should have createCheckoutSession method (8 ms)
      ✓ should have createPaymentIntent method (6 ms)
      ✓ should have handleSuccessfulPayment method (5 ms)
      ✓ should have grantPurchaseBenefits method (7 ms)
      ✓ should have handleWebhookEvent method (4 ms)
      ✓ should have handleCheckoutCompleted method (5 ms)
      ✓ should have handleInvoicePaid method (3 ms)
      ✓ should have handleInvoicePaymentFailed method (3 ms)
      ✓ should have handleSubscriptionDeleted method (2 ms)
      ✓ should have handlePaymentIntentSucceeded method (2 ms)
      ✓ should have getUserSubscriptionStatus method (2 ms)
      ✓ should have cancelSubscription method (6 ms)
      ✓ should have getSubscriptionAnalytics method (2 ms)
      ✓ should have getPurchaseAnalytics method (3 ms)
    createCheckoutSession
      ✓ should be defined (3 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (2 ms)
    createPaymentIntent
      ✓ should be defined (2 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (3 ms)
    handleSuccessfulPayment
      ✓ should be defined (4 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (2 ms)
    grantPurchaseBenefits
      ✓ should be defined (37 ms)
      ✓ should be a function (9 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (5 ms)
    handleWebhookEvent
      ✓ should be defined (6 ms)
      ✓ should be a function (20 ms)
      ✓ should handle successful execution (29 ms)
      ✓ should handle errors gracefully (9 ms)
      ✓ should validate input parameters (15 ms)
    handleCheckoutCompleted
      ✓ should be defined (11 ms)
      ✓ should be a function (17 ms)
      ✓ should handle successful execution (5 ms)
      ✓ should handle errors gracefully (3 ms)
      ✓ should validate input parameters (2 ms)
    handleInvoicePaid
      ✓ should be defined (3 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (4 ms)
      ✓ should validate input parameters (3 ms)
    handleInvoicePaymentFailed
      ✓ should be defined (1 ms)
      ✓ should be a function (3 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (6 ms)
      ✓ should validate input parameters (2 ms)
    handleSubscriptionDeleted
      ✓ should be defined (2 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (2 ms)
    handlePaymentIntentSucceeded
      ✓ should be defined (1 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (1 ms)
    getUserSubscriptionStatus
      ✓ should be defined (2 ms)
      ✓ should be a function (4 ms)
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters (4 ms)
    cancelSubscription
      ✓ should be defined (2 ms)
      ✓ should be a function (2 ms)
      ✓ should handle successful execution (2 ms)
      ✓ should handle errors gracefully (6 ms)
      ✓ should validate input parameters (2 ms)
    getSubscriptionAnalytics
      ✓ should be defined (4 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (2 ms)
    getPurchaseAnalytics
      ✓ should be defined (2 ms)
      ✓ should be a function (1 ms)
      ✓ should handle successful execution (3 ms)
      ✓ should handle errors gracefully (2 ms)
      ✓ should validate input parameters (2 ms)

(node:52294) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserCosmetic", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
PASS tests/unit/models/UserCosmetic.test.js
  UserCosmetic Model
    Schema Validation
      ✓ should be defined (3 ms)
      ✓ should have correct schema structure

PASS tests/unit/models/FraudDetection.test.js
  FraudDetection Model
    Schema Validation
      ✓ should be defined (6 ms)
      ✓ should have correct schema structure (1 ms)

PASS tests/unit/models/UserReward.test.js
  UserReward Model
    Schema Validation
      ✓ should be defined (11 ms)
      ✓ should have correct schema structure (3 ms)

PASS tests/unit/models/NotificationCampaign.test.js
  NotificationCampaign Model
    Schema Validation
      ✓ should be defined (4 ms)
      ✓ should have correct schema structure (4 ms)

PASS tests/unit/config/database.extended.test.js
  database config edge cases
    ✓ loads without MONGODB_URI (2 ms)
    ✓ reloads cleanly with malformed URI (1 ms)

PASS tests/unit/models/Enforcement.test.js
  Enforcement Model
    Schema Validation
      ✓ should be defined (3 ms)
      ✓ should have correct schema structure (5 ms)

PASS tests/unit/services/videoGenerationService.test.js
  videoGenerationService
    Module exports
      ✓ should be defined (2 ms)
      ✓ should be an object
      ✓ should have generateLoop method (1 ms)
      ✓ should have generateClip method
      ✓ should have generateMotionFrames method
      ✓ should have applyMotionTransform method
      ✓ should have createVideoFromFrames method (1 ms)
      ✓ should have generateClipSegments method
      ✓ should have stitchSegments method (1 ms)
      ✓ should have addAudioTrack method
      ✓ should have addCaptions method
      ✓ should have applyWatermark method
      ✓ should have generateThumbnail method (1 ms)
      ✓ should have ensureTempDir method
      ✓ should have cleanupTempFiles method (1 ms)
    generateLoop
      ✓ should be defined (1 ms)
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    generateClip
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    generateMotionFrames
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters
    applyMotionTransform
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    createVideoFromFrames
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    generateClipSegments
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    stitchSegments
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    addAudioTrack
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    addCaptions
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    applyWatermark
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    generateThumbnail
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    ensureTempDir
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters
    cleanupTempFiles
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters

PASS tests/unit/services/referralService.test.js
  referralService
    ✓ calculateReferrerRewards accumulates per tiers (7 ms)
    ✓ calculateRecruitmentRank returns expected tiers (2 ms)
    ✓ getNextRewardThreshold returns next threshold data (2 ms)
    ✓ performFraudChecks passes with low activity (1 ms)
    ✓ should be defined (1 ms)

(node:52294) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "UserAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
PASS tests/unit/models/UserAggregate.test.js
  UserAggregate Model
    Schema Validation
      ✓ should be defined (5 ms)
      ✓ should have correct schema structure (2 ms)

PASS tests/unit/controllers/notificationController.test.js
  notificationController
    ✓ should be defined (13 ms)

PASS tests/unit/middleware/moderationMiddleware.test.js
  Moderation Middleware
    ✓ should be defined (1 ms)

PASS tests/unit/controllers/adminController.test.js
  adminController
    ✓ should be defined (20 ms)

PASS tests/unit/models/FeedImpression.test.js
  FeedImpression Model
    Schema Validation
      ✓ should be defined (5 ms)
      ✓ should have correct schema structure (2 ms)

PASS tests/unit/queues/progressionQueue.test.js
  progressionQueue
    ✓ should be defined (3 ms)

PASS tests/unit/routes/wallet.routes.test.js
  wallet.routes
    Module structure
      ✓ should be defined
      ✓ should be an Express router (1 ms)
      ✓ should have stack with routes
    Route definitions
      ✓ should have all required routes
      GET /
        ✓ should be defined
        ✓ should call getWallet controller (10 ms)
        ✓ should require authentication
      POST /earn
        ✓ should be defined (1 ms)
        ✓ should call earnCoins controller (10 ms)
        ✓ should accept POST requests
      POST /spend
        ✓ should be defined
        ✓ should call spendCoins controller (2 ms)
      POST /purchase
        ✓ should be defined
        ✓ should call purchaseCoins controller (1 ms)
      GET /history
        ✓ should be defined (1 ms)
        ✓ should call getTransactionHistory controller (1 ms)
      GET /opportunities
        ✓ should be defined
        ✓ should call getEarningOpportunities controller (2 ms)
      GET /spending-options
        ✓ should be defined
        ✓ should call getSpendingOptions controller (1 ms)
      GET /coin-packs
        ✓ should be defined
        ✓ should call getCoinPacks controller (1 ms)
      POST /check-action
        ✓ should be defined
        ✓ should call checkAction controller (3 ms)
      POST /save-streak
        ✓ should be defined (1 ms)
        ✓ should call saveStreak controller (2 ms)
      POST /battle-boost
        ✓ should be defined (1 ms)
        ✓ should call battleBoost controller (2 ms)
      POST /priority-transformation
        ✓ should be defined
        ✓ should call priorityTransformation controller (2 ms)
      POST /retry-transformation
        ✓ should be defined
        ✓ should call retryTransformation controller (2 ms)
      POST /tribe-support
        ✓ should be defined
        ✓ should call tribeSupport controller (2 ms)
    Middleware
      ✓ should use authenticateToken middleware for all routes
      ✓ should parse JSON request bodies (2 ms)
    Error handling
      ✓ should handle 404 for non-existent routes (4 ms)
      ✓ should handle invalid HTTP methods (3 ms)
    Integration
      ✓ should mount correctly on app
      ✓ should handle request chain (3 ms)
      ✓ should pass user context from middleware (1 ms)
    Route count
      ✓ should have 14 routes total
      ✓ should have correct HTTP methods distribution

PASS tests/unit/models/ChatSettings.test.js
  ChatSettings Model
    Schema Validation
      ✓ should be defined (4 ms)
      ✓ should have correct schema structure (6 ms)

PASS tests/unit/config/cloudinary.test.js
  cloudinary Config
    ✓ should be defined (1 ms)

PASS tests/unit/utils/seedData.test.js
  seedData
    ✓ should be defined (1 ms)

PASS tests/unit/services/battleService.test.js
  battleService
    Module exports
      ✓ should be defined
      ✓ should be an object

PASS tests/unit/middleware/errorHandler.test.js
  Error Handler Middleware
    ✓ should be defined if middleware exists (1 ms)
    Error handling
      ✓ should handle ValidationError (1 ms)
      ✓ should handle CastError
      ✓ should handle duplicate key error
      ✓ should handle generic errors
      ✓ should use default status code for errors without status

PASS tests/unit/models/Follow.test.js
  Follow Model
    Schema Validation
      ✓ should be defined (7 ms)
      ✓ should have correct schema structure (2 ms)

PASS tests/unit/models/Achievement.test.js
  Achievement Model
    Schema Validation
      ✓ should be defined (13 ms)
      ✓ should have correct schema structure (3 ms)

PASS tests/unit/utils/prompts.test.js
  Prompts
    ✓ should be defined (1 ms)

PASS tests/unit/config/socket.extended.test.js
  socket config edge cases
    ✓ loads without SOCKET_CORS_ORIGIN (1 ms)
    ✓ reloads cleanly when origin is malformed (1 ms)

PASS tests/unit/utils/helpers.test.js
  Helpers
    ✓ should be defined (1 ms)

PASS tests/unit/services/textModerationService.test.js
  textModerationService
    ✓ getStatus returns initialized state and counts (2 ms)
    ✓ checkBannedWords detects banned words
    ✓ checkSpam detects excessive repetition and punctuation (2 ms)
    ✓ moderateText flags toxic phrases (1 ms)
    ✓ validateUsername returns violations for short and invalid chars (2 ms)
    ✓ should be defined (1 ms)

PASS tests/unit/models/DeviceFingerprint.test.js
  DeviceFingerprint Model
    Schema Validation
      ✓ should be defined (3 ms)
      ✓ should have correct schema structure (1 ms)

PASS tests/unit/workers/notificationQueueWorkers.test.js
  notificationQueueWorkers
    ✓ should be defined (12 ms)

PASS tests/unit/middleware/rateLimiter.test.js
  Rate Limiter Middleware
    createRedisRateLimit
      ✓ should skip rate limiting in development mode (1 ms)
      ✓ should allow request within rate limit
      ✓ should block request exceeding rate limit (1 ms)
      ✓ should handle Redis errors gracefully
    authStartLimiter
      ✓ should be a function (1 ms)
    authVerifyLimiter
      ✓ should be a function
    generalLimiter
      ✓ should be a function (1 ms)
    expressRateLimit
      ✓ should be defined

PASS tests/unit/workers/adminQueueWorkers.test.js
  adminQueueWorkers
    ✓ should be defined (114 ms)

PASS tests/unit/sockets/tribeSocket.test.js
  Tribe Socket
    ✓ should be defined (1 ms)

PASS tests/unit/models/Challenge.test.js
  Challenge Model
    Schema Validation
      ✓ should be defined (22 ms)
      ✓ should have correct schema structure (36 ms)

PASS tests/unit/models/DmMessage.test.js
  DmMessage Model
    Schema Validation
      ✓ should be defined (6 ms)
      ✓ should have correct schema structure (12 ms)

PASS tests/unit/models/Conversation.test.js
  Conversation Model
    Schema Validation
      ✓ should be defined (7 ms)
      ✓ should have correct schema structure (1 ms)

PASS tests/unit/models/AdminUser.test.js
  AdminUser Model
    Schema Validation
      ✓ should be defined (7 ms)
      ✓ should have correct schema structure (2 ms)

PASS tests/unit/services/aiService.test.js
  aiService
    Module exports
      ✓ should be defined (1 ms)
      ✓ should be an object
      ✓ should have generateTransformation method
      ✓ should have checkPredictionStatus method
      ✓ should have waitForCompletion method
    generateTransformation
      ✓ should be defined (1 ms)
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    checkPredictionStatus
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    waitForCompletion
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters (1 ms)

PASS tests/unit/services/faceDetectionService.test.js
  faceDetectionService
    Module exports
      ✓ should be defined
      ✓ should be an object
      ✓ should have init method
      ✓ should have detectFaces method (1 ms)
      ✓ should have performFaceDetection method
      ✓ should have mockFaceDetection method (1 ms)
      ✓ should have extractFace method
      ✓ should have validateImage method
    init
      ✓ should be defined (1 ms)
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters
    detectFaces
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    performFaceDetection
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    mockFaceDetection
      ✓ should be defined
      ✓ should be a function (1 ms)
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    extractFace
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    validateImage
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters

PASS tests/unit/models/ModerationLog.test.js
  ModerationLog Model
    Schema Validation
      ✓ should be defined (28 ms)
      ✓ should have correct schema structure (8 ms)

PASS tests/unit/services/visionModerationService.test.js
  visionModerationService
    Module exports
      ✓ should be defined
      ✓ should be an object
      ✓ should have validateImageFile method (1 ms)
      ✓ should have detectFaces method
      ✓ should have simpleFaceDetection method
      ✓ should have checkNSFW method
      ✓ should have simpleNSFWDetection method
      ✓ should have checkViolence method (2 ms)
      ✓ should have simpleViolenceDetection method
      ✓ should have checkMinors method
      ✓ should have simpleAgeDetection method
      ✓ should have checkCulturalSensitivity method
      ✓ should have simpleCulturalDetection method
      ✓ should have moderateImage method (1 ms)
    validateImageFile
      ✓ should be defined (1 ms)
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    detectFaces
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    simpleFaceDetection
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully (1 ms)
      ✓ should validate input parameters
    checkNSFW
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    simpleNSFWDetection
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    checkViolence
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    simpleViolenceDetection
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    checkMinors
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    simpleAgeDetection
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    checkCulturalSensitivity
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    simpleCulturalDetection
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    moderateImage
      ✓ should be defined
      ✓ should be a function (1 ms)
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters

PASS tests/unit/services/nsfwDetectionService.test.js
  nsfwDetectionService
    Module exports
      ✓ should be defined
      ✓ should be an object
      ✓ should have init method
      ✓ should have detectNSFW method (1 ms)
      ✓ should have performNSFWDetection method
      ✓ should have mockNSFWDetection method
      ✓ should have validateForUpload method
    init
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    detectNSFW
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    performNSFWDetection
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    mockNSFWDetection
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution (1 ms)
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    validateForUpload
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters

PASS tests/unit/services/notificationDispatcher.test.js
  notificationDispatcher
    ✓ registerDispatcher and isChannelAvailable (3 ms)
    ✓ send routes to channel dispatcher (1 ms)
    ✓ sendWithFallback tries channels and returns success on first success
    ✓ getStats includes dispatcher stats (1 ms)
    ✓ should be defined

PASS tests/unit/models/Boost.test.js
  Boost Model
    Schema Validation
      ✓ should be defined (64 ms)
      ✓ should have correct schema structure (44 ms)

PASS tests/unit/queues/notificationQueue.test.js
  notificationQueue
    ✓ should be defined (9 ms)

PASS tests/unit/middleware/entitlementMiddleware.test.js
  Entitlement Middleware
    requireWarriorEntitlements
      ✓ should allow access for users with warrior entitlements (1 ms)
      ✓ should reject users without warrior entitlements (2 ms)
      ✓ should reject unauthenticated users
      ✓ should skip in development mode (1 ms)
    requireTransformAccess
      ✓ should allow access when user can transform
      ✓ should reject when transform limit reached (1 ms)
    requireAllStylesAccess
      ✓ should allow access for users with all styles
      ✓ should reject users without all styles access
    requireAiPriority
      ✓ should allow access for users with AI priority
      ✓ should reject users without AI priority
    requireStreakInsurance
      ✓ should allow access when streak insurance available (1 ms)
      ✓ should reject when no streak insurance
    addEntitlementInfo
      ✓ should add entitlement info to request
    checkPaywallTrigger
      ✓ should set paywall flag when limit reached
      ✓ should not set paywall flag for warrior users

(node:52293) [MONGOOSE] Warning: mongoose: Cannot specify a custom index on `_id` for model name "TribeAggregate", MongoDB does not allow overwriting the default `_id` index. See https://bit.ly/mongodb-id-index
PASS tests/unit/models/TribeAggregate.test.js
  TribeAggregate Model
    Schema Validation
      ✓ should be defined (4 ms)
      ✓ should have correct schema structure (1 ms)

PASS tests/unit/sockets/battleSocket.test.js
  Battle Socket
    ✓ should be defined (1 ms)

PASS tests/unit/services/rewardService.test.js
  rewardService
    ✓ validateRewardData catches invalid inputs (5 ms)
    ✓ deriveLabel returns human-friendly label (2 ms)
    ✓ grantReward returns success and id (2 ms)
    ✓ should be defined (2 ms)

PASS tests/unit/models/BlockedUser.test.js
  BlockedUser Model
    Schema Validation
      ✓ should be defined (4 ms)
      ✓ should have correct schema structure (2 ms)

PASS tests/unit/models/Purchase.test.js
  Purchase Model
    Schema Validation
      ✓ should be defined (13 ms)
      ✓ should have correct schema structure (3 ms)

PASS tests/unit/models/WeeklyChampions.test.js
  WeeklyChampions Model
    Schema Validation
      ✓ should be defined (13 ms)
      ✓ should have correct schema structure (6 ms)

PASS tests/unit/models/TribePointEvent.test.js
  TribePointEvent Model
    Schema Validation
      ✓ should be defined (6 ms)
      ✓ should have correct schema structure (1 ms)

PASS tests/unit/models/UserSettings.test.js
  UserSettings Model
    Schema Validation
      ✓ should be defined (4 ms)
      ✓ should have correct schema structure (1 ms)

PASS tests/unit/config/socket.test.js
  socket Config
    ✓ should be defined (1 ms)

PASS tests/unit/services/fullBodyVideoGenerationService.test.js
  fullBodyVideoGenerationService
    Module exports
      ✓ should be defined (2 ms)
      ✓ should be an object
      ✓ should have generateVideo method (1 ms)
      ✓ should have getMotionPacks method
    generateVideo
      ✓ should be defined
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters
    getMotionPacks
      ✓ should be defined (1 ms)
      ✓ should be a function
      ✓ should handle successful execution
      ✓ should handle errors gracefully
      ✓ should validate input parameters

PASS tests/unit/models/Event.test.js
  Event Model
    Schema Validation
      ✓ should be defined (4 ms)
      ✓ should have correct schema structure (1 ms)

PASS tests/unit/services/feedScoringService.test.js
  feedScoringService
    ✓ calculateRecency decreases with time (1 ms)
    ✓ calculateScore aggregates components and is non-negative
    ✓ updateVelocity stores EMA-based velocity (1 ms)
    ✓ recomputeScores returns summary object
    ✓ should be defined

PASS tests/unit/models/ViralLanding.test.js
  ViralLanding Model
    Schema Validation
      ✓ should be defined (5 ms)
      ✓ should have correct schema structure

PASS tests/unit/models/NotificationTemplate.test.js
  NotificationTemplate Model
    Schema Validation
      ✓ should be defined (5 ms)
      ✓ should have correct schema structure (2 ms)

FAIL tests/unit/services/providers/whatsappProvider.test.js
  ● Test suite failed to run

    Cannot find module '../utils/logger' from 'src/services/providers/whatsappProvider.js'

    Require stack:
      src/services/providers/whatsappProvider.js
      tests/unit/services/providers/whatsappProvider.test.js

      1 | const axios = require('axios');
    > 2 | const { logger } = require('../utils/logger');
        |                    ^
      3 |
      4 | class WhatsAppProvider {
      5 |   constructor() {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.require (src/services/providers/whatsappProvider.js:2:20)
      at Object.require (tests/unit/services/providers/whatsappProvider.test.js:1:26)

FAIL tests/unit/services/templates/notificationTemplates.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/services/templates/notificationTemplates.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../../../../src/services/templates/notificationTemplates');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/services/targeting/targetingEngine.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/services/targeting/targetingEngine.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../../../../src/services/targeting/targetingEngine');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/services/providers/pushProvider.test.js
  ● Test suite failed to run

    Cannot find module 'firebase-admin' from 'src/services/providers/pushProvider.js'

    Require stack:
      src/services/providers/pushProvider.js
      tests/unit/services/providers/pushProvider.test.js

    > 1 | const admin = require('firebase-admin');
        |                                        ^
      2 | const { logger } = require('../utils/logger');
      3 |
      4 | class PushProvider {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (src/services/providers/pushProvider.js:1:40)
      at Object.require (tests/unit/services/providers/pushProvider.test.js:1:22)

FAIL tests/unit/services/providers/inappProvider.test.js
  ● Test suite failed to run

    Cannot find module '../utils/logger' from 'src/services/providers/inappProvider.js'

    Require stack:
      src/services/providers/inappProvider.js
      tests/unit/services/providers/inappProvider.test.js

      1 | const socketService = require('../../sockets/socketService');
    > 2 | const { logger } = require('../utils/logger');
        |                    ^
      3 |
      4 | class InAppProvider {
      5 |   constructor() {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.require (src/services/providers/inappProvider.js:2:20)
      at Object.require (tests/unit/services/providers/inappProvider.test.js:1:23)

FAIL tests/unit/services/imageService.test.js
  ● Test suite failed to run

    TypeError: fs.existsSync is not a function

    > 1 | const sharp = require('sharp');
        |                               ^
      2 | const fs = require('fs').promises;
      3 | const path = require('path');
      4 | const { logger } = require('../utils/logger');

      at Object.hasVendoredLibvips (node_modules/sharp/lib/libvips.js:86:13)
      at Object.<anonymous> (node_modules/sharp/lib/constructor.js:10:22)
      at Object.<anonymous> (node_modules/sharp/lib/index.js:6:15)
      at Object.<anonymous> (src/services/imageService.js:1:31)
      at Object.require (tests/unit/services/imageService.test.js:1:32)

FAIL tests/unit/services/pushNotificationService.test.js
  ● Test suite failed to run

    Cannot find module 'firebase-admin' from 'tests/unit/services/pushNotificationService.test.js'

    > 1 | jest.mock('firebase-admin', () => {
        |                                   ^
      2 |   const sendMulticast = jest.fn(async () => ({ successCount: 0, failureCount: 1, responses: [{ success: false, error: { code: 'messaging/invalid-registration-token' } }] }));
      3 |   const send = jest.fn(async () => 'message-id');
      4 |   return {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/unit/services/pushNotificationService.test.js:1:35)

FAIL tests/unit/services/storageService.test.js
  ● Test suite failed to run

    TypeError: logger.warn is not a function

      11 |   });
      12 | } else {
    > 13 |   logger.warn('AWS credentials not configured - S3 uploads disabled');
         |          ^
      14 | }
      15 |
      16 | /**

      at Object.warn (src/services/storageService.js:13:10)
      at Object.require (tests/unit/services/storageService.test.js:1:24)

(node:52294) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
PASS tests/unit/models/RankScore.test.js
  RankScore Model
    Schema Validation
      ✓ should be defined (26 ms)
      ✓ should have correct schema structure (4 ms)

FAIL tests/unit/utils/logger.test.js
  ● Test suite failed to run

    TypeError: winston.format.timestamp is not a function

       5 |   level: process.env.LOG_LEVEL || 'info',
       6 |   format: winston.format.combine(
    >  7 |     winston.format.timestamp({
         |                    ^
       8 |       format: 'YYYY-MM-DD HH:mm:ss'
       9 |     }),
      10 |     winston.format.errors({ stack: true }),

      at Object.timestamp (src/utils/logger.js:7:20)
      at Object.require (tests/unit/utils/logger.test.js:2:20)

FAIL tests/unit/routes/video.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/video.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/video.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/seeders/adminSeeder.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/seeders/adminSeeder.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/seeders/adminSeeder');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/tribe.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/tribe.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/tribe.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/user.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/user.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/user.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/transform.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/transform.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/transform.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/reward.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/reward.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/reward.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/progression.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/progression.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/progression.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/moderation.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/moderation.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/moderation.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/referral.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/referral.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/referral.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/notification.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/notification.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/notification.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/payment.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/payment.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/payment.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/workers/videoWorker.test.js
  ● Test suite failed to run

    TypeError: logger.warn is not a function

      11 |   });
      12 | } else {
    > 13 |   logger.warn('AWS credentials not configured - S3 uploads disabled');
         |          ^
      14 | }
      15 |
      16 | /**

      at Object.warn (src/services/storageService.js:13:10)
      at Object.require (src/services/videoProcessingService.js:5:24)
      at Object.require (src/workers/videoWorker.js:3:32)
      at Object.require (tests/unit/workers/videoWorker.test.js:1:21)

(node:52292) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
FAIL tests/unit/routes/creator.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/creator.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/creator.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/comment.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/comment.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/comment.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/leaderboard.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/leaderboard.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/leaderboard.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/fraudDetection.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/fraudDetection.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/fraudDetection.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/event.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/event.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/event.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/feed.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/feed.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/feed.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/auth.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/auth.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/auth.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/battle.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/battle.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/battle.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/challenge.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/challenge.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/challenge.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/chat.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/chat.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/chat.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/boost.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/boost.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/boost.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/admin.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/admin.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/admin.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/achievement.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/achievement.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/achievement.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/schedulers/adminSchedulers.test.js
  ● Test suite failed to run

    Cannot find module 'node-cron' from 'tests/unit/schedulers/adminSchedulers.test.js'

       8 | const { logger } = require('../../../src/utils/logger');
       9 |
    > 10 | jest.mock('node-cron');
         |                       ^
      11 | jest.mock('../../../src/services/adminModerationService');
      12 | jest.mock('../../../src/services/adminFraudService');
      13 | jest.mock('../../../src/services/adminUserService');

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/unit/schedulers/adminSchedulers.test.js:10:23)

FAIL tests/unit/schedulers/notificationScheduler.test.js
  ● Test suite failed to run

    Cannot find module 'node-cron' from 'tests/unit/schedulers/notificationScheduler.test.js'

       6 | const { logger } = require('../../../src/utils/logger');
       7 |
    >  8 | jest.mock('node-cron');
         |                       ^
       9 | jest.mock('../../../src/services/notificationService');
      10 | jest.mock('../../../src/models/User');
      11 | jest.mock('../../../src/models/Tribe');

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/unit/schedulers/notificationScheduler.test.js:8:23)

FAIL tests/unit/controllers/transformController.test.js
  ● Test suite failed to run

    Cannot find module '../../../src/services/transformService' from 'tests/unit/controllers/transformController.test.js'

      3 | const { logger } = require('../../../src/utils/logger');
      4 |
    > 5 | jest.mock('../../../src/services/transformService');
        |                                                    ^
      6 | jest.mock('../../../src/utils/logger', () => ({
      7 |   logger: {
      8 |     error: jest.fn(),

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/unit/controllers/transformController.test.js:5:52)

FAIL tests/unit/middleware/imageUpload.test.js
  ● Test suite failed to run

    TypeError: Cannot read properties of undefined (reading 'single')

      44 |
      45 | // Middleware for single image upload
    > 46 | const uploadSingleImage = upload.single('image');
         |                                  ^
      47 |
      48 | // Enhanced upload middleware with validation
      49 | const uploadImageMiddleware = (req, res, next) => {

      at Object.single (src/middleware/imageUpload.js:46:34)
      at Object.require (tests/unit/middleware/imageUpload.test.js:2:21)

FAIL tests/unit/app.test.js
  ● Test suite failed to run

    Cannot find module '../../../src/app' from 'tests/unit/app.test.js'

    > 1 | const app = require('../../../src/app');
        |             ^
      2 | const http = require('http');
      3 |
      4 | jest.mock('http');

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.require (tests/unit/app.test.js:1:13)

FAIL tests/unit/controllers/videoController.test.js
  ● Test suite failed to run

    TypeError: logger.warn is not a function

      11 |   });
      12 | } else {
    > 13 |   logger.warn('AWS credentials not configured - S3 uploads disabled');
         |          ^
      14 | }
      15 |
      16 | /**

      at Object.warn (src/services/storageService.js:13:10)
      at Object.require (src/services/videoProcessingService.js:5:24)
      at Object.<anonymous> (src/controllers/videoController.js:1:77)
      at Object.require (tests/unit/controllers/videoController.test.js:1:25)

(node:52292) NOTE: The AWS SDK for JavaScript (v2) is in maintenance mode.
 SDK releases are limited to address critical bug fixes and security issues only.

Please migrate your code to use AWS SDK for JavaScript (v3).
For more information, check the blog post at https://a.co/cUPnyil
FAIL tests/unit/controllers/paymentController.test.js
  ● Test suite failed to run

    TypeError: logger.warn is not a function

      18 |       }
      19 |     } else {
    > 20 |       logger.warn('Stripe not configured - payments will be disabled');
         |              ^
      21 |     }
      22 |   }
      23 |

      at new warn (src/services/paymentService.js:20:14)
      at Object.<anonymous> (src/services/paymentService.js:498:24)
      at Object.<anonymous> (src/controllers/paymentController.js:1:61)
      at Object.require (tests/unit/controllers/paymentController.test.js:1:27)

A worker process has failed to exit gracefully and has been force exited. This is likely caused by tests leaking due to improper teardown. Try running with --detectOpenHandles to find leaks. Active timers can also cause this, ensure that .unref() was called on them.
Summary of all failing tests
FAIL tests/unit/config/s3.test.js
  ● S3 Config › S3 Client Initialization › should initialize S3 client when credentials are provided

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"accessKeyId": "test-key", "region": "us-west-2", "secretAccessKey": "test-secret"}

    Number of calls: 0

      44 |       const freshS3Config = require('../../../src/config/s3');
      45 |
    > 46 |       expect(AWS.S3).toHaveBeenCalledWith({
         |                      ^
      47 |         accessKeyId: 'test-key',
      48 |         secretAccessKey: 'test-secret',
      49 |         region: 'us-west-2'

      at Object.toHaveBeenCalledWith (tests/unit/config/s3.test.js:46:22)

  ● S3 Config › S3 Client Initialization › should not initialize S3 client when credentials are missing

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "AWS credentials not configured - S3 uploads disabled"

    Number of calls: 0

      60 |
      61 |       expect(freshS3Config.isS3Configured).toBe(false);
    > 62 |       expect(logger.warn).toHaveBeenCalledWith('AWS credentials not configured - S3 uploads disabled');
         |                           ^
      63 |     });
      64 |
      65 |     it('should use default region when not specified', () => {

      at Object.toHaveBeenCalledWith (tests/unit/config/s3.test.js:62:27)

  ● S3 Config › S3 Client Initialization › should use default region when not specified

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"accessKeyId": "test-key", "region": "us-east-1", "secretAccessKey": "test-secret"}

    Number of calls: 0

      71 |       require('../../../src/config/s3');
      72 |
    > 73 |       expect(AWS.S3).toHaveBeenCalledWith({
         |                      ^
      74 |         accessKeyId: 'test-key',
      75 |         secretAccessKey: 'test-secret',
      76 |         region: 'us-east-1'

      at Object.toHaveBeenCalledWith (tests/unit/config/s3.test.js:73:22)

  ● S3 Config › uploadFileToS3 › should upload file to S3 successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "/tmp/test.jpg"

    Number of calls: 0

      92 |       const url = await s3Config.uploadFileToS3(filePath, s3Key);
      93 |
    > 94 |       expect(fs.readFileSync).toHaveBeenCalledWith(filePath);
         |                               ^
      95 |       expect(mockS3Client.upload).toHaveBeenCalledWith(
      96 |         expect.objectContaining({
      97 |           Bucket: 'afroverse-uploads',

      at Object.toHaveBeenCalledWith (tests/unit/config/s3.test.js:94:31)

  ● S3 Config › uploadFileToS3 › should use custom bucket and options

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"ACL": "private", "Bucket": "custom-bucket", "ContentType": "image/jpeg"}

    Number of calls: 0

      116 |       await s3Config.uploadFileToS3(filePath, s3Key, options);
      117 |
    > 118 |       expect(mockS3Client.upload).toHaveBeenCalledWith(
          |                                   ^
      119 |         expect.objectContaining({
      120 |           Bucket: 'custom-bucket',
      121 |           ContentType: 'image/jpeg',

      at Object.toHaveBeenCalledWith (tests/unit/config/s3.test.js:118:35)

  ● S3 Config › uploadFileToS3 › should handle upload errors

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: "https://placeholder.s3.amazonaws.com/test.jpg"

      142 |       });
      143 |
    > 144 |       await expect(
          |             ^
      145 |         s3Config.uploadFileToS3('/tmp/test.jpg', 'test.jpg')
      146 |       ).rejects.toThrow('Upload failed');
      147 |       expect(logger.error).toHaveBeenCalledWith('S3 upload error:', error);

      at expect (node_modules/expect/build/index.js:113:15)
      at Object.expect (tests/unit/config/s3.test.js:144:13)

  ● S3 Config › deleteFileFromS3 › should delete file from S3 successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"Bucket": "afroverse-uploads", "Key": "uploads/test.jpg"}

    Number of calls: 0

      160 |       await s3Config.deleteFileFromS3(s3Key);
      161 |
    > 162 |       expect(mockS3Client.deleteObject).toHaveBeenCalledWith({
          |                                         ^
      163 |         Bucket: 'afroverse-uploads',
      164 |         Key: s3Key
      165 |       });

      at Object.toHaveBeenCalledWith (tests/unit/config/s3.test.js:162:41)

  ● S3 Config › deleteFileFromS3 › should handle delete errors gracefully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "S3 delete error:", [Error: Delete failed]

    Number of calls: 0

      183 |
      184 |       await expect(s3Config.deleteFileFromS3('test.jpg')).resolves.not.toThrow();
    > 185 |       expect(logger.error).toHaveBeenCalledWith('S3 delete error:', error);
          |                            ^
      186 |     });
      187 |   });
      188 |

      at Object.toHaveBeenCalledWith (tests/unit/config/s3.test.js:185:28)

  ● S3 Config › getSignedUrl › should get signed URL successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "getObject", ObjectContaining {"Bucket": "afroverse-uploads", "Expires": 3600, "Key": "uploads/test.jpg"}

    Number of calls: 0

      197 |       const url = await s3Config.getSignedUrl(s3Key);
      198 |
    > 199 |       expect(mockS3Client.getSignedUrl).toHaveBeenCalledWith(
          |                                         ^
      200 |         'getObject',
      201 |         expect.objectContaining({
      202 |           Bucket: 'afroverse-uploads',

      at Object.toHaveBeenCalledWith (tests/unit/config/s3.test.js:199:41)

  ● S3 Config › getSignedUrl › should use custom expiration

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "getObject", ObjectContaining {"Expires": {}}

    Number of calls: 0

      211 |       await s3Config.getSignedUrl('test.jpg', { expires: {} });
      212 |
    > 213 |       expect(mockS3Client.getSignedUrl).toHaveBeenCalledWith(
          |                                         ^
      214 |         'getObject',
      215 |         expect.objectContaining({
      216 |           Expires: {}

      at Object.toHaveBeenCalledWith (tests/unit/config/s3.test.js:213:41)

FAIL tests/unit/controllers/authController.test.js
  ● Auth Controller › startAuth › should send OTP for valid phone number

    TypeError: Cannot set properties of undefined (setting 'setEx')

      36 |     };
      37 |
    > 38 |     redisClient.setEx = jest.fn().mockResolvedValue('OK');
         |                      ^
      39 |     redisClient.get = jest.fn();
      40 |     redisClient.del = jest.fn().mockResolvedValue(1);
      41 |   });

      at Object.<anonymous> (tests/unit/controllers/authController.test.js:38:22)

  ● Auth Controller › startAuth › should reject invalid phone format

    TypeError: Cannot set properties of undefined (setting 'setEx')

      36 |     };
      37 |
    > 38 |     redisClient.setEx = jest.fn().mockResolvedValue('OK');
         |                      ^
      39 |     redisClient.get = jest.fn();
      40 |     redisClient.del = jest.fn().mockResolvedValue(1);
      41 |   });

      at Object.<anonymous> (tests/unit/controllers/authController.test.js:38:22)

  ● Auth Controller › startAuth › should continue even if WhatsApp fails

    TypeError: Cannot set properties of undefined (setting 'setEx')

      36 |     };
      37 |
    > 38 |     redisClient.setEx = jest.fn().mockResolvedValue('OK');
         |                      ^
      39 |     redisClient.get = jest.fn();
      40 |     redisClient.del = jest.fn().mockResolvedValue(1);
      41 |   });

      at Object.<anonymous> (tests/unit/controllers/authController.test.js:38:22)

  ● Auth Controller › verifyAuth › should authenticate user with valid OTP

    TypeError: Cannot set properties of undefined (setting 'setEx')

      36 |     };
      37 |
    > 38 |     redisClient.setEx = jest.fn().mockResolvedValue('OK');
         |                      ^
      39 |     redisClient.get = jest.fn();
      40 |     redisClient.del = jest.fn().mockResolvedValue(1);
      41 |   });

      at Object.<anonymous> (tests/unit/controllers/authController.test.js:38:22)

  ● Auth Controller › verifyAuth › should reject expired OTP

    TypeError: Cannot set properties of undefined (setting 'setEx')

      36 |     };
      37 |
    > 38 |     redisClient.setEx = jest.fn().mockResolvedValue('OK');
         |                      ^
      39 |     redisClient.get = jest.fn();
      40 |     redisClient.del = jest.fn().mockResolvedValue(1);
      41 |   });

      at Object.<anonymous> (tests/unit/controllers/authController.test.js:38:22)

  ● Auth Controller › verifyAuth › should reject after max attempts

    TypeError: Cannot set properties of undefined (setting 'setEx')

      36 |     };
      37 |
    > 38 |     redisClient.setEx = jest.fn().mockResolvedValue('OK');
         |                      ^
      39 |     redisClient.get = jest.fn();
      40 |     redisClient.del = jest.fn().mockResolvedValue(1);
      41 |   });

      at Object.<anonymous> (tests/unit/controllers/authController.test.js:38:22)

  ● Auth Controller › verifyAuth › should increment attempts on wrong OTP

    TypeError: Cannot set properties of undefined (setting 'setEx')

      36 |     };
      37 |
    > 38 |     redisClient.setEx = jest.fn().mockResolvedValue('OK');
         |                      ^
      39 |     redisClient.get = jest.fn();
      40 |     redisClient.del = jest.fn().mockResolvedValue(1);
      41 |   });

      at Object.<anonymous> (tests/unit/controllers/authController.test.js:38:22)

  ● Auth Controller › generateTokens › should generate access and refresh tokens

    TypeError: Cannot set properties of undefined (setting 'setEx')

      36 |     };
      37 |
    > 38 |     redisClient.setEx = jest.fn().mockResolvedValue('OK');
         |                      ^
      39 |     redisClient.get = jest.fn();
      40 |     redisClient.del = jest.fn().mockResolvedValue(1);
      41 |   });

      at Object.<anonymous> (tests/unit/controllers/authController.test.js:38:22)

FAIL tests/unit/services/walletService.test.js
  ● Wallet Service › getOrCreateWallet › should return null for invalid userId

    expect(received).toBeNull()

    Received: {"_id": "wallet123", "addCoins": [Function mockConstructor], "balance": 100, "canEarnToday": [Function mockConstructor], "createdAt": 2025-10-30T09:08:07.275Z, "dailyEarned": 50, "hasEnough": [Function mockConstructor], "lastEarnedAt": 2025-10-30T09:08:07.275Z, "save": [Function mockConstructor], "spendCoins": [Function mockConstructor], "toObject": [Function mockConstructor], "totalEarned": 200, "totalSpent": 100, "updatedAt": 2025-10-30T09:08:07.275Z, "userId": "user123"}

      94 |     it('should return null for invalid userId', async () => {
      95 |       const result = await walletService.getOrCreateWallet(null);
    > 96 |       expect(result).toBeNull();
         |                      ^
      97 |     });
      98 |   });
      99 |

      at Object.toBeNull (tests/unit/services/walletService.test.js:96:22)

  ● Wallet Service › getWallet › should return wallet by userId

    TypeError: walletService.getWallet is not a function

      100 |   describe('getWallet', () => {
      101 |     it('should return wallet by userId', async () => {
    > 102 |       const result = await walletService.getWallet('user123');
          |                                          ^
      103 |
      104 |       expect(Wallet.getOrCreateWallet).toHaveBeenCalledWith('user123');
      105 |       expect(result).toEqual(mockWallet);

      at Object.getWallet (tests/unit/services/walletService.test.js:102:42)

  ● Wallet Service › getWallet › should create wallet if not exists

    TypeError: walletService.getWallet is not a function

      109 |       Wallet.getOrCreateWallet.mockResolvedValueOnce(mockWallet);
      110 |
    > 111 |       const result = await walletService.getWallet('newuser');
          |                                          ^
      112 |
      113 |       expect(result).toEqual(mockWallet);
      114 |     });

      at Object.getWallet (tests/unit/services/walletService.test.js:111:42)

  ● Wallet Service › earnCoins › should successfully earn coins

    Invalid earning reason: 50

      122 |       const amount = customAmount || COIN_RATES[reason];
      123 |       if (!amount) {
    > 124 |         throw new Error(`Invalid earning reason: ${reason}`);
          |               ^
      125 |       }
      126 |       
      127 |       // Check daily limit

      at Object.earnCoins (src/services/walletService.js:124:15)
      at Object.<anonymous> (tests/unit/services/walletService.test.js:119:22)

  ● Wallet Service › earnCoins › should log earning event

    Invalid earning reason: 50

      122 |       const amount = customAmount || COIN_RATES[reason];
      123 |       if (!amount) {
    > 124 |         throw new Error(`Invalid earning reason: ${reason}`);
          |               ^
      125 |       }
      126 |       
      127 |       // Check daily limit

      at Object.earnCoins (src/services/walletService.js:124:15)
      at Object.<anonymous> (tests/unit/services/walletService.test.js:147:7)

  ● Wallet Service › spendCoins › should successfully spend coins

    Invalid spending reason: 25

      179 |       const amount = customAmount || COIN_COSTS[reason];
      180 |       if (!amount) {
    > 181 |         throw new Error(`Invalid spending reason: ${reason}`);
          |               ^
      182 |       }
      183 |       
      184 |       // Check if user has enough coins

      at Object.spendCoins (src/services/walletService.js:181:15)
      at Object.<anonymous> (tests/unit/services/walletService.test.js:155:22)

  ● Wallet Service › spendCoins › should throw error for insufficient balance

    expect(received).rejects.toThrow(expected)

    Expected substring: "Insufficient balance"
    Received message:   "Invalid spending reason: 200"

          179 |       const amount = customAmount || COIN_COSTS[reason];
          180 |       if (!amount) {
        > 181 |         throw new Error(`Invalid spending reason: ${reason}`);
              |               ^
          182 |       }
          183 |       
          184 |       // Check if user has enough coins

      at Object.spendCoins (src/services/walletService.js:181:15)
      at Object.<anonymous> (tests/unit/services/walletService.test.js:167:7)
      at Object.toThrow (node_modules/expect/build/index.js:218:22)
      at Object.toThrow (tests/unit/services/walletService.test.js:168:18)

  ● Wallet Service › spendCoins › should log spending event

    Invalid spending reason: 25

      179 |       const amount = customAmount || COIN_COSTS[reason];
      180 |       if (!amount) {
    > 181 |         throw new Error(`Invalid spending reason: ${reason}`);
          |               ^
      182 |       }
      183 |       
      184 |       // Check if user has enough coins

      at Object.spendCoins (src/services/walletService.js:181:15)
      at Object.<anonymous> (tests/unit/services/walletService.test.js:177:7)

  ● Wallet Service › getTransactionHistory › should return transaction history

    TypeError: WalletTransaction.find(...).sort(...).skip is not a function

      300 |       const transactions = await WalletTransaction.find(query)
      301 |         .sort({ createdAt: -1 })
    > 302 |         .skip((page - 1) * limit)
          |          ^
      303 |         .limit(limit);
      304 |       
      305 |       const total = await WalletTransaction.countDocuments(query);

      at Object.skip [as getTransactionHistory] (src/services/walletService.js:302:10)
      at Object.getTransactionHistory (tests/unit/services/walletService.test.js:193:42)

  ● Wallet Service › getTransactionHistory › should apply pagination

    TypeError: WalletTransaction.find(...).sort(...).skip is not a function

      300 |       const transactions = await WalletTransaction.find(query)
      301 |         .sort({ createdAt: -1 })
    > 302 |         .skip((page - 1) * limit)
          |          ^
      303 |         .limit(limit);
      304 |       
      305 |       const total = await WalletTransaction.countDocuments(query);

      at Object.skip [as getTransactionHistory] (src/services/walletService.js:302:10)
      at Object.getTransactionHistory (tests/unit/services/walletService.test.js:202:27)

  ● Wallet Service › getTransactionHistory › should filter by transaction type

    TypeError: WalletTransaction.find(...).sort(...).skip is not a function

      300 |       const transactions = await WalletTransaction.find(query)
      301 |         .sort({ createdAt: -1 })
    > 302 |         .skip((page - 1) * limit)
          |          ^
      303 |         .limit(limit);
      304 |       
      305 |       const total = await WalletTransaction.countDocuments(query);

      at Object.skip [as getTransactionHistory] (src/services/walletService.js:302:10)
      at Object.getTransactionHistory (tests/unit/services/walletService.test.js:208:27)

  ● Wallet Service › getTransactionHistory › should handle empty history

    TypeError: WalletTransaction.find(...).sort(...).skip is not a function

      300 |       const transactions = await WalletTransaction.find(query)
      301 |         .sort({ createdAt: -1 })
    > 302 |         .skip((page - 1) * limit)
          |          ^
      303 |         .limit(limit);
      304 |       
      305 |       const total = await WalletTransaction.countDocuments(query);

      at Object.skip [as getTransactionHistory] (src/services/walletService.js:302:10)
      at Object.getTransactionHistory (tests/unit/services/walletService.test.js:224:42)

  ● Wallet Service › getBalance › should return current balance

    TypeError: walletService.getBalance is not a function

      231 |   describe('getBalance', () => {
      232 |     it('should return current balance', async () => {
    > 233 |       const result = await walletService.getBalance('user123');
          |                                          ^
      234 |
      235 |       expect(result).toBe(100);
      236 |       expect(Wallet.getOrCreateWallet).toHaveBeenCalledWith('user123');

      at Object.getBalance (tests/unit/services/walletService.test.js:233:42)

  ● Wallet Service › getBalance › should return 0 for new wallet

    TypeError: walletService.getBalance is not a function

      240 |       mockWallet.balance = 0;
      241 |
    > 242 |       const result = await walletService.getBalance('user123');
          |                                          ^
      243 |
      244 |       expect(result).toBe(0);
      245 |     });

      at Object.getBalance (tests/unit/services/walletService.test.js:242:42)

  ● Wallet Service › canAfford › should return true if user can afford

    TypeError: walletService.canAfford is not a function

      250 |       mockWallet.hasEnough.mockReturnValueOnce(true);
      251 |
    > 252 |       const result = await walletService.canAfford('user123', 50);
          |                                          ^
      253 |
      254 |       expect(result).toBe(true);
      255 |       expect(mockWallet.hasEnough).toHaveBeenCalledWith(50);

      at Object.canAfford (tests/unit/services/walletService.test.js:252:42)

  ● Wallet Service › canAfford › should return false if user cannot afford

    TypeError: walletService.canAfford is not a function

      259 |       mockWallet.hasEnough.mockReturnValueOnce(false);
      260 |
    > 261 |       const result = await walletService.canAfford('user123', 200);
          |                                          ^
      262 |
      263 |       expect(result).toBe(false);
      264 |     });

      at Object.canAfford (tests/unit/services/walletService.test.js:261:42)

  ● Wallet Service › canAfford › should handle errors gracefully

    TypeError: walletService.canAfford is not a function

      267 |       Wallet.getOrCreateWallet.mockRejectedValueOnce(new Error('Error'));
      268 |
    > 269 |       const result = await walletService.canAfford('user123', 50);
          |                                          ^
      270 |
      271 |       expect(result).toBe(false);
      272 |       expect(logger.error).toHaveBeenCalled();

      at Object.canAfford (tests/unit/services/walletService.test.js:269:42)

  ● Wallet Service › getEarningOpportunities › should return list of earning opportunities

    User not found

      329 |       const user = await User.findById(userId);
      330 |       if (!user) {
    > 331 |         throw new Error('User not found');
          |               ^
      332 |       }
      333 |       
      334 |       const opportunities = [];

      at Object.getEarningOpportunities (src/services/walletService.js:331:15)
      at Object.<anonymous> (tests/unit/services/walletService.test.js:278:22)

  ● Wallet Service › getEarningOpportunities › should include daily login opportunity

    User not found

      329 |       const user = await User.findById(userId);
      330 |       if (!user) {
    > 331 |         throw new Error('User not found');
          |               ^
      332 |       }
      333 |       
      334 |       const opportunities = [];

      at Object.getEarningOpportunities (src/services/walletService.js:331:15)
      at Object.<anonymous> (tests/unit/services/walletService.test.js:290:22)

  ● Wallet Service › getEarningOpportunities › should include transformation opportunity

    User not found

      329 |       const user = await User.findById(userId);
      330 |       if (!user) {
    > 331 |         throw new Error('User not found');
          |               ^
      332 |       }
      333 |       
      334 |       const opportunities = [];

      at Object.getEarningOpportunities (src/services/walletService.js:331:15)
      at Object.<anonymous> (tests/unit/services/walletService.test.js:297:22)

  ● Wallet Service › getSpendingOptions › should return list of spending options

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Array
    Received constructor: Object

      306 |       const result = await walletService.getSpendingOptions();
      307 |
    > 308 |       expect(result).toBeInstanceOf(Array);
          |                      ^
      309 |       expect(result.length).toBeGreaterThan(0);
      310 |       result.forEach(option => {
      311 |         expect(option).toHaveProperty('action');

      at Object.toBeInstanceOf (tests/unit/services/walletService.test.js:308:22)

  ● Wallet Service › getSpendingOptions › should include boost options

    TypeError: result.find is not a function

      318 |       const result = await walletService.getSpendingOptions();
      319 |
    > 320 |       const boost = result.find(opt => opt.action === 'boost_video');
          |                            ^
      321 |       expect(boost).toBeDefined();
      322 |       expect(boost.cost).toBeGreaterThan(0);
      323 |     });

      at Object.find (tests/unit/services/walletService.test.js:320:28)

  ● Wallet Service › getCoinPacks › should return available coin packs

    expect(received).toHaveProperty(path)

    Expected path: "id"
    Received path: []

    Received value: {"bonus": null, "coins": 100, "price": 149, "priceFormatted": "$1.49", "type": "small"}

      331 |       expect(result.length).toBeGreaterThan(0);
      332 |       result.forEach(pack => {
    > 333 |         expect(pack).toHaveProperty('id');
          |                      ^
      334 |         expect(pack).toHaveProperty('coins');
      335 |         expect(pack).toHaveProperty('price');
      336 |       });

      at toHaveProperty (tests/unit/services/walletService.test.js:333:22)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/unit/services/walletService.test.js:332:14)

  ● Wallet Service › getCoinPacks › should sort packs by price

    expect(received).toBeGreaterThanOrEqual(expected)

    Matcher error: received value must be a number or bigint

    Received has value: undefined

      341 |
      342 |       for (let i = 1; i < result.length; i++) {
    > 343 |         expect(result[i].price.amount).toBeGreaterThanOrEqual(result[i - 1].price.amount);
          |                                        ^
      344 |       }
      345 |     });
      346 |   });

      at Object.toBeGreaterThanOrEqual (tests/unit/services/walletService.test.js:343:40)

  ● Wallet Service › getActionCost › should return cost for known action

    TypeError: walletService.getActionCost is not a function

      348 |   describe('getActionCost', () => {
      349 |     it('should return cost for known action', async () => {
    > 350 |       const cost = await walletService.getActionCost('boost_video');
          |                                        ^
      351 |
      352 |       expect(cost).toBeGreaterThan(0);
      353 |       expect(typeof cost).toBe('number');

      at Object.getActionCost (tests/unit/services/walletService.test.js:350:40)

  ● Wallet Service › getActionCost › should return 0 for unknown action

    TypeError: walletService.getActionCost is not a function

      355 |
      356 |     it('should return 0 for unknown action', async () => {
    > 357 |       const cost = await walletService.getActionCost('unknown_action');
          |                                        ^
      358 |
      359 |       expect(cost).toBe(0);
      360 |     });

      at Object.getActionCost (tests/unit/services/walletService.test.js:357:40)

  ● Wallet Service › getActionCost › should return correct cost for save streak

    TypeError: walletService.getActionCost is not a function

      361 |
      362 |     it('should return correct cost for save streak', async () => {
    > 363 |       const cost = await walletService.getActionCost('save_streak');
          |                                        ^
      364 |
      365 |       expect(cost).toBeGreaterThan(0);
      366 |     });

      at Object.getActionCost (tests/unit/services/walletService.test.js:363:40)

  ● Wallet Service › refundCoins › should refund coins to user

    TypeError: walletService.refundCoins is not a function

      369 |   describe('refundCoins', () => {
      370 |     it('should refund coins to user', async () => {
    > 371 |       const result = await walletService.refundCoins('user123', 50, 'refund_failed_boost');
          |                                          ^
      372 |
      373 |       expect(mockWallet.addCoins).toHaveBeenCalledWith(50);
      374 |       expect(WalletTransaction).toHaveBeenCalled();

      at Object.refundCoins (tests/unit/services/walletService.test.js:371:42)

  ● Wallet Service › refundCoins › should create refund transaction

    TypeError: walletService.refundCoins is not a function

      377 |
      378 |     it('should create refund transaction', async () => {
    > 379 |       await walletService.refundCoins('user123', 50, 'refund');
          |                           ^
      380 |
      381 |       expect(WalletTransaction).toHaveBeenCalledWith(
      382 |         expect.objectContaining({

      at Object.refundCoins (tests/unit/services/walletService.test.js:379:27)

  ● Wallet Service › refundCoins › should handle refund errors

    TypeError: walletService.refundCoins is not a function

      391 |       mockWallet.addCoins.mockRejectedValueOnce(new Error('Refund failed'));
      392 |
    > 393 |       await expect(walletService.refundCoins('user123', 50, 'refund'))
          |                                  ^
      394 |         .rejects.toThrow();
      395 |       expect(logger.error).toHaveBeenCalled();
      396 |     });

      at Object.refundCoins (tests/unit/services/walletService.test.js:393:34)

  ● Wallet Service › getWalletStats › should return wallet statistics

    TypeError: walletService.getWalletStats is not a function

      399 |   describe('getWalletStats', () => {
      400 |     it('should return wallet statistics', async () => {
    > 401 |       const result = await walletService.getWalletStats('user123');
          |                                          ^
      402 |
      403 |       expect(result).toHaveProperty('balance');
      404 |       expect(result).toHaveProperty('totalEarned');

      at Object.getWalletStats (tests/unit/services/walletService.test.js:401:42)

  ● Wallet Service › getWalletStats › should calculate net earnings

    TypeError: walletService.getWalletStats is not a function

      408 |
      409 |     it('should calculate net earnings', async () => {
    > 410 |       const result = await walletService.getWalletStats('user123');
          |                                          ^
      411 |
      412 |       expect(result.netEarnings).toBe(mockWallet.totalEarned - mockWallet.totalSpent);
      413 |     });

      at Object.getWalletStats (tests/unit/services/walletService.test.js:410:42)

FAIL tests/unit/queues/leaderboardQueue.test.js
  ● Leaderboard Queue › Queue initialization › should create leaderboard queue

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "leaderboard queue", ObjectContaining {"redis": ObjectContaining {"host": Any<String>}}

    Number of calls: 0

      29 |   describe('Queue initialization', () => {
      30 |     it('should create leaderboard queue', () => {
    > 31 |       expect(Bull).toHaveBeenCalledWith('leaderboard queue', expect.objectContaining({
         |                    ^
      32 |         redis: expect.objectContaining({
      33 |           host: expect.any(String)
      34 |         })

      at Object.toHaveBeenCalledWith (tests/unit/queues/leaderboardQueue.test.js:31:20)

  ● Leaderboard Queue › Job processors › should register weekly reset processor

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "weekly-reset", Any<Function>

    Number of calls: 0

      39 |   describe('Job processors', () => {
      40 |     it('should register weekly reset processor', () => {
    > 41 |       expect(mockQueue.process).toHaveBeenCalledWith(
         |                                 ^
      42 |         'weekly-reset',
      43 |         expect.any(Function)
      44 |       );

      at Object.toHaveBeenCalledWith (tests/unit/queues/leaderboardQueue.test.js:41:33)

FAIL tests/unit/services/leaderboardService.test.js
  ● Leaderboard Service › awardUserPoints › should award points to user successfully

    TypeError: LeaderboardService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     leaderboardService = new LeaderboardService();
         |                          ^
      25 |
      26 |     redisClient.zincrby = jest.fn().mockResolvedValue(100);
      27 |     redisClient.zscore = jest.fn().mockResolvedValue('150');

      at Object.<anonymous> (tests/unit/services/leaderboardService.test.js:24:26)

  ● Leaderboard Service › awardUserPoints › should reject missing parameters

    TypeError: LeaderboardService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     leaderboardService = new LeaderboardService();
         |                          ^
      25 |
      26 |     redisClient.zincrby = jest.fn().mockResolvedValue(100);
      27 |     redisClient.zscore = jest.fn().mockResolvedValue('150');

      at Object.<anonymous> (tests/unit/services/leaderboardService.test.js:24:26)

  ● Leaderboard Service › awardUserPoints › should update country leaderboards when user has country

    TypeError: LeaderboardService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     leaderboardService = new LeaderboardService();
         |                          ^
      25 |
      26 |     redisClient.zincrby = jest.fn().mockResolvedValue(100);
      27 |     redisClient.zscore = jest.fn().mockResolvedValue('150');

      at Object.<anonymous> (tests/unit/services/leaderboardService.test.js:24:26)

  ● Leaderboard Service › awardTribePoints › should award points to tribe successfully

    TypeError: LeaderboardService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     leaderboardService = new LeaderboardService();
         |                          ^
      25 |
      26 |     redisClient.zincrby = jest.fn().mockResolvedValue(100);
      27 |     redisClient.zscore = jest.fn().mockResolvedValue('150');

      at Object.<anonymous> (tests/unit/services/leaderboardService.test.js:24:26)

  ● Leaderboard Service › getLeaderboard › should get user leaderboard

    TypeError: LeaderboardService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     leaderboardService = new LeaderboardService();
         |                          ^
      25 |
      26 |     redisClient.zincrby = jest.fn().mockResolvedValue(100);
      27 |     redisClient.zscore = jest.fn().mockResolvedValue('150');

      at Object.<anonymous> (tests/unit/services/leaderboardService.test.js:24:26)

  ● Leaderboard Service › getLeaderboard › should get tribe leaderboard

    TypeError: LeaderboardService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     leaderboardService = new LeaderboardService();
         |                          ^
      25 |
      26 |     redisClient.zincrby = jest.fn().mockResolvedValue(100);
      27 |     redisClient.zscore = jest.fn().mockResolvedValue('150');

      at Object.<anonymous> (tests/unit/services/leaderboardService.test.js:24:26)

  ● Leaderboard Service › getUserRank › should get user rank

    TypeError: LeaderboardService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     leaderboardService = new LeaderboardService();
         |                          ^
      25 |
      26 |     redisClient.zincrby = jest.fn().mockResolvedValue(100);
      27 |     redisClient.zscore = jest.fn().mockResolvedValue('150');

      at Object.<anonymous> (tests/unit/services/leaderboardService.test.js:24:26)

FAIL tests/unit/queues/transformQueue.test.js
  ● Transform Queue › Queue initialization › should create transform queue with correct configuration

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "transform", ObjectContaining {"defaultJobOptions": ObjectContaining {"attempts": 3, "backoff": ObjectContaining {"type": "exponential"}}, "redis": ObjectContaining {"host": Any<String>}}

    Number of calls: 0

      32 |   describe('Queue initialization', () => {
      33 |     it('should create transform queue with correct configuration', () => {
    > 34 |       expect(Queue).toHaveBeenCalledWith('transform', expect.objectContaining({
         |                     ^
      35 |         redis: expect.objectContaining({
      36 |           host: expect.any(String)
      37 |         }),

      at Object.toHaveBeenCalledWith (tests/unit/queues/transformQueue.test.js:34:21)

  ● Transform Queue › Job processor › should register transform-image processor

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "transform-image", Any<Function>

    Number of calls: 0

      48 |   describe('Job processor', () => {
      49 |     it('should register transform-image processor', () => {
    > 50 |       expect(mockQueue.process).toHaveBeenCalledWith(
         |                                 ^
      51 |         'transform-image',
      52 |         expect.any(Function)
      53 |       );

      at Object.toHaveBeenCalledWith (tests/unit/queues/transformQueue.test.js:50:33)

  ● Transform Queue › Job processor › should process transformation job successfully

    TypeError: Cannot read properties of undefined (reading '1')

      61 |       const processor = mockQueue.process.mock.calls.find(
      62 |         call => call[0] === 'transform-image'
    > 63 |       )[1];
         |        ^
      64 |
      65 |       const mockJob = {
      66 |         data: {

      at Object.<anonymous> (tests/unit/queues/transformQueue.test.js:63:8)

  ● Transform Queue › Job processor › should handle AI generation failure

    TypeError: Cannot read properties of undefined (reading '1')

      111 |       const processor = mockQueue.process.mock.calls.find(
      112 |         call => call[0] === 'transform-image'
    > 113 |       )[1];
          |        ^
      114 |
      115 |       const mockJob = {
      116 |         data: {

      at Object.<anonymous> (tests/unit/queues/transformQueue.test.js:113:8)

  ● Transform Queue › Job processor › should handle missing transformation

    TypeError: Cannot read properties of undefined (reading '1')

      137 |       const processor = mockQueue.process.mock.calls.find(
      138 |         call => call[0] === 'transform-image'
    > 139 |       )[1];
          |        ^
      140 |
      141 |       const mockJob = {
      142 |         data: {

      at Object.<anonymous> (tests/unit/queues/transformQueue.test.js:139:8)

FAIL tests/unit/services/fraudDetectionService.test.js
  ● Fraud Detection Service › detectVoteFraud › should detect vote fraud patterns

    TypeError: FraudDetectionService is not a constructor

      21 |   beforeEach(() => {
      22 |     jest.clearAllMocks();
    > 23 |     fraudService = new FraudDetectionService();
         |                    ^
      24 |   });
      25 |
      26 |   describe('detectVoteFraud', () => {

      at Object.<anonymous> (tests/unit/services/fraudDetectionService.test.js:23:20)

  ● Fraud Detection Service › detectVoteFraud › should not detect fraud for normal voting

    TypeError: FraudDetectionService is not a constructor

      21 |   beforeEach(() => {
      22 |     jest.clearAllMocks();
    > 23 |     fraudService = new FraudDetectionService();
         |                    ^
      24 |   });
      25 |
      26 |   describe('detectVoteFraud', () => {

      at Object.<anonymous> (tests/unit/services/fraudDetectionService.test.js:23:20)

  ● Fraud Detection Service › detectMultiAccount › should detect multi-account usage

    TypeError: FraudDetectionService is not a constructor

      21 |   beforeEach(() => {
      22 |     jest.clearAllMocks();
    > 23 |     fraudService = new FraudDetectionService();
         |                    ^
      24 |   });
      25 |
      26 |   describe('detectVoteFraud', () => {

      at Object.<anonymous> (tests/unit/services/fraudDetectionService.test.js:23:20)

  ● Fraud Detection Service › fraudTypes › should have all required fraud types

    TypeError: FraudDetectionService is not a constructor

      21 |   beforeEach(() => {
      22 |     jest.clearAllMocks();
    > 23 |     fraudService = new FraudDetectionService();
         |                    ^
      24 |   });
      25 |
      26 |   describe('detectVoteFraud', () => {

      at Object.<anonymous> (tests/unit/services/fraudDetectionService.test.js:23:20)

FAIL tests/unit/queues/paymentQueue.test.js
  ● Payment Queue › Queue initialization › should create payment queue with correct configuration

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "payment queue", ObjectContaining {"redis": ObjectContaining {"host": Any<String>, "port": Any<Number>}}

    Number of calls: 0

      30 |   describe('Queue initialization', () => {
      31 |     it('should create payment queue with correct configuration', () => {
    > 32 |       expect(Bull).toHaveBeenCalledWith('payment queue', expect.objectContaining({
         |                    ^
      33 |         redis: expect.objectContaining({
      34 |           host: expect.any(String),
      35 |           port: expect.any(Number)

      at Object.toHaveBeenCalledWith (tests/unit/queues/paymentQueue.test.js:32:20)

  ● Payment Queue › Job processors › should register subscription expiry checker processor

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "subscription-expiry-checker", Any<Function>

    Number of calls: 0

      41 |   describe('Job processors', () => {
      42 |     it('should register subscription expiry checker processor', () => {
    > 43 |       expect(mockQueue.process).toHaveBeenCalledWith(
         |                                 ^
      44 |         'subscription-expiry-checker',
      45 |         expect.any(Function)
      46 |       );

      at Object.toHaveBeenCalledWith (tests/unit/queues/paymentQueue.test.js:43:33)

  ● Payment Queue › Job processors › should register renewal reminder sender processor

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "send-renewal-reminder", Any<Function>

    Number of calls: 0

      48 |
      49 |     it('should register renewal reminder sender processor', () => {
    > 50 |       expect(mockQueue.process).toHaveBeenCalledWith(
         |                                 ^
      51 |         'send-renewal-reminder',
      52 |         expect.any(Function)
      53 |       );

      at Object.toHaveBeenCalledWith (tests/unit/queues/paymentQueue.test.js:50:33)

  ● Payment Queue › Job processors › should process subscription expiry checker job

    TypeError: Cannot read properties of undefined (reading '1')

      57 |       const processor = mockQueue.process.mock.calls.find(
      58 |         call => call[0] === 'subscription-expiry-checker'
    > 59 |       )[1];
         |        ^
      60 |
      61 |       subscriptionService.checkExpiredSubscriptions = jest.fn().mockResolvedValue({
      62 |         checked: 10,

      at Object.<anonymous> (tests/unit/queues/paymentQueue.test.js:59:8)

  ● Payment Queue › Job processors › should handle errors in subscription expiry checker

    TypeError: Cannot read properties of undefined (reading '1')

      78 |       const processor = mockQueue.process.mock.calls.find(
      79 |         call => call[0] === 'subscription-expiry-checker'
    > 80 |       )[1];
         |        ^
      81 |
      82 |       subscriptionService.checkExpiredSubscriptions = jest.fn().mockRejectedValue(
      83 |         new Error('Service error')

      at Object.<anonymous> (tests/unit/queues/paymentQueue.test.js:80:8)

FAIL tests/unit/sockets/socketService.test.js
  ● Socket Service › emitLeaderboardUpdate › should emit leaderboard update to room

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "leaderboard:users:weekly"
    Received: "lb:users:weekly"

    Number of calls: 1

      187 |       });
      188 |
    > 189 |       expect(mockIO.to).toHaveBeenCalledWith('leaderboard:users:weekly');
          |                         ^
      190 |       expect(mockIO.emit).toHaveBeenCalledWith('leaderboard-update', expect.any(Object));
      191 |     });
      192 |   });

      at Object.toHaveBeenCalledWith (tests/unit/sockets/socketService.test.js:189:25)

  ● Socket Service › emitTransformationUpdate › should emit transformation update to room

    TypeError: socketService.emitTransformationUpdate is not a function

      197 |       mockIO.to.mockReturnThis();
      198 |
    > 199 |       socketService.emitTransformationUpdate('transform123', {
          |                     ^
      200 |         status: 'completed',
      201 |         progress: 100
      202 |       });

      at Object.emitTransformationUpdate (tests/unit/sockets/socketService.test.js:199:21)

FAIL tests/unit/services/notificationService.test.js
  ● Notification Service › registerDispatcher › should register a dispatcher for a channel

    TypeError: NotificationService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     notificationService = new NotificationService();
         |                           ^
      25 |
      26 |     mockUserSettings = {
      27 |       match: 'settings123',

      at Object.<anonymous> (tests/unit/services/notificationService.test.js:24:27)

  ● Notification Service › setRulesEngine › should set the rules engine

    TypeError: NotificationService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     notificationService = new NotificationService();
         |                           ^
      25 |
      26 |     mockUserSettings = {
      27 |       match: 'settings123',

      at Object.<anonymous> (tests/unit/services/notificationService.test.js:24:27)

  ● Notification Service › sendNotification › should send notification successfully

    TypeError: NotificationService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     notificationService = new NotificationService();
         |                           ^
      25 |
      26 |     mockUserSettings = {
      27 |       match: 'settings123',

      at Object.<anonymous> (tests/unit/services/notificationService.test.js:24:27)

  ● Notification Service › sendNotification › should not send when user cannot receive notification

    TypeError: NotificationService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     notificationService = new NotificationService();
         |                           ^
      25 |
      26 |     mockUserSettings = {
      27 |       match: 'settings123',

      at Object.<anonymous> (tests/unit/services/notificationService.test.js:24:27)

  ● Notification Service › sendNotification › should not send when template not found

    TypeError: NotificationService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     notificationService = new NotificationService();
         |                           ^
      25 |
      26 |     mockUserSettings = {
      27 |       match: 'settings123',

      at Object.<anonymous> (tests/unit/services/notificationService.test.js:24:27)

  ● Notification Service › sendNotification › should not send when template validation fails

    TypeError: NotificationService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     notificationService = new NotificationService();
         |                           ^
      25 |
      26 |     mockUserSettings = {
      27 |       match: 'settings123',

      at Object.<anonymous> (tests/unit/services/notificationService.test.js:24:27)

  ● Notification Service › sendNotification › should handle dispatcher not available

    TypeError: NotificationService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     notificationService = new NotificationService();
         |                           ^
      25 |
      26 |     mockUserSettings = {
      27 |       match: 'settings123',

      at Object.<anonymous> (tests/unit/services/notificationService.test.js:24:27)

  ● Notification Service › sendNotification › should block notification when rules engine rejects

    TypeError: NotificationService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     notificationService = new NotificationService();
         |                           ^
      25 |
      26 |     mockUserSettings = {
      27 |       match: 'settings123',

      at Object.<anonymous> (tests/unit/services/notificationService.test.js:24:27)

  ● Notification Service › sendNotification › should handle dispatch errors

    TypeError: NotificationService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     notificationService = new NotificationService();
         |                           ^
      25 |
      26 |     mockUserSettings = {
      27 |       match: 'settings123',

      at Object.<anonymous> (tests/unit/services/notificationService.test.js:24:27)

  ● Notification Service › sendBulkNotification › should send notifications to multiple users

    TypeError: NotificationService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     notificationService = new NotificationService();
         |                           ^
      25 |
      26 |     mockUserSettings = {
      27 |       match: 'settings123',

      at Object.<anonymous> (tests/unit/services/notificationService.test.js:24:27)

  ● Notification Service › sendBulkNotification › should handle individual failures

    TypeError: NotificationService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     notificationService = new NotificationService();
         |                           ^
      25 |
      26 |     mockUserSettings = {
      27 |       match: 'settings123',

      at Object.<anonymous> (tests/unit/services/notificationService.test.js:24:27)

FAIL tests/unit/services/subscriptionService.test.js
  ● Subscription Service › checkExpiredSubscriptions › should process expired subscriptions

    TypeError: SubscriptionService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     subscriptionService = new SubscriptionService();
         |                           ^
      25 |
      26 |     mockSubscription = {
      27 |       _id: 'sub123',

      at Object.<anonymous> (tests/unit/services/subscriptionService.test.js:24:27)

  ● Subscription Service › checkExpiredSubscriptions › should handle errors gracefully

    TypeError: SubscriptionService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     subscriptionService = new SubscriptionService();
         |                           ^
      25 |
      26 |     mockSubscription = {
      27 |       _id: 'sub123',

      at Object.<anonymous> (tests/unit/services/subscriptionService.test.js:24:27)

  ● Subscription Service › checkExpiredSubscriptions › should return empty results when no expired subscriptions

    TypeError: SubscriptionService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     subscriptionService = new SubscriptionService();
         |                           ^
      25 |
      26 |     mockSubscription = {
      27 |       _id: 'sub123',

      at Object.<anonymous> (tests/unit/services/subscriptionService.test.js:24:27)

  ● Subscription Service › sendRenewalReminders › should send renewal reminders

    TypeError: SubscriptionService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     subscriptionService = new SubscriptionService();
         |                           ^
      25 |
      26 |     mockSubscription = {
      27 |       _id: 'sub123',

      at Object.<anonymous> (tests/unit/services/subscriptionService.test.js:24:27)

  ● Subscription Service › sendRenewalReminders › should not send duplicate reminders

    TypeError: SubscriptionService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     subscriptionService = new SubscriptionService();
         |                           ^
      25 |
      26 |     mockSubscription = {
      27 |       _id: 'sub123',

      at Object.<anonymous> (tests/unit/services/subscriptionService.test.js:24:27)

  ● Subscription Service › sendRenewalReminders › should handle errors when sending reminders

    TypeError: SubscriptionService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     subscriptionService = new SubscriptionService();
         |                           ^
      25 |
      26 |     mockSubscription = {
      27 |       _id: 'sub123',

      at Object.<anonymous> (tests/unit/services/subscriptionService.test.js:24:27)

  ● Subscription Service › sendRenewalReminder › should send reminder for specific subscription

    TypeError: SubscriptionService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     subscriptionService = new SubscriptionService();
         |                           ^
      25 |
      26 |     mockSubscription = {
      27 |       _id: 'sub123',

      at Object.<anonymous> (tests/unit/services/subscriptionService.test.js:24:27)

  ● Subscription Service › sendRenewalReminder › should throw error if user not found

    TypeError: SubscriptionService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     subscriptionService = new SubscriptionService();
         |                           ^
      25 |
      26 |     mockSubscription = {
      27 |       _id: 'sub123',

      at Object.<anonymous> (tests/unit/services/subscriptionService.test.js:24:27)

  ● Subscription Service › getRenewalReminderMessage › should return correct message for 7 days

    TypeError: SubscriptionService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     subscriptionService = new SubscriptionService();
         |                           ^
      25 |
      26 |     mockSubscription = {
      27 |       _id: 'sub123',

      at Object.<anonymous> (tests/unit/services/subscriptionService.test.js:24:27)

  ● Subscription Service › getRenewalReminderMessage › should return correct message for 3 days

    TypeError: SubscriptionService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     subscriptionService = new SubscriptionService();
         |                           ^
      25 |
      26 |     mockSubscription = {
      27 |       _id: 'sub123',

      at Object.<anonymous> (tests/unit/services/subscriptionService.test.js:24:27)

  ● Subscription Service › getRenewalReminderMessage › should return correct message for 1 day

    TypeError: SubscriptionService is not a constructor

      22 |   beforeEach(() => {
      23 |     jest.clearAllMocks();
    > 24 |     subscriptionService = new SubscriptionService();
         |                           ^
      25 |
      26 |     mockSubscription = {
      27 |       _id: 'sub123',

      at Object.<anonymous> (tests/unit/services/subscriptionService.test.js:24:27)

FAIL tests/unit/services/trustScoreService.test.js
  ● Trust Score Service › should be defined

    TypeError: TrustScoreService is not a constructor

      16 |   beforeEach(() => {
      17 |     jest.clearAllMocks();
    > 18 |     trustScoreService = new TrustScoreService();
         |                         ^
      19 |   });
      20 |
      21 |   it('should be defined', () => {

      at Object.<anonymous> (tests/unit/services/trustScoreService.test.js:18:25)

  ● Trust Score Service › createTrustScore › should create trust score for user

    TypeError: TrustScoreService is not a constructor

      16 |   beforeEach(() => {
      17 |     jest.clearAllMocks();
    > 18 |     trustScoreService = new TrustScoreService();
         |                         ^
      19 |   });
      20 |
      21 |   it('should be defined', () => {

      at Object.<anonymous> (tests/unit/services/trustScoreService.test.js:18:25)

  ● Trust Score Service › getTrustScoreByUser › should get trust score by user

    TypeError: TrustScoreService is not a constructor

      16 |   beforeEach(() => {
      17 |     jest.clearAllMocks();
    > 18 |     trustScoreService = new TrustScoreService();
         |                         ^
      19 |   });
      20 |
      21 |   it('should be defined', () => {

      at Object.<anonymous> (tests/unit/services/trustScoreService.test.js:18:25)

  ● Trust Score Service › checkUserPermissions › should check user permissions

    TypeError: TrustScoreService is not a constructor

      16 |   beforeEach(() => {
      17 |     jest.clearAllMocks();
    > 18 |     trustScoreService = new TrustScoreService();
         |                         ^
      19 |   });
      20 |
      21 |   it('should be defined', () => {

      at Object.<anonymous> (tests/unit/services/trustScoreService.test.js:18:25)

FAIL tests/unit/models/Subscription.test.js
  ● Subscription Model › Schema Validation › should create subscription with required fields

    ValidationError: Subscription validation failed: price.amount: Path `price.amount` is required., providerRef: Path `providerRef` is required., expiresAt: Path `expiresAt` is required., startedAt: Path `startedAt` is required., product: Path `product` is required., provider: Path `provider` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

FAIL tests/unit/queues/queueManager.test.js
  ● Queue Manager › initializeQueues › should initialize all queues

    expect(received).toBeDefined()

    Received: undefined

      51 |     it('should initialize all queues', async () => {
      52 |       const result = await queueManager.initializeQueues();
    > 53 |       expect(result).toBeDefined();
         |                      ^
      54 |     });
      55 |
      56 |     it('should resolve successfully', async () => {

      at Object.toBeDefined (tests/unit/queues/queueManager.test.js:53:22)

FAIL tests/unit/models/User.test.js
  ● User Model › Default Values › should set default progression values

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

      109 |
      110 |       expect(user.progression.level).toBe(1);
    > 111 |       expect(user.progression.vibranium).toBe(0);
          |                                          ^
      112 |     });
      113 |   });
      114 |

      at Object.toBe (tests/unit/models/User.test.js:111:42)

FAIL tests/unit/models/Comment.test.js
  ● Comment Model › Schema Validation › should require videoId field

    ValidationError: Video validation failed: region: Path `region` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Comment Model › Schema Validation › should require userId field

    ValidationError: Video validation failed: region: Path `region` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Comment Model › Schema Validation › should create comment with required fields

    ValidationError: Video validation failed: region: Path `region` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

FAIL tests/unit/controllers/walletController.test.js
  ● Wallet Controller › getTransactionHistory › should return transaction history

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      "user123",
      Object {
    -   "limit": "20",
    -   "skip": "0",
    +   "endDate": undefined,
    +   "limit": 20,
    +   "page": 1,
    +   "reason": undefined,
    +   "startDate": undefined,
    +   "type": undefined,
      },

    Number of calls: 1

      283 |       await walletController.getTransactionHistory(req, res);
      284 |
    > 285 |       expect(walletService.getTransactionHistory).toHaveBeenCalledWith('user123', {
          |                                                   ^
      286 |         limit: '20',
      287 |         skip: '0'
      288 |       });

      at Object.toHaveBeenCalledWith (tests/unit/controllers/walletController.test.js:285:51)

  ● Wallet Controller › checkAction › should check if user can afford action

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "user123", "boost_video"

    Number of calls: 0

      371 |       await walletController.checkAction(req, res);
      372 |
    > 373 |       expect(walletService.checkAction).toHaveBeenCalledWith('user123', 'boost_video');
          |                                         ^
      374 |       expect(res.json).toHaveBeenCalledWith({
      375 |         success: true,
      376 |         ...mockResult

      at Object.toHaveBeenCalledWith (tests/unit/controllers/walletController.test.js:373:41)

  ● Wallet Controller › saveStreak › should save streak using coins

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "user123"

    Number of calls: 0

      399 |       await walletController.saveStreak(req, res);
      400 |
    > 401 |       expect(walletService.saveStreak).toHaveBeenCalledWith('user123');
          |                                        ^
      402 |       expect(res.json).toHaveBeenCalledWith({
      403 |         success: true,
      404 |         ...mockResult

      at Object.toHaveBeenCalledWith (tests/unit/controllers/walletController.test.js:401:40)

  ● Wallet Controller › battleBoost › should boost battle using coins

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "user123", "battle123"

    Number of calls: 0

      429 |       await walletController.battleBoost(req, res);
      430 |
    > 431 |       expect(walletService.battleBoost).toHaveBeenCalledWith('user123', 'battle123');
          |                                         ^
      432 |       expect(res.json).toHaveBeenCalledWith({
      433 |         success: true,
      434 |         ...mockResult

      at Object.toHaveBeenCalledWith (tests/unit/controllers/walletController.test.js:431:41)

  ● Wallet Controller › priorityTransformation › should prioritize transformation using coins

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "user123", "transform123"

    Number of calls: 0

      451 |       await walletController.priorityTransformation(req, res);
      452 |
    > 453 |       expect(walletService.priorityTransformation).toHaveBeenCalledWith('user123', 'transform123');
          |                                                    ^
      454 |       expect(res.json).toHaveBeenCalledWith({
      455 |         success: true,
      456 |         ...mockResult

      at Object.toHaveBeenCalledWith (tests/unit/controllers/walletController.test.js:453:52)

  ● Wallet Controller › retryTransformation › should retry failed transformation using coins

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "user123", "transform123"

    Number of calls: 0

      473 |       await walletController.retryTransformation(req, res);
      474 |
    > 475 |       expect(walletService.retryTransformation).toHaveBeenCalledWith('user123', 'transform123');
          |                                                 ^
      476 |       expect(res.json).toHaveBeenCalledWith({
      477 |         success: true,
      478 |         ...mockResult

      at Object.toHaveBeenCalledWith (tests/unit/controllers/walletController.test.js:475:49)

  ● Wallet Controller › tribeSupport › should support tribe using coins

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "user123"

    Number of calls: 0

      493 |       await walletController.tribeSupport(req, res);
      494 |
    > 495 |       expect(walletService.tribeSupport).toHaveBeenCalledWith('user123');
          |                                          ^
      496 |       expect(res.json).toHaveBeenCalledWith({
      497 |         success: true,
      498 |         ...mockResult

      at Object.toHaveBeenCalledWith (tests/unit/controllers/walletController.test.js:495:42)

  ● Wallet Controller › tribeSupport › should handle errors

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      505 |       await walletController.tribeSupport(req, res);
      506 |
    > 507 |       expect(logger.error).toHaveBeenCalled();
          |                            ^
      508 |       expect(res.status).toHaveBeenCalledWith(400);
      509 |     });
      510 |   });

      at Object.toHaveBeenCalled (tests/unit/controllers/walletController.test.js:507:28)

FAIL tests/unit/models/Vote.test.js
  ● Vote Model › Schema Validation › should require battleId field

    ValidationError: Battle validation failed: meta.challengeTarget: Path `meta.challengeTarget` is required., meta.challengeMethod: Path `meta.challengeMethod` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Vote Model › Schema Validation › should require userId field

    ValidationError: Battle validation failed: meta.challengeTarget: Path `meta.challengeTarget` is required., meta.challengeMethod: Path `meta.challengeMethod` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Vote Model › Schema Validation › should validate winner enum

    ValidationError: Battle validation failed: meta.challengeTarget: Path `meta.challengeTarget` is required., meta.challengeMethod: Path `meta.challengeMethod` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Vote Model › Schema Validation › should create vote with valid winner

    ValidationError: Battle validation failed: meta.challengeTarget: Path `meta.challengeTarget` is required., meta.challengeMethod: Path `meta.challengeMethod` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

FAIL tests/unit/middleware/auth.test.js
  ● Auth Middleware › authenticateToken › should reject invalid token format

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 401

    Number of calls: 0

      59 |       await authenticateToken(req, res, next);
      60 |
    > 61 |       expect(res.status).toHaveBeenCalledWith(401);
         |                          ^
      62 |       expect(res.json).toHaveBeenCalledWith({
      63 |         success: false,
      64 |         message: 'Access token required'

      at Object.toHaveBeenCalledWith (tests/unit/middleware/auth.test.js:61:26)

FAIL tests/unit/models/Battle.test.js
  ● Battle Model › Schema Validation › should require shortCode field

    ValidationError: Transformation validation failed: jobId: Path `jobId` is required., shareCode: Path `shareCode` is required., ai.processingTime: Path `ai.processingTime` is required., ai.prompt: Path `ai.prompt` is required., result.height: Path `result.height` is required., result.width: Path `result.width` is required., result.style: Path `result.style` is required., result.thumbnailUrl: Path `result.thumbnailUrl` is required., result.url: Path `result.url` is required., original.size: Path `original.size` is required., original.filename: Path `original.filename` is required., original.height: Path `original.height` is required., original.width: Path `original.width` is required., original.url: Path `original.url` is required., userId: Path `userId` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Battle Model › Schema Validation › should require share field

    ValidationError: Transformation validation failed: jobId: Path `jobId` is required., shareCode: Path `shareCode` is required., ai.processingTime: Path `ai.processingTime` is required., ai.prompt: Path `ai.prompt` is required., result.height: Path `result.height` is required., result.width: Path `result.width` is required., result.style: Path `result.style` is required., result.thumbnailUrl: Path `result.thumbnailUrl` is required., result.url: Path `result.url` is required., original.size: Path `original.size` is required., original.filename: Path `original.filename` is required., original.height: Path `original.height` is required., original.width: Path `original.width` is required., original.url: Path `original.url` is required., userId: Path `userId` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Battle Model › Schema Validation › should require challenger field

    ValidationError: Transformation validation failed: jobId: Path `jobId` is required., shareCode: Path `shareCode` is required., ai.processingTime: Path `ai.processingTime` is required., ai.prompt: Path `ai.prompt` is required., result.height: Path `result.height` is required., result.width: Path `result.width` is required., result.style: Path `result.style` is required., result.thumbnailUrl: Path `result.thumbnailUrl` is required., result.url: Path `result.url` is required., original.size: Path `original.size` is required., original.filename: Path `original.filename` is required., original.height: Path `original.height` is required., original.width: Path `original.width` is required., original.url: Path `original.url` is required., userId: Path `userId` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Battle Model › Schema Validation › should validate status enum values

    ValidationError: Transformation validation failed: jobId: Path `jobId` is required., shareCode: Path `shareCode` is required., ai.processingTime: Path `ai.processingTime` is required., ai.prompt: Path `ai.prompt` is required., result.height: Path `result.height` is required., result.width: Path `result.width` is required., result.style: Path `result.style` is required., result.thumbnailUrl: Path `result.thumbnailUrl` is required., result.url: Path `result.url` is required., original.size: Path `original.size` is required., original.filename: Path `original.filename` is required., original.height: Path `original.height` is required., original.width: Path `original.width` is required., original.url: Path `original.url` is required., userId: Path `userId` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Battle Model › Schema Validation › should create battle with required fields

    ValidationError: Transformation validation failed: jobId: Path `jobId` is required., shareCode: Path `shareCode` is required., ai.processingTime: Path `ai.processingTime` is required., ai.prompt: Path `ai.prompt` is required., result.height: Path `result.height` is required., result.width: Path `result.width` is required., result.style: Path `result.style` is required., result.thumbnailUrl: Path `result.thumbnailUrl` is required., result.url: Path `result.url` is required., original.size: Path `original.size` is required., original.filename: Path `original.filename` is required., original.height: Path `original.height` is required., original.width: Path `original.width` is required., original.url: Path `original.url` is required., userId: Path `userId` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Battle Model › Default Values › should set default status to pending

    ValidationError: Transformation validation failed: jobId: Path `jobId` is required., shareCode: Path `shareCode` is required., ai.processingTime: Path `ai.processingTime` is required., ai.prompt: Path `ai.prompt` is required., result.height: Path `result.height` is required., result.width: Path `result.width` is required., result.style: Path `result.style` is required., result.thumbnailUrl: Path `result.thumbnailUrl` is required., result.url: Path `result.url` is required., original.size: Path `original.size` is required., original.filename: Path `original.filename` is required., original.height: Path `original.height` is required., original.width: Path `original.width` is required., original.url: Path `original.url` is required., userId: Path `userId` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Battle Model › Default Values › should set default timeline.created

    ValidationError: Transformation validation failed: jobId: Path `jobId` is required., shareCode: Path `shareCode` is required., ai.processingTime: Path `ai.processingTime` is required., ai.prompt: Path `ai.prompt` is required., result.height: Path `result.height` is required., result.width: Path `result.width` is required., result.style: Path `result.style` is required., result.thumbnailUrl: Path `result.thumbnailUrl` is required., result.url: Path `result.url` is required., original.size: Path `original.size` is required., original.filename: Path `original.filename` is required., original.height: Path `original.height` is required., original.width: Path `original.width` is required., original.url: Path `original.url` is required., userId: Path `userId` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Battle Model › Unique Constraints › should enforce unique shortCode

    ValidationError: Transformation validation failed: jobId: Path `jobId` is required., shareCode: Path `shareCode` is required., ai.processingTime: Path `ai.processingTime` is required., ai.prompt: Path `ai.prompt` is required., result.height: Path `result.height` is required., result.width: Path `result.width` is required., result.style: Path `result.style` is required., result.thumbnailUrl: Path `result.thumbnailUrl` is required., result.url: Path `result.url` is required., original.size: Path `original.size` is required., original.filename: Path `original.filename` is required., original.height: Path `original.height` is required., original.width: Path `original.width` is required., original.url: Path `original.url` is required., userId: Path `userId` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

FAIL tests/unit/models/Video.test.js
  ● Video Model › Schema Validation › should accept valid type enum values

    ValidationError: Video validation failed: region: Path `region` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Video Model › Schema Validation › should create video with all required fields

    ValidationError: Video validation failed: region: Path `region` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Video Model › Default Values › should set default stats values

    ValidationError: Video validation failed: region: Path `region` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

FAIL tests/unit/models/Notification.test.js
  ● Notification Model › Schema Validation › should create notification with required fields

    ValidationError: Notification validation failed: channel: Path `channel` is required., type: `test_notification` is not a valid enum value for path `type`.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Notification Model › Default Values › should set default status to pending

    ValidationError: Notification validation failed: channel: Path `channel` is required., type: `test_notification` is not a valid enum value for path `type`.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

FAIL tests/unit/middleware/adminRBAC.test.js
  ● Admin RBAC Middleware › requireRole › should allow access for authorized role

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      36 |       middleware(req, res, next);
      37 |
    > 38 |       expect(next).toHaveBeenCalled();
         |                    ^
      39 |       expect(res.status).not.toHaveBeenCalled();
      40 |     });
      41 |

      at Object.toHaveBeenCalled (tests/unit/middleware/adminRBAC.test.js:38:20)

  ● Admin RBAC Middleware › requireRole › should reject unauthorized role

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 403
    Received: 500

    Number of calls: 1

      45 |       middleware(req, res, next);
      46 |
    > 47 |       expect(res.status).toHaveBeenCalledWith(403);
         |                          ^
      48 |       expect(next).not.toHaveBeenCalled();
      49 |     });
      50 |

      at Object.toHaveBeenCalledWith (tests/unit/middleware/adminRBAC.test.js:47:26)

  ● Admin RBAC Middleware › requireRole › should reject when no admin in request

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: 401
    Received: 500

    Number of calls: 1

      54 |       middleware(req, res, next);
      55 |
    > 56 |       expect(res.status).toHaveBeenCalledWith(401);
         |                          ^
      57 |     });
      58 |   });
      59 |

      at Object.toHaveBeenCalledWith (tests/unit/middleware/adminRBAC.test.js:56:26)

  ● Admin RBAC Middleware › requirePermission › should allow access when user has permission

    TypeError: requirePermission is not a function

      61 |     it('should allow access when user has permission', () => {
      62 |       req.admin.hasPermission = jest.fn().mockReturnValue(true);
    > 63 |       const middleware = requirePermission('users', 'read');
         |                          ^
      64 |       middleware(req, res, next);
      65 |
      66 |       expect(next).toHaveBeenCalled();

      at Object.requirePermission (tests/unit/middleware/adminRBAC.test.js:63:26)

  ● Admin RBAC Middleware › requirePermission › should reject when user lacks permission

    TypeError: requirePermission is not a function

      70 |     it('should reject when user lacks permission', () => {
      71 |       req.admin.hasPermission = jest.fn().mockReturnValue(false);
    > 72 |       const middleware = requirePermission('users', 'write');
         |                          ^
      73 |       middleware(req, res, next);
      74 |
      75 |       expect(res.status).toHaveBeenCalledWith(403);

      at Object.requirePermission (tests/unit/middleware/adminRBAC.test.js:72:26)

FAIL tests/unit/utils/shortCodeGenerator.test.js
  ● Short Code Generator › generateUniqueShortCode › should throw error after max attempts

    expect(received).resolves.toBeUndefined()

    Received promise rejected instead of resolved
    Rejected to value: [Error: Unable to generate unique short code after maximum attempts]

      59 |       // This will loop 100 times then return undefined
      60 |       // The function should handle this gracefully
    > 61 |       await expect(generateUniqueShortCode(checkExists)).resolves.toBeUndefined();
         |             ^
      62 |       expect(checkExists).toHaveBeenCalledTimes(100);
      63 |     });
      64 |   });

      at expect (node_modules/expect/build/index.js:113:15)
      at Object.expect (tests/unit/utils/shortCodeGenerator.test.js:61:13)

FAIL tests/unit/models/Transformation.test.js
  ● Transformation Model › Schema Validation › should create transformation with required fields

    ValidationError: Transformation validation failed: jobId: Path `jobId` is required., shareCode: Path `shareCode` is required., ai.processingTime: Path `ai.processingTime` is required., ai.prompt: Path `ai.prompt` is required., result.height: Path `result.height` is required., result.width: Path `result.width` is required., result.style: Path `result.style` is required., result.thumbnailUrl: Path `result.thumbnailUrl` is required., result.url: Path `result.url` is required., original.size: Path `original.size` is required., original.filename: Path `original.filename` is required., original.height: Path `original.height` is required., original.width: Path `original.width` is required., original.url: Path `original.url` is required., userId: Path `userId` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Transformation Model › Default Values › should set default status

    ValidationError: Transformation validation failed: jobId: Path `jobId` is required., shareCode: Path `shareCode` is required., ai.processingTime: Path `ai.processingTime` is required., ai.prompt: Path `ai.prompt` is required., result.height: Path `result.height` is required., result.width: Path `result.width` is required., result.style: Path `result.style` is required., result.thumbnailUrl: Path `result.thumbnailUrl` is required., result.url: Path `result.url` is required., original.size: Path `original.size` is required., original.filename: Path `original.filename` is required., original.height: Path `original.height` is required., original.width: Path `original.width` is required., original.url: Path `original.url` is required., userId: Path `userId` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

FAIL tests/unit/models/Tribe.test.js
  ● Tribe Model › Schema Validation › should create tribe with required fields

    ValidationError: Tribe validation failed: emblem.color: Path `emblem.color` is required., emblem.icon: Path `emblem.icon` is required., motto: Path `motto` is required., displayName: Path `displayName` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

  ● Tribe Model › Schema Validation › should enforce unique code constraint

    ValidationError: Tribe validation failed: emblem.color: Path `emblem.color` is required., emblem.icon: Path `emblem.icon` is required., motto: Path `motto` is required., displayName: Path `displayName` is required.

      at model.Object.<anonymous>.Document.invalidate (node_modules/mongoose/lib/document.js:3219:32)
      at node_modules/mongoose/lib/document.js:3012:17
      at node_modules/mongoose/lib/schematype.js:1368:9

FAIL tests/unit/services/providers/whatsappProvider.test.js
  ● Test suite failed to run

    Cannot find module '../utils/logger' from 'src/services/providers/whatsappProvider.js'

    Require stack:
      src/services/providers/whatsappProvider.js
      tests/unit/services/providers/whatsappProvider.test.js

      1 | const axios = require('axios');
    > 2 | const { logger } = require('../utils/logger');
        |                    ^
      3 |
      4 | class WhatsAppProvider {
      5 |   constructor() {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.require (src/services/providers/whatsappProvider.js:2:20)
      at Object.require (tests/unit/services/providers/whatsappProvider.test.js:1:26)

FAIL tests/unit/services/templates/notificationTemplates.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/services/templates/notificationTemplates.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../../../../src/services/templates/notificationTemplates');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/services/targeting/targetingEngine.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/services/targeting/targetingEngine.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../../../../src/services/targeting/targetingEngine');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/services/providers/pushProvider.test.js
  ● Test suite failed to run

    Cannot find module 'firebase-admin' from 'src/services/providers/pushProvider.js'

    Require stack:
      src/services/providers/pushProvider.js
      tests/unit/services/providers/pushProvider.test.js

    > 1 | const admin = require('firebase-admin');
        |                                        ^
      2 | const { logger } = require('../utils/logger');
      3 |
      4 | class PushProvider {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (src/services/providers/pushProvider.js:1:40)
      at Object.require (tests/unit/services/providers/pushProvider.test.js:1:22)

FAIL tests/unit/services/providers/inappProvider.test.js
  ● Test suite failed to run

    Cannot find module '../utils/logger' from 'src/services/providers/inappProvider.js'

    Require stack:
      src/services/providers/inappProvider.js
      tests/unit/services/providers/inappProvider.test.js

      1 | const socketService = require('../../sockets/socketService');
    > 2 | const { logger } = require('../utils/logger');
        |                    ^
      3 |
      4 | class InAppProvider {
      5 |   constructor() {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.require (src/services/providers/inappProvider.js:2:20)
      at Object.require (tests/unit/services/providers/inappProvider.test.js:1:23)

FAIL tests/unit/services/imageService.test.js
  ● Test suite failed to run

    TypeError: fs.existsSync is not a function

    > 1 | const sharp = require('sharp');
        |                               ^
      2 | const fs = require('fs').promises;
      3 | const path = require('path');
      4 | const { logger } = require('../utils/logger');

      at Object.hasVendoredLibvips (node_modules/sharp/lib/libvips.js:86:13)
      at Object.<anonymous> (node_modules/sharp/lib/constructor.js:10:22)
      at Object.<anonymous> (node_modules/sharp/lib/index.js:6:15)
      at Object.<anonymous> (src/services/imageService.js:1:31)
      at Object.require (tests/unit/services/imageService.test.js:1:32)

FAIL tests/unit/services/pushNotificationService.test.js
  ● Test suite failed to run

    Cannot find module 'firebase-admin' from 'tests/unit/services/pushNotificationService.test.js'

    > 1 | jest.mock('firebase-admin', () => {
        |                                   ^
      2 |   const sendMulticast = jest.fn(async () => ({ successCount: 0, failureCount: 1, responses: [{ success: false, error: { code: 'messaging/invalid-registration-token' } }] }));
      3 |   const send = jest.fn(async () => 'message-id');
      4 |   return {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/unit/services/pushNotificationService.test.js:1:35)

FAIL tests/unit/services/storageService.test.js
  ● Test suite failed to run

    TypeError: logger.warn is not a function

      11 |   });
      12 | } else {
    > 13 |   logger.warn('AWS credentials not configured - S3 uploads disabled');
         |          ^
      14 | }
      15 |
      16 | /**

      at Object.warn (src/services/storageService.js:13:10)
      at Object.require (tests/unit/services/storageService.test.js:1:24)

FAIL tests/unit/utils/logger.test.js
  ● Test suite failed to run

    TypeError: winston.format.timestamp is not a function

       5 |   level: process.env.LOG_LEVEL || 'info',
       6 |   format: winston.format.combine(
    >  7 |     winston.format.timestamp({
         |                    ^
       8 |       format: 'YYYY-MM-DD HH:mm:ss'
       9 |     }),
      10 |     winston.format.errors({ stack: true }),

      at Object.timestamp (src/utils/logger.js:7:20)
      at Object.require (tests/unit/utils/logger.test.js:2:20)

FAIL tests/unit/routes/video.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/video.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/video.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/seeders/adminSeeder.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/seeders/adminSeeder.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/seeders/adminSeeder');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/tribe.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/tribe.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/tribe.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/user.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/user.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/user.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/transform.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/transform.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/transform.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/reward.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/reward.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/reward.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/progression.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/progression.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/progression.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/moderation.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/moderation.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/moderation.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/referral.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/referral.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/referral.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/notification.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/notification.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/notification.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/payment.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/payment.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/payment.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/workers/videoWorker.test.js
  ● Test suite failed to run

    TypeError: logger.warn is not a function

      11 |   });
      12 | } else {
    > 13 |   logger.warn('AWS credentials not configured - S3 uploads disabled');
         |          ^
      14 | }
      15 |
      16 | /**

      at Object.warn (src/services/storageService.js:13:10)
      at Object.require (src/services/videoProcessingService.js:5:24)
      at Object.require (src/workers/videoWorker.js:3:32)
      at Object.require (tests/unit/workers/videoWorker.test.js:1:21)

FAIL tests/unit/routes/creator.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/creator.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/creator.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/comment.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/comment.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/comment.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/leaderboard.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/leaderboard.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/leaderboard.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/fraudDetection.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/fraudDetection.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/fraudDetection.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/event.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/event.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/event.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/feed.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/feed.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/feed.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/auth.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/auth.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/auth.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/battle.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/battle.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/battle.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/challenge.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/challenge.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/challenge.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/chat.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/chat.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/chat.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/boost.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/boost.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/boost.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/admin.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/admin.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/admin.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/routes/achievement.routes.test.js
  ● Test suite failed to run

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /Users/abelsifisoshongwe/Desktop/Low Level Design/afroverse/afroverse/server/tests/unit/routes/achievement.routes.test.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){const module = require('../src/routes/achievement.routes');
                                                                                            ^

    SyntaxError: Identifier 'module' has already been declared

      at Runtime.createScriptFromCode (node_modules/jest-runtime/build/index.js:1505:14)

FAIL tests/unit/schedulers/adminSchedulers.test.js
  ● Test suite failed to run

    Cannot find module 'node-cron' from 'tests/unit/schedulers/adminSchedulers.test.js'

       8 | const { logger } = require('../../../src/utils/logger');
       9 |
    > 10 | jest.mock('node-cron');
         |                       ^
      11 | jest.mock('../../../src/services/adminModerationService');
      12 | jest.mock('../../../src/services/adminFraudService');
      13 | jest.mock('../../../src/services/adminUserService');

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/unit/schedulers/adminSchedulers.test.js:10:23)

FAIL tests/unit/schedulers/notificationScheduler.test.js
  ● Test suite failed to run

    Cannot find module 'node-cron' from 'tests/unit/schedulers/notificationScheduler.test.js'

       6 | const { logger } = require('../../../src/utils/logger');
       7 |
    >  8 | jest.mock('node-cron');
         |                       ^
       9 | jest.mock('../../../src/services/notificationService');
      10 | jest.mock('../../../src/models/User');
      11 | jest.mock('../../../src/models/Tribe');

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/unit/schedulers/notificationScheduler.test.js:8:23)

FAIL tests/unit/controllers/transformController.test.js
  ● Test suite failed to run

    Cannot find module '../../../src/services/transformService' from 'tests/unit/controllers/transformController.test.js'

      3 | const { logger } = require('../../../src/utils/logger');
      4 |
    > 5 | jest.mock('../../../src/services/transformService');
        |                                                    ^
      6 | jest.mock('../../../src/utils/logger', () => ({
      7 |   logger: {
      8 |     error: jest.fn(),

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (tests/unit/controllers/transformController.test.js:5:52)

FAIL tests/unit/middleware/imageUpload.test.js
  ● Test suite failed to run

    TypeError: Cannot read properties of undefined (reading 'single')

      44 |
      45 | // Middleware for single image upload
    > 46 | const uploadSingleImage = upload.single('image');
         |                                  ^
      47 |
      48 | // Enhanced upload middleware with validation
      49 | const uploadImageMiddleware = (req, res, next) => {

      at Object.single (src/middleware/imageUpload.js:46:34)
      at Object.require (tests/unit/middleware/imageUpload.test.js:2:21)

FAIL tests/unit/app.test.js
  ● Test suite failed to run

    Cannot find module '../../../src/app' from 'tests/unit/app.test.js'

    > 1 | const app = require('../../../src/app');
        |             ^
      2 | const http = require('http');
      3 |
      4 | jest.mock('http');

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.require (tests/unit/app.test.js:1:13)

FAIL tests/unit/controllers/videoController.test.js
  ● Test suite failed to run

    TypeError: logger.warn is not a function

      11 |   });
      12 | } else {
    > 13 |   logger.warn('AWS credentials not configured - S3 uploads disabled');
         |          ^
      14 | }
      15 |
      16 | /**

      at Object.warn (src/services/storageService.js:13:10)
      at Object.require (src/services/videoProcessingService.js:5:24)
      at Object.<anonymous> (src/controllers/videoController.js:1:77)
      at Object.require (tests/unit/controllers/videoController.test.js:1:25)

FAIL tests/unit/controllers/paymentController.test.js
  ● Test suite failed to run

    TypeError: logger.warn is not a function

      18 |       }
      19 |     } else {
    > 20 |       logger.warn('Stripe not configured - payments will be disabled');
         |              ^
      21 |     }
      22 |   }
      23 |

      at new warn (src/services/paymentService.js:20:14)
      at Object.<anonymous> (src/services/paymentService.js:498:24)
      at Object.<anonymous> (src/controllers/paymentController.js:1:61)
      at Object.require (tests/unit/controllers/paymentController.test.js:1:27)


Test Suites: 67 failed, 168 passed, 235 total
Tests:       143 failed, 2551 passed, 2694 total
Snapshots:   0 total
Time:        25.484 s
Ran all test suites.
